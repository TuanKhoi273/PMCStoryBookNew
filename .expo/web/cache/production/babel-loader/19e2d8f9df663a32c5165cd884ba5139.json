{"ast":null,"code":"export default function omitListItemParagraph(tokens){var depth=null;return tokens.filter(function(token,index){if(depth!==null){depth=depth+token.nesting;}if(token.type==='list_item'&&token.nesting===1&&depth===null){var next=index+1 in tokens?tokens[index+1]:null;if(next&&next.type==='paragraph'&&next.nesting===1){depth=0;return true;}}else if(token.type==='paragraph'){if(token.nesting===1&&depth===1){return false;}else if(token.nesting===-1&&depth===0){depth=null;return false;}}return true;});}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/node_modules/react-native-markdown-display/src/lib/util/omitListItemParagraph.js"],"names":["omitListItemParagraph","tokens","depth","filter","token","index","nesting","type","next"],"mappings":"AAAA,cAAe,SAASA,CAAAA,qBAAT,CAA+BC,MAA/B,CAAuC,CAEpD,GAAIC,CAAAA,KAAK,CAAG,IAAZ,CACA,MAAOD,CAAAA,MAAM,CAACE,MAAP,CAAc,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAErC,GAAIH,KAAK,GAAK,IAAd,CAAoB,CAClBA,KAAK,CAAGA,KAAK,CAAGE,KAAK,CAACE,OAAtB,CACD,CAGD,GAAIF,KAAK,CAACG,IAAN,GAAe,WAAf,EAA8BH,KAAK,CAACE,OAAN,GAAkB,CAAhD,EAAqDJ,KAAK,GAAK,IAAnE,CAAyE,CACvE,GAAMM,CAAAA,IAAI,CAAGH,KAAK,CAAG,CAAR,GAAaJ,CAAAA,MAAb,CAAsBA,MAAM,CAACI,KAAK,CAAG,CAAT,CAA5B,CAA0C,IAAvD,CACA,GAAIG,IAAI,EAAIA,IAAI,CAACD,IAAL,GAAc,WAAtB,EAAqCC,IAAI,CAACF,OAAL,GAAiB,CAA1D,CAA6D,CAC3DJ,KAAK,CAAG,CAAR,CACA,MAAO,KAAP,CACD,CACF,CAND,IAMO,IAAIE,KAAK,CAACG,IAAN,GAAe,WAAnB,CAAgC,CACrC,GAAIH,KAAK,CAACE,OAAN,GAAkB,CAAlB,EAAuBJ,KAAK,GAAK,CAArC,CAAwC,CAEtC,MAAO,MAAP,CACD,CAHD,IAGO,IAAIE,KAAK,CAACE,OAAN,GAAkB,CAAC,CAAnB,EAAwBJ,KAAK,GAAK,CAAtC,CAAyC,CAE9CA,KAAK,CAAG,IAAR,CACA,MAAO,MAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CAxBM,CAAP,CAyBD","sourcesContent":["export default function omitListItemParagraph(tokens) {\n  // used to ensure that we remove the correct ending paragraph token\n  let depth = null;\n  return tokens.filter((token, index) => {\n    // update depth if we've already removed a starting paragraph token\n    if (depth !== null) {\n      depth = depth + token.nesting;\n    }\n\n    // check for a list_item token followed by paragraph token (to remove)\n    if (token.type === 'list_item' && token.nesting === 1 && depth === null) {\n      const next = index + 1 in tokens ? tokens[index + 1] : null;\n      if (next && next.type === 'paragraph' && next.nesting === 1) {\n        depth = 0;\n        return true;\n      }\n    } else if (token.type === 'paragraph') {\n      if (token.nesting === 1 && depth === 1) {\n        // remove the paragraph token immediately after the list_item token\n        return false;\n      } else if (token.nesting === -1 && depth === 0) {\n        // remove the ending paragraph token; reset depth\n        depth = null;\n        return false;\n      }\n    }\n    return true;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}