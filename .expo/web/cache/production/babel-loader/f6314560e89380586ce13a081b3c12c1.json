{"ast":null,"code":"import React,{useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{ColorApp,FontText,ButtonType,ButtonState}from\"../index\";import Icon from\"@expo/vector-icons/Feather\";var styles=StyleSheet.create({container:{backgroundColor:ColorApp.PRIMARY.blue_04,width:\"100%\",height:54,borderRadius:12,justifyContent:\"center\",alignItems:\"center\",flexDirection:\"row\"},textStyle:{color:ColorApp.NEUTRAL.gray_07,marginHorizontal:2}});var BUTTON_COLOR={DEFAULT_BUTTON_COLOR:ColorApp.PRIMARY.blue_04,ACTIVE_BUTTON_COLOR:ColorApp.PRIMARY.blue_05,DISABLE_BUTTON_COLOR:ColorApp.NEUTRAL.gray_02};function Button(props){var customStyle=props.customStyle,customTextStyle=props.customTextStyle,name=props.name,onPress=props.onPress,_props$type=props.type,type=_props$type===void 0?ButtonType.DEFAULT:_props$type,_props$state=props.state,state=_props$state===void 0?ButtonState.DEFAULT:_props$state,_props$iconColor=props.iconColor,iconColor=_props$iconColor===void 0?\"black\":_props$iconColor,_props$enableButtonLe=props.enableButtonLeft,enableButtonLeft=_props$enableButtonLe===void 0?false:_props$enableButtonLe,_props$enableButtonRi=props.enableButtonRight,enableButtonRight=_props$enableButtonRi===void 0?false:_props$enableButtonRi,_props$customLeftComp=props.customLeftComponent,customLeftComponent=_props$customLeftComp===void 0?null:_props$customLeftComp,_props$customRightCom=props.customRightComponent,customRightComponent=_props$customRightCom===void 0?null:_props$customRightCom,_props$leftIconName=props.leftIconName,leftIconName=_props$leftIconName===void 0?\"chevron-left\":_props$leftIconName,_props$rightIconName=props.rightIconName,rightIconName=_props$rightIconName===void 0?\"chevron-right\":_props$rightIconName;useEffect(function(){},[]);var getButtonColor=function getButtonColor(){switch(state){case ButtonState.ACTIVE:return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;case ButtonState.DISABLE:return BUTTON_COLOR.DISABLE_BUTTON_COLOR;default:return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;}};var defaultButtonStyle={backgroundColor:getButtonColor()};var ghostButtonStyle={backgroundColor:\"white\",borderWidth:1,borderColor:getButtonColor()};var buttonStyle=[styles.container,type==ButtonType.GHOST?ghostButtonStyle:defaultButtonStyle,customStyle!=null?customStyle:{}];var defaultTextStyle={color:\"white\"};var ghostTextStyle={color:getButtonColor()};var textStyle=[styles.textStyle,type==ButtonType.GHOST?ghostTextStyle:defaultTextStyle,customTextStyle!=null?customTextStyle:{}];return React.createElement(View,{opacity:state==ButtonState.DISABLE?0.8:1},React.createElement(TouchableOpacity,{style:[buttonStyle],onPress:state==ButtonState.DISABLE?null:onPress,activeOpacity:state==ButtonState.DISABLE?1:0.2},customLeftComponent?customLeftComponent:null,enableButtonLeft?React.createElement(Icon,{name:leftIconName,color:iconColor,size:24}):null,React.createElement(FontText.Button1,{style:textStyle},name),enableButtonRight?React.createElement(Icon,{name:rightIconName,color:iconColor,size:24}):null,customRightComponent?customRightComponent:null));}export default Button;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/src/component/Common/Button.js"],"names":["React","useEffect","ColorApp","FontText","ButtonType","ButtonState","Icon","styles","StyleSheet","create","container","backgroundColor","PRIMARY","blue_04","width","height","borderRadius","justifyContent","alignItems","flexDirection","textStyle","color","NEUTRAL","gray_07","marginHorizontal","BUTTON_COLOR","DEFAULT_BUTTON_COLOR","ACTIVE_BUTTON_COLOR","blue_05","DISABLE_BUTTON_COLOR","gray_02","Button","props","customStyle","customTextStyle","name","onPress","type","DEFAULT","state","iconColor","enableButtonLeft","enableButtonRight","customLeftComponent","customRightComponent","leftIconName","rightIconName","getButtonColor","ACTIVE","DISABLE","defaultButtonStyle","ghostButtonStyle","borderWidth","borderColor","buttonStyle","GHOST","defaultTextStyle","ghostTextStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ColorApp, FontText, ButtonType, ButtonState } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: ColorApp.PRIMARY.blue_04,\n    width: \"100%\",\n    height: 54,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    marginHorizontal: 2,\n  },\n});\n\nconst BUTTON_COLOR = {\n  DEFAULT_BUTTON_COLOR: ColorApp.PRIMARY.blue_04,\n  ACTIVE_BUTTON_COLOR: ColorApp.PRIMARY.blue_05,\n  DISABLE_BUTTON_COLOR: ColorApp.NEUTRAL.gray_02,\n};\n\nfunction Button(props) {\n  const {\n    customStyle,\n    customTextStyle,\n    name,\n    onPress,\n    type = ButtonType.DEFAULT,\n    state = ButtonState.DEFAULT,\n    iconColor = \"black\",\n    enableButtonLeft = false,\n    enableButtonRight = false,\n    customLeftComponent = null,\n    customRightComponent = null,\n    leftIconName = \"chevron-left\",\n    rightIconName = \"chevron-right\",\n  } = props;\n  useEffect(() => {}, []);\n  const getButtonColor = () => {\n    switch (state) {\n      case ButtonState.ACTIVE:\n        return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;\n      case ButtonState.DISABLE:\n        return BUTTON_COLOR.DISABLE_BUTTON_COLOR;\n      default:\n        return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;\n    }\n  };\n  const defaultButtonStyle = { backgroundColor: getButtonColor() };\n  const ghostButtonStyle = {\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: getButtonColor(),\n  };\n  const buttonStyle = [\n    styles.container,\n    type == ButtonType.GHOST ? ghostButtonStyle : defaultButtonStyle,\n    customStyle ?? {},\n  ];\n\n  const defaultTextStyle = { color: \"white\" };\n  const ghostTextStyle = {\n    color: getButtonColor(),\n  };\n  const textStyle = [\n    styles.textStyle,\n    type == ButtonType.GHOST ? ghostTextStyle : defaultTextStyle,\n    customTextStyle ?? {},\n  ];\n  return (\n    <View opacity={state == ButtonState.DISABLE ? 0.8 : 1}>\n      <TouchableOpacity\n        style={[buttonStyle]}\n        onPress={state == ButtonState.DISABLE ? null : onPress}\n        activeOpacity={state == ButtonState.DISABLE ? 1 : 0.2}\n      >\n        {customLeftComponent ? customLeftComponent : null}\n        {enableButtonLeft ? (\n          <Icon name={leftIconName} color={iconColor} size={24} />\n        ) : null}\n        <FontText.Button1 style={textStyle}>{name}</FontText.Button1>\n        {enableButtonRight ? (\n          <Icon name={rightIconName} color={iconColor} size={24} />\n        ) : null}\n        {customRightComponent ? customRightComponent : null}\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}