{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"animationIn\",\"animationInTiming\",\"animationOut\",\"animationOutTiming\",\"avoidKeyboard\",\"coverScreen\",\"hasBackdrop\",\"backdropColor\",\"backdropOpacity\",\"backdropTransitionInTiming\",\"backdropTransitionOutTiming\",\"customBackdrop\",\"children\",\"isVisible\",\"onModalShow\",\"onBackButtonPress\",\"useNativeDriver\",\"propagateSwipe\",\"style\"],_excluded2=[\"testID\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import DeviceEventEmitter from\"react-native-web/dist/exports/DeviceEventEmitter\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Modal from\"react-native-web/dist/exports/Modal\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import*as PropTypes from'prop-types';import*as animatable from'react-native-animatable';import{initializeAnimations,buildAnimations,reversePercentage}from\"./utils\";import styles from\"./modal.style\";initializeAnimations();var extractAnimationFromProps=function extractAnimationFromProps(props){return{animationIn:props.animationIn,animationOut:props.animationOut};};export var ReactNativeModal=function(_React$Component){_inherits(ReactNativeModal,_React$Component);var _super=_createSuper(ReactNativeModal);function ReactNativeModal(props){var _this;_classCallCheck(this,ReactNativeModal);_this=_super.call(this,props);_this.state={showContent:true,isVisible:false,deviceWidth:Dimensions.get('window').width,deviceHeight:Dimensions.get('window').height,isSwipeable:!!_this.props.swipeDirection,pan:null};_this.isTransitioning=false;_this.inSwipeClosingState=false;_this.currentSwipingDirection=null;_this.panResponder=null;_this.getDeviceHeight=function(){return _this.props.deviceHeight||_this.state.deviceHeight;};_this.getDeviceWidth=function(){return _this.props.deviceWidth||_this.state.deviceWidth;};_this.onBackButtonPress=function(){if(_this.props.onBackButtonPress&&_this.props.isVisible){_this.props.onBackButtonPress();return true;}return false;};_this.shouldPropagateSwipe=function(evt,gestureState){return typeof _this.props.propagateSwipe==='function'?_this.props.propagateSwipe(evt,gestureState):_this.props.propagateSwipe;};_this.buildPanResponder=function(){var animEvt=null;_this.panResponder=PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){if(!_this.shouldPropagateSwipe(evt,gestureState)){var shouldSetPanResponder=Math.abs(gestureState.dx)>=_this.props.panResponderThreshold||Math.abs(gestureState.dy)>=_this.props.panResponderThreshold;if(shouldSetPanResponder&&_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();return shouldSetPanResponder;}return false;},onStartShouldSetPanResponder:function onStartShouldSetPanResponder(e,gestureState){var hasScrollableView=e._dispatchInstances&&e._dispatchInstances.some(function(instance){return /scrollview|flatlist/i.test(instance.type);});if(hasScrollableView&&_this.shouldPropagateSwipe(e,gestureState)&&_this.props.scrollTo&&_this.props.scrollOffset>0){return false;}if(_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=null;return true;},onPanResponderMove:function onPanResponderMove(evt,gestureState){if(!_this.currentSwipingDirection){if(gestureState.dx===0&&gestureState.dy===0){return;}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();}if(_this.isSwipeDirectionAllowed(gestureState)){var newOpacityFactor=1-_this.calcDistancePercentage(gestureState);_this.backdropRef&&_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity*newOpacityFactor});animEvt(evt,gestureState);if(_this.props.onSwipeMove){_this.props.onSwipeMove(newOpacityFactor,gestureState);}}else{if(_this.props.scrollTo){if(_this.props.scrollHorizontal){var offsetX=-gestureState.dx;if(offsetX>_this.props.scrollOffsetMax){offsetX-=(offsetX-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({x:offsetX,animated:false});}else{var offsetY=-gestureState.dy;if(offsetY>_this.props.scrollOffsetMax){offsetY-=(offsetY-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({y:offsetY,animated:false});}}}},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){var accDistance=_this.getAccDistancePerDirection(gestureState);if(accDistance>_this.props.swipeThreshold&&_this.isSwipeDirectionAllowed(gestureState)){if(_this.props.onSwipeComplete){_this.inSwipeClosingState=true;_this.props.onSwipeComplete({swipingDirection:_this.getSwipingDirection(gestureState)},gestureState);return;}if(_this.props.onSwipe){_this.inSwipeClosingState=true;_this.props.onSwipe();return;}}if(_this.props.onSwipeCancel){_this.props.onSwipeCancel(gestureState);}if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity});}Animated.spring(_this.state.pan,{toValue:{x:0,y:0},bounciness:0,useNativeDriver:false}).start();if(_this.props.scrollTo){if(_this.props.scrollOffset>_this.props.scrollOffsetMax){_this.props.scrollTo({y:_this.props.scrollOffsetMax,animated:true});}}}});};_this.getAccDistancePerDirection=function(gestureState){switch(_this.currentSwipingDirection){case'up':return-gestureState.dy;case'down':return gestureState.dy;case'right':return gestureState.dx;case'left':return-gestureState.dx;default:return 0;}};_this.getSwipingDirection=function(gestureState){if(Math.abs(gestureState.dx)>Math.abs(gestureState.dy)){return gestureState.dx>0?'right':'left';}return gestureState.dy>0?'down':'up';};_this.calcDistancePercentage=function(gestureState){switch(_this.currentSwipingDirection){case'down':return(gestureState.moveY-gestureState.y0)/((_this.props.deviceHeight||_this.state.deviceHeight)-gestureState.y0);case'up':return reversePercentage(gestureState.moveY/gestureState.y0);case'left':return reversePercentage(gestureState.moveX/gestureState.x0);case'right':return(gestureState.moveX-gestureState.x0)/((_this.props.deviceWidth||_this.state.deviceWidth)-gestureState.x0);default:return 0;}};_this.createAnimationEventForSwipe=function(){if(_this.currentSwipingDirection==='right'||_this.currentSwipingDirection==='left'){return Animated.event([null,{dx:_this.state.pan.x}],{useNativeDriver:false});}else{return Animated.event([null,{dy:_this.state.pan.y}],{useNativeDriver:false});}};_this.isDirectionIncluded=function(direction){return Array.isArray(_this.props.swipeDirection)?_this.props.swipeDirection.includes(direction):_this.props.swipeDirection===direction;};_this.isSwipeDirectionAllowed=function(_ref){var dy=_ref.dy,dx=_ref.dx;var draggedDown=dy>0;var draggedUp=dy<0;var draggedLeft=dx<0;var draggedRight=dx>0;if(_this.currentSwipingDirection==='up'&&_this.isDirectionIncluded('up')&&draggedUp){return true;}else if(_this.currentSwipingDirection==='down'&&_this.isDirectionIncluded('down')&&draggedDown){return true;}else if(_this.currentSwipingDirection==='right'&&_this.isDirectionIncluded('right')&&draggedRight){return true;}else if(_this.currentSwipingDirection==='left'&&_this.isDirectionIncluded('left')&&draggedLeft){return true;}return false;};_this.handleDimensionsUpdate=function(){if(!_this.props.deviceHeight&&!_this.props.deviceWidth){var deviceWidth=Dimensions.get('window').width;var deviceHeight=Dimensions.get('window').height;if(deviceWidth!==_this.state.deviceWidth||deviceHeight!==_this.state.deviceHeight){_this.setState({deviceWidth:deviceWidth,deviceHeight:deviceHeight});}}};_this.open=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity},_this.props.backdropTransitionInTiming);}if(_this.state.isSwipeable){_this.state.pan.setValue({x:0,y:0});}if(_this.contentRef){_this.props.onModalWillShow&&_this.props.onModalWillShow();var interactionHandle=InteractionManager.createInteractionHandle();_this.contentRef.animate(_this.animationIn,_this.props.animationInTiming).then(function(){_this.isTransitioning=false;InteractionManager.clearInteractionHandle(interactionHandle);if(!_this.props.isVisible){_this.close();}else{_this.props.onModalShow();}});}};_this.close=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:0},_this.props.backdropTransitionOutTiming);}var animationOut=_this.animationOut;if(_this.inSwipeClosingState){_this.inSwipeClosingState=false;if(_this.currentSwipingDirection==='up'){animationOut='slideOutUp';}else if(_this.currentSwipingDirection==='down'){animationOut='slideOutDown';}else if(_this.currentSwipingDirection==='right'){animationOut='slideOutRight';}else if(_this.currentSwipingDirection==='left'){animationOut='slideOutLeft';}}if(_this.contentRef){_this.props.onModalWillHide&&_this.props.onModalWillHide();var interactionHandle=InteractionManager.createInteractionHandle();_this.contentRef.animate(animationOut,_this.props.animationOutTiming).then(function(){_this.isTransitioning=false;InteractionManager.clearInteractionHandle(interactionHandle);if(_this.props.isVisible){_this.open();}else{_this.setState({showContent:false},function(){_this.setState({isVisible:false},function(){_this.props.onModalHide();});});}});}};_this.makeBackdrop=function(){if(!_this.props.hasBackdrop){return null;}if(_this.props.customBackdrop&&!React.isValidElement(_this.props.customBackdrop)){console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');}var _this$props=_this.props,customBackdrop=_this$props.customBackdrop,backdropColor=_this$props.backdropColor,useNativeDriver=_this$props.useNativeDriver,useNativeDriverForBackdrop=_this$props.useNativeDriverForBackdrop,onBackdropPress=_this$props.onBackdropPress;var hasCustomBackdrop=!!_this.props.customBackdrop;var backdropComputedStyle=[{width:_this.getDeviceWidth(),height:_this.getDeviceHeight(),backgroundColor:_this.state.showContent&&!hasCustomBackdrop?backdropColor:'transparent'}];var backdropWrapper=React.createElement(animatable.View,{ref:function ref(_ref2){return _this.backdropRef=_ref2;},useNativeDriver:useNativeDriverForBackdrop!==undefined?useNativeDriverForBackdrop:useNativeDriver,style:[styles.backdrop,backdropComputedStyle]},hasCustomBackdrop&&customBackdrop);if(hasCustomBackdrop){return backdropWrapper;}return React.createElement(TouchableWithoutFeedback,{onPress:onBackdropPress},backdropWrapper);};var _buildAnimations=buildAnimations(extractAnimationFromProps(props)),animationIn=_buildAnimations.animationIn,animationOut=_buildAnimations.animationOut;_this.animationIn=animationIn;_this.animationOut=animationOut;if(_this.state.isSwipeable){_this.state=_objectSpread(_objectSpread({},_this.state),{},{pan:new Animated.ValueXY()});_this.buildPanResponder();}if(props.isVisible){_this.state=_objectSpread(_objectSpread({},_this.state),{},{isVisible:true,showContent:true});}return _this;}_createClass(ReactNativeModal,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.onSwipe){console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');}DeviceEventEmitter.addListener('didUpdateDimensions',this.handleDimensionsUpdate);if(this.state.isVisible){this.open();}BackHandler.addEventListener('hardwareBackPress',this.onBackButtonPress);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){BackHandler.removeEventListener('hardwareBackPress',this.onBackButtonPress);DeviceEventEmitter.removeListener('didUpdateDimensions',this.handleDimensionsUpdate);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.animationIn!==prevProps.animationIn||this.props.animationOut!==prevProps.animationOut){var _buildAnimations2=buildAnimations(extractAnimationFromProps(this.props)),animationIn=_buildAnimations2.animationIn,animationOut=_buildAnimations2.animationOut;this.animationIn=animationIn;this.animationOut=animationOut;}if(this.props.backdropOpacity!==prevProps.backdropOpacity&&this.backdropRef){this.backdropRef.transitionTo({opacity:this.props.backdropOpacity},this.props.backdropTransitionInTiming);}if(this.props.isVisible&&!prevProps.isVisible){this.open();}else if(!this.props.isVisible&&prevProps.isVisible){this.close();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,animationIn=_this$props2.animationIn,animationInTiming=_this$props2.animationInTiming,animationOut=_this$props2.animationOut,animationOutTiming=_this$props2.animationOutTiming,avoidKeyboard=_this$props2.avoidKeyboard,coverScreen=_this$props2.coverScreen,hasBackdrop=_this$props2.hasBackdrop,backdropColor=_this$props2.backdropColor,backdropOpacity=_this$props2.backdropOpacity,backdropTransitionInTiming=_this$props2.backdropTransitionInTiming,backdropTransitionOutTiming=_this$props2.backdropTransitionOutTiming,customBackdrop=_this$props2.customBackdrop,children=_this$props2.children,isVisible=_this$props2.isVisible,onModalShow=_this$props2.onModalShow,onBackButtonPress=_this$props2.onBackButtonPress,useNativeDriver=_this$props2.useNativeDriver,propagateSwipe=_this$props2.propagateSwipe,style=_this$props2.style,otherProps=_objectWithoutProperties(_this$props2,_excluded);var testID=otherProps.testID,containerProps=_objectWithoutProperties(otherProps,_excluded2);var computedStyle=[{margin:this.getDeviceWidth()*0.05,transform:[{translateY:0}]},styles.content,style];var panHandlers={};var panPosition={};if(this.state.isSwipeable){panHandlers=_objectSpread({},this.panResponder.panHandlers);if(useNativeDriver){panPosition={transform:this.state.pan.getTranslateTransform()};}else{panPosition=this.state.pan.getLayout();}}var _children=this.props.hideModalContentWhileAnimating&&this.props.useNativeDriver&&!this.state.showContent?React.createElement(animatable.View,null):children;var containerView=React.createElement(animatable.View,_extends({},panHandlers,{ref:function ref(_ref3){return _this2.contentRef=_ref3;},style:[panPosition,computedStyle],pointerEvents:\"box-none\",useNativeDriver:useNativeDriver},containerProps),_children);if(!coverScreen&&this.state.isVisible){return React.createElement(View,{pointerEvents:\"box-none\",style:[styles.backdrop,styles.containerBox]},this.makeBackdrop(),containerView);}return React.createElement(Modal,_extends({transparent:true,animationType:'none',visible:this.state.isVisible,onRequestClose:onBackButtonPress},otherProps),this.makeBackdrop(),avoidKeyboard?React.createElement(KeyboardAvoidingView,{behavior:Platform.OS==='ios'?'padding':undefined,pointerEvents:\"box-none\",style:computedStyle.concat([{margin:0}])},containerView):containerView);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,state){if(!state.isVisible&&nextProps.isVisible){return{isVisible:true,showContent:true};}return null;}}]);return ReactNativeModal;}(React.Component);ReactNativeModal.propTypes={animationIn:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationInTiming:PropTypes.number,animationOut:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationOutTiming:PropTypes.number,avoidKeyboard:PropTypes.bool,coverScreen:PropTypes.bool,hasBackdrop:PropTypes.bool,backdropColor:PropTypes.string,backdropOpacity:PropTypes.number,backdropTransitionInTiming:PropTypes.number,backdropTransitionOutTiming:PropTypes.number,customBackdrop:PropTypes.node,children:PropTypes.node.isRequired,deviceHeight:PropTypes.number,deviceWidth:PropTypes.number,isVisible:PropTypes.bool.isRequired,hideModalContentWhileAnimating:PropTypes.bool,propagateSwipe:PropTypes.oneOfType([PropTypes.bool,PropTypes.func]),onModalShow:PropTypes.func,onModalWillShow:PropTypes.func,onModalHide:PropTypes.func,onModalWillHide:PropTypes.func,onBackButtonPress:PropTypes.func,onBackdropPress:PropTypes.func,panResponderThreshold:PropTypes.number,onSwipeStart:PropTypes.func,onSwipeMove:PropTypes.func,onSwipeComplete:PropTypes.func,onSwipeCancel:PropTypes.func,swipeThreshold:PropTypes.number,swipeDirection:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['up','down','left','right'])),PropTypes.oneOf(['up','down','left','right'])]),useNativeDriver:PropTypes.bool,useNativeDriverForBackdrop:PropTypes.bool,style:PropTypes.any,scrollTo:PropTypes.func,scrollOffset:PropTypes.number,scrollOffsetMax:PropTypes.number,scrollHorizontal:PropTypes.bool,supportedOrientations:PropTypes.arrayOf(PropTypes.oneOf(['portrait','portrait-upside-down','landscape','landscape-left','landscape-right']))};ReactNativeModal.defaultProps={animationIn:'slideInUp',animationInTiming:300,animationOut:'slideOutDown',animationOutTiming:300,avoidKeyboard:false,coverScreen:true,hasBackdrop:true,backdropColor:'black',backdropOpacity:0.7,backdropTransitionInTiming:300,backdropTransitionOutTiming:300,customBackdrop:null,useNativeDriver:false,deviceHeight:null,deviceWidth:null,hideModalContentWhileAnimating:false,propagateSwipe:false,isVisible:false,onModalShow:function onModalShow(){return null;},onModalWillShow:function onModalWillShow(){return null;},onModalHide:function onModalHide(){return null;},onModalWillHide:function onModalWillHide(){return null;},onBackdropPress:function onBackdropPress(){return null;},onBackButtonPress:function onBackButtonPress(){return null;},panResponderThreshold:4,swipeThreshold:100,scrollTo:null,scrollOffset:0,scrollOffsetMax:0,scrollHorizontal:false,supportedOrientations:['portrait','landscape']};export default ReactNativeModal;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/node_modules/react-native-modal/dist/modal.js"],"names":["React","PropTypes","animatable","initializeAnimations","buildAnimations","reversePercentage","styles","extractAnimationFromProps","props","animationIn","animationOut","ReactNativeModal","state","showContent","isVisible","deviceWidth","Dimensions","get","width","deviceHeight","height","isSwipeable","swipeDirection","pan","isTransitioning","inSwipeClosingState","currentSwipingDirection","panResponder","getDeviceHeight","getDeviceWidth","onBackButtonPress","shouldPropagateSwipe","evt","gestureState","propagateSwipe","buildPanResponder","animEvt","PanResponder","create","onMoveShouldSetPanResponder","shouldSetPanResponder","Math","abs","dx","panResponderThreshold","dy","onSwipeStart","getSwipingDirection","createAnimationEventForSwipe","onStartShouldSetPanResponder","e","hasScrollableView","_dispatchInstances","some","instance","test","type","scrollTo","scrollOffset","onPanResponderMove","isSwipeDirectionAllowed","newOpacityFactor","calcDistancePercentage","backdropRef","transitionTo","opacity","backdropOpacity","onSwipeMove","scrollHorizontal","offsetX","scrollOffsetMax","x","animated","offsetY","y","onPanResponderRelease","accDistance","getAccDistancePerDirection","swipeThreshold","onSwipeComplete","swipingDirection","onSwipe","onSwipeCancel","Animated","spring","toValue","bounciness","useNativeDriver","start","moveY","y0","moveX","x0","event","isDirectionIncluded","direction","Array","isArray","includes","draggedDown","draggedUp","draggedLeft","draggedRight","handleDimensionsUpdate","setState","open","backdropTransitionInTiming","setValue","contentRef","onModalWillShow","interactionHandle","InteractionManager","createInteractionHandle","animate","animationInTiming","then","clearInteractionHandle","close","onModalShow","backdropTransitionOutTiming","onModalWillHide","animationOutTiming","onModalHide","makeBackdrop","hasBackdrop","customBackdrop","isValidElement","console","warn","backdropColor","useNativeDriverForBackdrop","onBackdropPress","hasCustomBackdrop","backdropComputedStyle","backgroundColor","backdropWrapper","createElement","View","ref","undefined","style","backdrop","TouchableWithoutFeedback","onPress","ValueXY","DeviceEventEmitter","addListener","BackHandler","addEventListener","removeEventListener","removeListener","prevProps","avoidKeyboard","coverScreen","children","otherProps","testID","containerProps","computedStyle","margin","transform","translateY","content","panHandlers","panPosition","getTranslateTransform","getLayout","_children","hideModalContentWhileAnimating","containerView","pointerEvents","containerBox","Modal","transparent","animationType","visible","onRequestClose","KeyboardAvoidingView","behavior","Platform","OS","concat","nextProps","Component","propTypes","oneOfType","string","object","number","bool","node","isRequired","func","arrayOf","oneOf","any","supportedOrientations","defaultProps"],"mappings":"01EAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,mwBAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,YAA3B,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,yBAA5B,CACA,OAASC,oBAAT,CAA+BC,eAA/B,CAAgDC,iBAAhD,eACA,MAAOC,CAAAA,MAAP,qBAEAH,oBAAoB,GACpB,GAAMI,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,KAAD,QAAY,CAC1CC,WAAW,CAAED,KAAK,CAACC,WADuB,CAE1CC,YAAY,CAAEF,KAAK,CAACE,YAFsB,CAAZ,EAAlC,CAIA,UAAaC,CAAAA,gBAAb,mHACI,0BAAYH,KAAZ,CAAmB,kDACf,uBAAMA,KAAN,EAMA,MAAKI,KAAL,CAAa,CACTC,WAAW,CAAE,IADJ,CAETC,SAAS,CAAE,KAFF,CAGTC,WAAW,CAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAH7B,CAITC,YAAY,CAAEH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAJ9B,CAKTC,WAAW,CAAE,CAAC,CAAC,MAAKb,KAAL,CAAWc,cALjB,CAMTC,GAAG,CAAE,IANI,CAAb,CAQA,MAAKC,eAAL,CAAuB,KAAvB,CACA,MAAKC,mBAAL,CAA2B,KAA3B,CACA,MAAKC,uBAAL,CAA+B,IAA/B,CACA,MAAKC,YAAL,CAAoB,IAApB,CACA,MAAKC,eAAL,CAAuB,iBAAM,OAAKpB,KAAL,CAAWW,YAAX,EAA2B,MAAKP,KAAL,CAAWO,YAA5C,EAAvB,CACA,MAAKU,cAAL,CAAsB,iBAAM,OAAKrB,KAAL,CAAWO,WAAX,EAA0B,MAAKH,KAAL,CAAWG,WAA3C,EAAtB,CACA,MAAKe,iBAAL,CAAyB,UAAM,CAC3B,GAAI,MAAKtB,KAAL,CAAWsB,iBAAX,EAAgC,MAAKtB,KAAL,CAAWM,SAA/C,CAA0D,CACtD,MAAKN,KAAL,CAAWsB,iBAAX,GACA,MAAO,KAAP,CACH,CACD,MAAO,MAAP,CACH,CAND,CAOA,MAAKC,oBAAL,CAA4B,SAACC,GAAD,CAAMC,YAAN,CAAuB,CAC/C,MAAO,OAAO,OAAKzB,KAAL,CAAW0B,cAAlB,GAAqC,UAArC,CACD,MAAK1B,KAAL,CAAW0B,cAAX,CAA0BF,GAA1B,CAA+BC,YAA/B,CADC,CAED,MAAKzB,KAAL,CAAW0B,cAFjB,CAGH,CAJD,CAKA,MAAKC,iBAAL,CAAyB,UAAM,CAC3B,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,MAAKT,YAAL,CAAoBU,YAAY,CAACC,MAAb,CAAoB,CACpCC,2BAA2B,CAAE,qCAACP,GAAD,CAAMC,YAAN,CAAuB,CAGhD,GAAI,CAAC,MAAKF,oBAAL,CAA0BC,GAA1B,CAA+BC,YAA/B,CAAL,CAAmD,CAO/C,GAAMO,CAAAA,qBAAqB,CAAGC,IAAI,CAACC,GAAL,CAAST,YAAY,CAACU,EAAtB,GAA6B,MAAKnC,KAAL,CAAWoC,qBAAxC,EAC1BH,IAAI,CAACC,GAAL,CAAST,YAAY,CAACY,EAAtB,GAA6B,MAAKrC,KAAL,CAAWoC,qBAD5C,CAEA,GAAIJ,qBAAqB,EAAI,MAAKhC,KAAL,CAAWsC,YAAxC,CAAsD,CAClD,MAAKtC,KAAL,CAAWsC,YAAX,CAAwBb,YAAxB,EACH,CACD,MAAKP,uBAAL,CAA+B,MAAKqB,mBAAL,CAAyBd,YAAzB,CAA/B,CACAG,OAAO,CAAG,MAAKY,4BAAL,EAAV,CACA,MAAOR,CAAAA,qBAAP,CACH,CACD,MAAO,MAAP,CACH,CArBmC,CAsBpCS,4BAA4B,CAAE,sCAACC,CAAD,CAAIjB,YAAJ,CAAqB,CAC/C,GAAMkB,CAAAA,iBAAiB,CAAGD,CAAC,CAACE,kBAAF,EACtBF,CAAC,CAACE,kBAAF,CAAqBC,IAArB,CAA0B,SAACC,QAAD,QAAc,wBAAuBC,IAAvB,CAA4BD,QAAQ,CAACE,IAArC,CAAd,EAA1B,CADJ,CAEA,GAAIL,iBAAiB,EACjB,MAAKpB,oBAAL,CAA0BmB,CAA1B,CAA6BjB,YAA7B,CADA,EAEA,MAAKzB,KAAL,CAAWiD,QAFX,EAGA,MAAKjD,KAAL,CAAWkD,YAAX,CAA0B,CAH9B,CAGiC,CAC7B,MAAO,MAAP,CACH,CACD,GAAI,MAAKlD,KAAL,CAAWsC,YAAf,CAA6B,CACzB,MAAKtC,KAAL,CAAWsC,YAAX,CAAwBb,YAAxB,EACH,CAGD,MAAKP,uBAAL,CAA+B,IAA/B,CACA,MAAO,KAAP,CACH,CAtCmC,CAuCpCiC,kBAAkB,CAAE,4BAAC3B,GAAD,CAAMC,YAAN,CAAuB,CAGvC,GAAI,CAAC,MAAKP,uBAAV,CAAmC,CAC/B,GAAIO,YAAY,CAACU,EAAb,GAAoB,CAApB,EAAyBV,YAAY,CAACY,EAAb,GAAoB,CAAjD,CAAoD,CAChD,OACH,CACD,MAAKnB,uBAAL,CAA+B,MAAKqB,mBAAL,CAAyBd,YAAzB,CAA/B,CACAG,OAAO,CAAG,MAAKY,4BAAL,EAAV,CACH,CACD,GAAI,MAAKY,uBAAL,CAA6B3B,YAA7B,CAAJ,CAAgD,CAE5C,GAAM4B,CAAAA,gBAAgB,CAAG,EAAI,MAAKC,sBAAL,CAA4B7B,YAA5B,CAA7B,CACA,MAAK8B,WAAL,EACI,MAAKA,WAAL,CAAiBC,YAAjB,CAA8B,CAC1BC,OAAO,CAAE,MAAKzD,KAAL,CAAW0D,eAAX,CAA6BL,gBADZ,CAA9B,CADJ,CAIAzB,OAAO,CAACJ,GAAD,CAAMC,YAAN,CAAP,CACA,GAAI,MAAKzB,KAAL,CAAW2D,WAAf,CAA4B,CACxB,MAAK3D,KAAL,CAAW2D,WAAX,CAAuBN,gBAAvB,CAAyC5B,YAAzC,EACH,CACJ,CAXD,IAYK,CACD,GAAI,MAAKzB,KAAL,CAAWiD,QAAf,CAAyB,CACrB,GAAI,MAAKjD,KAAL,CAAW4D,gBAAf,CAAiC,CAC7B,GAAIC,CAAAA,OAAO,CAAG,CAACpC,YAAY,CAACU,EAA5B,CACA,GAAI0B,OAAO,CAAG,MAAK7D,KAAL,CAAW8D,eAAzB,CAA0C,CACtCD,OAAO,EAAI,CAACA,OAAO,CAAG,MAAK7D,KAAL,CAAW8D,eAAtB,EAAyC,CAApD,CACH,CACD,MAAK9D,KAAL,CAAWiD,QAAX,CAAoB,CAAEc,CAAC,CAAEF,OAAL,CAAcG,QAAQ,CAAE,KAAxB,CAApB,EACH,CAND,IAOK,CACD,GAAIC,CAAAA,OAAO,CAAG,CAACxC,YAAY,CAACY,EAA5B,CACA,GAAI4B,OAAO,CAAG,MAAKjE,KAAL,CAAW8D,eAAzB,CAA0C,CACtCG,OAAO,EAAI,CAACA,OAAO,CAAG,MAAKjE,KAAL,CAAW8D,eAAtB,EAAyC,CAApD,CACH,CACD,MAAK9D,KAAL,CAAWiD,QAAX,CAAoB,CAAEiB,CAAC,CAAED,OAAL,CAAcD,QAAQ,CAAE,KAAxB,CAApB,EACH,CACJ,CACJ,CACJ,CA/EmC,CAgFpCG,qBAAqB,CAAE,+BAAC3C,GAAD,CAAMC,YAAN,CAAuB,CAE1C,GAAM2C,CAAAA,WAAW,CAAG,MAAKC,0BAAL,CAAgC5C,YAAhC,CAApB,CACA,GAAI2C,WAAW,CAAG,MAAKpE,KAAL,CAAWsE,cAAzB,EACA,MAAKlB,uBAAL,CAA6B3B,YAA7B,CADJ,CACgD,CAC5C,GAAI,MAAKzB,KAAL,CAAWuE,eAAf,CAAgC,CAC5B,MAAKtD,mBAAL,CAA2B,IAA3B,CACA,MAAKjB,KAAL,CAAWuE,eAAX,CAA2B,CACvBC,gBAAgB,CAAE,MAAKjC,mBAAL,CAAyBd,YAAzB,CADK,CAA3B,CAEGA,YAFH,EAGA,OACH,CAED,GAAI,MAAKzB,KAAL,CAAWyE,OAAf,CAAwB,CACpB,MAAKxD,mBAAL,CAA2B,IAA3B,CACA,MAAKjB,KAAL,CAAWyE,OAAX,GACA,OACH,CACJ,CAED,GAAI,MAAKzE,KAAL,CAAW0E,aAAf,CAA8B,CAC1B,MAAK1E,KAAL,CAAW0E,aAAX,CAAyBjD,YAAzB,EACH,CACD,GAAI,MAAK8B,WAAT,CAAsB,CAClB,MAAKA,WAAL,CAAiBC,YAAjB,CAA8B,CAC1BC,OAAO,CAAE,MAAKzD,KAAL,CAAW0D,eADM,CAA9B,EAGH,CACDiB,QAAQ,CAACC,MAAT,CAAgB,MAAKxE,KAAL,CAAWW,GAA3B,CAAgC,CAC5B8D,OAAO,CAAE,CAAEd,CAAC,CAAE,CAAL,CAAQG,CAAC,CAAE,CAAX,CADmB,CAE5BY,UAAU,CAAE,CAFgB,CAG5BC,eAAe,CAAE,KAHW,CAAhC,EAIGC,KAJH,GAKA,GAAI,MAAKhF,KAAL,CAAWiD,QAAf,CAAyB,CACrB,GAAI,MAAKjD,KAAL,CAAWkD,YAAX,CAA0B,MAAKlD,KAAL,CAAW8D,eAAzC,CAA0D,CACtD,MAAK9D,KAAL,CAAWiD,QAAX,CAAoB,CAChBiB,CAAC,CAAE,MAAKlE,KAAL,CAAW8D,eADE,CAEhBE,QAAQ,CAAE,IAFM,CAApB,EAIH,CACJ,CACJ,CAzHmC,CAApB,CAApB,CA2HH,CA7HD,CA8HA,MAAKK,0BAAL,CAAkC,SAAC5C,YAAD,CAAkB,CAChD,OAAQ,MAAKP,uBAAb,EACI,IAAK,IAAL,CACI,MAAO,CAACO,YAAY,CAACY,EAArB,CACJ,IAAK,MAAL,CACI,MAAOZ,CAAAA,YAAY,CAACY,EAApB,CACJ,IAAK,OAAL,CACI,MAAOZ,CAAAA,YAAY,CAACU,EAApB,CACJ,IAAK,MAAL,CACI,MAAO,CAACV,YAAY,CAACU,EAArB,CACJ,QACI,MAAO,EAAP,CAVR,CAYH,CAbD,CAcA,MAAKI,mBAAL,CAA2B,SAACd,YAAD,CAAkB,CACzC,GAAIQ,IAAI,CAACC,GAAL,CAAST,YAAY,CAACU,EAAtB,EAA4BF,IAAI,CAACC,GAAL,CAAST,YAAY,CAACY,EAAtB,CAAhC,CAA2D,CACvD,MAAOZ,CAAAA,YAAY,CAACU,EAAb,CAAkB,CAAlB,CAAsB,OAAtB,CAAgC,MAAvC,CACH,CACD,MAAOV,CAAAA,YAAY,CAACY,EAAb,CAAkB,CAAlB,CAAsB,MAAtB,CAA+B,IAAtC,CACH,CALD,CAMA,MAAKiB,sBAAL,CAA8B,SAAC7B,YAAD,CAAkB,CAC5C,OAAQ,MAAKP,uBAAb,EACI,IAAK,MAAL,CACI,MAAQ,CAACO,YAAY,CAACwD,KAAb,CAAqBxD,YAAY,CAACyD,EAAnC,GACH,CAAC,MAAKlF,KAAL,CAAWW,YAAX,EAA2B,MAAKP,KAAL,CAAWO,YAAvC,EACGc,YAAY,CAACyD,EAFb,CAAR,CAGJ,IAAK,IAAL,CACI,MAAOrF,CAAAA,iBAAiB,CAAC4B,YAAY,CAACwD,KAAb,CAAqBxD,YAAY,CAACyD,EAAnC,CAAxB,CACJ,IAAK,MAAL,CACI,MAAOrF,CAAAA,iBAAiB,CAAC4B,YAAY,CAAC0D,KAAb,CAAqB1D,YAAY,CAAC2D,EAAnC,CAAxB,CACJ,IAAK,OAAL,CACI,MAAQ,CAAC3D,YAAY,CAAC0D,KAAb,CAAqB1D,YAAY,CAAC2D,EAAnC,GACH,CAAC,MAAKpF,KAAL,CAAWO,WAAX,EAA0B,MAAKH,KAAL,CAAWG,WAAtC,EAAqDkB,YAAY,CAAC2D,EAD/D,CAAR,CAEJ,QACI,MAAO,EAAP,CAbR,CAeH,CAhBD,CAiBA,MAAK5C,4BAAL,CAAoC,UAAM,CACtC,GAAI,MAAKtB,uBAAL,GAAiC,OAAjC,EACA,MAAKA,uBAAL,GAAiC,MADrC,CAC6C,CACzC,MAAOyD,CAAAA,QAAQ,CAACU,KAAT,CAAe,CAAC,IAAD,CAAO,CAAElD,EAAE,CAAE,MAAK/B,KAAL,CAAWW,GAAX,CAAegD,CAArB,CAAP,CAAf,CAAiD,CACpDgB,eAAe,CAAE,KADmC,CAAjD,CAAP,CAGH,CALD,IAMK,CACD,MAAOJ,CAAAA,QAAQ,CAACU,KAAT,CAAe,CAAC,IAAD,CAAO,CAAEhD,EAAE,CAAE,MAAKjC,KAAL,CAAWW,GAAX,CAAemD,CAArB,CAAP,CAAf,CAAiD,CACpDa,eAAe,CAAE,KADmC,CAAjD,CAAP,CAGH,CACJ,CAZD,CAaA,MAAKO,mBAAL,CAA2B,SAACC,SAAD,CAAe,CACtC,MAAOC,CAAAA,KAAK,CAACC,OAAN,CAAc,MAAKzF,KAAL,CAAWc,cAAzB,EACD,MAAKd,KAAL,CAAWc,cAAX,CAA0B4E,QAA1B,CAAmCH,SAAnC,CADC,CAED,MAAKvF,KAAL,CAAWc,cAAX,GAA8ByE,SAFpC,CAGH,CAJD,CAKA,MAAKnC,uBAAL,CAA+B,cAAgB,IAAbf,CAAAA,EAAa,MAAbA,EAAa,CAATF,EAAS,MAATA,EAAS,CAC3C,GAAMwD,CAAAA,WAAW,CAAGtD,EAAE,CAAG,CAAzB,CACA,GAAMuD,CAAAA,SAAS,CAAGvD,EAAE,CAAG,CAAvB,CACA,GAAMwD,CAAAA,WAAW,CAAG1D,EAAE,CAAG,CAAzB,CACA,GAAM2D,CAAAA,YAAY,CAAG3D,EAAE,CAAG,CAA1B,CACA,GAAI,MAAKjB,uBAAL,GAAiC,IAAjC,EACA,MAAKoE,mBAAL,CAAyB,IAAzB,CADA,EAEAM,SAFJ,CAEe,CACX,MAAO,KAAP,CACH,CAJD,IAKK,IAAI,MAAK1E,uBAAL,GAAiC,MAAjC,EACL,MAAKoE,mBAAL,CAAyB,MAAzB,CADK,EAELK,WAFC,CAEY,CACb,MAAO,KAAP,CACH,CAJI,IAKA,IAAI,MAAKzE,uBAAL,GAAiC,OAAjC,EACL,MAAKoE,mBAAL,CAAyB,OAAzB,CADK,EAELQ,YAFC,CAEa,CACd,MAAO,KAAP,CACH,CAJI,IAKA,IAAI,MAAK5E,uBAAL,GAAiC,MAAjC,EACL,MAAKoE,mBAAL,CAAyB,MAAzB,CADK,EAELO,WAFC,CAEY,CACb,MAAO,KAAP,CACH,CACD,MAAO,MAAP,CACH,CA1BD,CA2BA,MAAKE,sBAAL,CAA8B,UAAM,CAChC,GAAI,CAAC,MAAK/F,KAAL,CAAWW,YAAZ,EAA4B,CAAC,MAAKX,KAAL,CAAWO,WAA5C,CAAyD,CAGrD,GAAMA,CAAAA,WAAW,CAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C,CACA,GAAMC,CAAAA,YAAY,CAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C,CACA,GAAIL,WAAW,GAAK,MAAKH,KAAL,CAAWG,WAA3B,EACAI,YAAY,GAAK,MAAKP,KAAL,CAAWO,YADhC,CAC8C,CAC1C,MAAKqF,QAAL,CAAc,CAAEzF,WAAW,CAAXA,WAAF,CAAeI,YAAY,CAAZA,YAAf,CAAd,EACH,CACJ,CACJ,CAXD,CAYA,MAAKsF,IAAL,CAAY,UAAM,CACd,GAAI,MAAKjF,eAAT,CAA0B,CACtB,OACH,CACD,MAAKA,eAAL,CAAuB,IAAvB,CACA,GAAI,MAAKuC,WAAT,CAAsB,CAClB,MAAKA,WAAL,CAAiBC,YAAjB,CAA8B,CAAEC,OAAO,CAAE,MAAKzD,KAAL,CAAW0D,eAAtB,CAA9B,CAAuE,MAAK1D,KAAL,CAAWkG,0BAAlF,EACH,CAID,GAAI,MAAK9F,KAAL,CAAWS,WAAf,CAA4B,CACxB,MAAKT,KAAL,CAAWW,GAAX,CAAeoF,QAAf,CAAwB,CAAEpC,CAAC,CAAE,CAAL,CAAQG,CAAC,CAAE,CAAX,CAAxB,EACH,CACD,GAAI,MAAKkC,UAAT,CAAqB,CACjB,MAAKpG,KAAL,CAAWqG,eAAX,EAA8B,MAAKrG,KAAL,CAAWqG,eAAX,EAA9B,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,kBAAkB,CAACC,uBAAnB,EAA1B,CACA,MAAKJ,UAAL,CACKK,OADL,CACa,MAAKxG,WADlB,CAC+B,MAAKD,KAAL,CAAW0G,iBAD1C,EAEKC,IAFL,CAEU,UAAM,CACZ,MAAK3F,eAAL,CAAuB,KAAvB,CACAuF,kBAAkB,CAACK,sBAAnB,CAA0CN,iBAA1C,EACA,GAAI,CAAC,MAAKtG,KAAL,CAAWM,SAAhB,CAA2B,CACvB,MAAKuG,KAAL,GACH,CAFD,IAGK,CACD,MAAK7G,KAAL,CAAW8G,WAAX,GACH,CACJ,CAXD,EAYH,CACJ,CA9BD,CA+BA,MAAKD,KAAL,CAAa,UAAM,CACf,GAAI,MAAK7F,eAAT,CAA0B,CACtB,OACH,CACD,MAAKA,eAAL,CAAuB,IAAvB,CACA,GAAI,MAAKuC,WAAT,CAAsB,CAClB,MAAKA,WAAL,CAAiBC,YAAjB,CAA8B,CAAEC,OAAO,CAAE,CAAX,CAA9B,CAA8C,MAAKzD,KAAL,CAAW+G,2BAAzD,EACH,CACD,GAAI7G,CAAAA,YAAY,CAAG,MAAKA,YAAxB,CACA,GAAI,MAAKe,mBAAT,CAA8B,CAC1B,MAAKA,mBAAL,CAA2B,KAA3B,CACA,GAAI,MAAKC,uBAAL,GAAiC,IAArC,CAA2C,CACvChB,YAAY,CAAG,YAAf,CACH,CAFD,IAGK,IAAI,MAAKgB,uBAAL,GAAiC,MAArC,CAA6C,CAC9ChB,YAAY,CAAG,cAAf,CACH,CAFI,IAGA,IAAI,MAAKgB,uBAAL,GAAiC,OAArC,CAA8C,CAC/ChB,YAAY,CAAG,eAAf,CACH,CAFI,IAGA,IAAI,MAAKgB,uBAAL,GAAiC,MAArC,CAA6C,CAC9ChB,YAAY,CAAG,cAAf,CACH,CACJ,CACD,GAAI,MAAKkG,UAAT,CAAqB,CACjB,MAAKpG,KAAL,CAAWgH,eAAX,EAA8B,MAAKhH,KAAL,CAAWgH,eAAX,EAA9B,CACA,GAAMV,CAAAA,iBAAiB,CAAGC,kBAAkB,CAACC,uBAAnB,EAA1B,CACA,MAAKJ,UAAL,CACKK,OADL,CACavG,YADb,CAC2B,MAAKF,KAAL,CAAWiH,kBADtC,EAEKN,IAFL,CAEU,UAAM,CACZ,MAAK3F,eAAL,CAAuB,KAAvB,CACAuF,kBAAkB,CAACK,sBAAnB,CAA0CN,iBAA1C,EACA,GAAI,MAAKtG,KAAL,CAAWM,SAAf,CAA0B,CACtB,MAAK2F,IAAL,GACH,CAFD,IAGK,CACD,MAAKD,QAAL,CAAc,CACV3F,WAAW,CAAE,KADH,CAAd,CAEG,UAAM,CACL,MAAK2F,QAAL,CAAc,CACV1F,SAAS,CAAE,KADD,CAAd,CAEG,UAAM,CACL,MAAKN,KAAL,CAAWkH,WAAX,GACH,CAJD,EAKH,CARD,EASH,CACJ,CAnBD,EAoBH,CACJ,CAhDD,CAiDA,MAAKC,YAAL,CAAoB,UAAM,CACtB,GAAI,CAAC,MAAKnH,KAAL,CAAWoH,WAAhB,CAA6B,CACzB,MAAO,KAAP,CACH,CACD,GAAI,MAAKpH,KAAL,CAAWqH,cAAX,EACA,CAAC7H,KAAK,CAAC8H,cAAN,CAAqB,MAAKtH,KAAL,CAAWqH,cAAhC,CADL,CACsD,CAClDE,OAAO,CAACC,IAAR,CAAa,yFAAb,EACH,CACD,gBAAyG,MAAKxH,KAA9G,CAAQqH,cAAR,aAAQA,cAAR,CAAwBI,aAAxB,aAAwBA,aAAxB,CAAuC1C,eAAvC,aAAuCA,eAAvC,CAAwD2C,0BAAxD,aAAwDA,0BAAxD,CAAoFC,eAApF,aAAoFA,eAApF,CACA,GAAMC,CAAAA,iBAAiB,CAAG,CAAC,CAAC,MAAK5H,KAAL,CAAWqH,cAAvC,CACA,GAAMQ,CAAAA,qBAAqB,CAAG,CAC1B,CACInH,KAAK,CAAE,MAAKW,cAAL,EADX,CAEIT,MAAM,CAAE,MAAKQ,eAAL,EAFZ,CAGI0G,eAAe,CAAE,MAAK1H,KAAL,CAAWC,WAAX,EAA0B,CAACuH,iBAA3B,CACXH,aADW,CAEX,aALV,CAD0B,CAA9B,CASA,GAAMM,CAAAA,eAAe,CAAIvI,KAAK,CAACwI,aAAN,CAAoBtI,UAAU,CAACuI,IAA/B,CAAqC,CAAEC,GAAG,CAAE,aAAAA,KAAG,QAAK,OAAK3E,WAAL,CAAmB2E,KAAxB,EAAV,CAAwCnD,eAAe,CAAE2C,0BAA0B,GAAKS,SAA/B,CAC7GT,0BAD6G,CAE7G3C,eAFoD,CAEnCqD,KAAK,CAAE,CAACtI,MAAM,CAACuI,QAAR,CAAkBR,qBAAlB,CAF4B,CAArC,CAEqDD,iBAAiB,EAAIP,cAF1E,CAAzB,CAGA,GAAIO,iBAAJ,CAAuB,CAEnB,MAAOG,CAAAA,eAAP,CACH,CAGD,MAAQvI,CAAAA,KAAK,CAACwI,aAAN,CAAoBM,wBAApB,CAA8C,CAAEC,OAAO,CAAEZ,eAAX,CAA9C,CAA4EI,eAA5E,CAAR,CACH,CA7BD,CA8BA,qBAAsCnI,eAAe,CAACG,yBAAyB,CAACC,KAAD,CAA1B,CAArD,CAAQC,WAAR,kBAAQA,WAAR,CAAqBC,YAArB,kBAAqBA,YAArB,CACA,MAAKD,WAAL,CAAmBA,WAAnB,CACA,MAAKC,YAAL,CAAoBA,YAApB,CACA,GAAI,MAAKE,KAAL,CAAWS,WAAf,CAA4B,CACxB,MAAKT,KAAL,gCACO,MAAKA,KADZ,MAEIW,GAAG,CAAE,GAAI4D,CAAAA,QAAQ,CAAC6D,OAAb,EAFT,GAIA,MAAK7G,iBAAL,GACH,CACD,GAAI3B,KAAK,CAACM,SAAV,CAAqB,CACjB,MAAKF,KAAL,gCACO,MAAKA,KADZ,MAEIE,SAAS,CAAE,IAFf,CAGID,WAAW,CAAE,IAHjB,GAKH,CA3Xc,aA4XlB,CA7XL,8DAoYI,4BAAoB,CAEhB,GAAI,KAAKL,KAAL,CAAWyE,OAAf,CAAwB,CACpB8C,OAAO,CAACC,IAAR,CAAa,kIAAb,EACH,CACDiB,kBAAkB,CAACC,WAAnB,CAA+B,qBAA/B,CAAsD,KAAK3C,sBAA3D,EACA,GAAI,KAAK3F,KAAL,CAAWE,SAAf,CAA0B,CACtB,KAAK2F,IAAL,GACH,CACD0C,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,CAAkD,KAAKtH,iBAAvD,EACH,CA9YL,oCA+YI,+BAAuB,CACnBqH,WAAW,CAACE,mBAAZ,CAAgC,mBAAhC,CAAqD,KAAKvH,iBAA1D,EACAmH,kBAAkB,CAACK,cAAnB,CAAkC,qBAAlC,CAAyD,KAAK/C,sBAA9D,EACH,CAlZL,kCAmZI,4BAAmBgD,SAAnB,CAA8B,CAG1B,GAAI,KAAK/I,KAAL,CAAWC,WAAX,GAA2B8I,SAAS,CAAC9I,WAArC,EACA,KAAKD,KAAL,CAAWE,YAAX,GAA4B6I,SAAS,CAAC7I,YAD1C,CACwD,CACpD,sBAAsCN,eAAe,CAACG,yBAAyB,CAAC,KAAKC,KAAN,CAA1B,CAArD,CAAQC,WAAR,mBAAQA,WAAR,CAAqBC,YAArB,mBAAqBA,YAArB,CACA,KAAKD,WAAL,CAAmBA,WAAnB,CACA,KAAKC,YAAL,CAAoBA,YAApB,CACH,CAED,GAAI,KAAKF,KAAL,CAAW0D,eAAX,GAA+BqF,SAAS,CAACrF,eAAzC,EACA,KAAKH,WADT,CACsB,CAClB,KAAKA,WAAL,CAAiBC,YAAjB,CAA8B,CAAEC,OAAO,CAAE,KAAKzD,KAAL,CAAW0D,eAAtB,CAA9B,CAAuE,KAAK1D,KAAL,CAAWkG,0BAAlF,EACH,CAED,GAAI,KAAKlG,KAAL,CAAWM,SAAX,EAAwB,CAACyI,SAAS,CAACzI,SAAvC,CAAkD,CAC9C,KAAK2F,IAAL,GACH,CAFD,IAGK,IAAI,CAAC,KAAKjG,KAAL,CAAWM,SAAZ,EAAyByI,SAAS,CAACzI,SAAvC,CAAkD,CAEnD,KAAKuG,KAAL,GACH,CACJ,CAzaL,sBA0aI,iBAAS,iBAEL,iBAA2U,KAAK7G,KAAhV,CAAQC,WAAR,cAAQA,WAAR,CAAqByG,iBAArB,cAAqBA,iBAArB,CAAwCxG,YAAxC,cAAwCA,YAAxC,CAAsD+G,kBAAtD,cAAsDA,kBAAtD,CAA0E+B,aAA1E,cAA0EA,aAA1E,CAAyFC,WAAzF,cAAyFA,WAAzF,CAAsG7B,WAAtG,cAAsGA,WAAtG,CAAmHK,aAAnH,cAAmHA,aAAnH,CAAkI/D,eAAlI,cAAkIA,eAAlI,CAAmJwC,0BAAnJ,cAAmJA,0BAAnJ,CAA+Ka,2BAA/K,cAA+KA,2BAA/K,CAA4MM,cAA5M,cAA4MA,cAA5M,CAA4N6B,QAA5N,cAA4NA,QAA5N,CAAsO5I,SAAtO,cAAsOA,SAAtO,CAAiPwG,WAAjP,cAAiPA,WAAjP,CAA8PxF,iBAA9P,cAA8PA,iBAA9P,CAAiRyD,eAAjR,cAAiRA,eAAjR,CAAkSrD,cAAlS,cAAkSA,cAAlS,CAAkT0G,KAAlT,cAAkTA,KAAlT,CAA4Te,UAA5T,kDACA,GAAQC,CAAAA,MAAR,CAAsCD,UAAtC,CAAQC,MAAR,CAAmBC,cAAnB,0BAAsCF,UAAtC,aACA,GAAMG,CAAAA,aAAa,CAAG,CAClB,CAAEC,MAAM,CAAE,KAAKlI,cAAL,GAAwB,IAAlC,CAAwCmI,SAAS,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAd,CAAD,CAAnD,CADkB,CAElB3J,MAAM,CAAC4J,OAFW,CAGlBtB,KAHkB,CAAtB,CAKA,GAAIuB,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAI,KAAKxJ,KAAL,CAAWS,WAAf,CAA4B,CACxB8I,WAAW,kBAAQ,KAAKxI,YAAL,CAAkBwI,WAA1B,CAAX,CACA,GAAI5E,eAAJ,CAAqB,CACjB6E,WAAW,CAAG,CACVJ,SAAS,CAAE,KAAKpJ,KAAL,CAAWW,GAAX,CAAe8I,qBAAf,EADD,CAAd,CAGH,CAJD,IAKK,CACDD,WAAW,CAAG,KAAKxJ,KAAL,CAAWW,GAAX,CAAe+I,SAAf,EAAd,CACH,CACJ,CAGD,GAAMC,CAAAA,SAAS,CAAG,KAAK/J,KAAL,CAAWgK,8BAAX,EACd,KAAKhK,KAAL,CAAW+E,eADG,EAEd,CAAC,KAAK3E,KAAL,CAAWC,WAFE,CAEab,KAAK,CAACwI,aAAN,CAAoBtI,UAAU,CAACuI,IAA/B,CAAqC,IAArC,CAFb,CAE4DiB,QAF9E,CAGA,GAAMe,CAAAA,aAAa,CAAIzK,KAAK,CAACwI,aAAN,CAAoBtI,UAAU,CAACuI,IAA/B,CAAqC,SAAc,EAAd,CAAkB0B,WAAlB,CAA+B,CAAEzB,GAAG,CAAE,aAAAA,KAAG,QAAK,CAAA,MAAI,CAAC9B,UAAL,CAAkB8B,KAAvB,EAAV,CAAuCE,KAAK,CAAE,CAACwB,WAAD,CAAcN,aAAd,CAA9C,CAA4EY,aAAa,CAAE,UAA3F,CAAuGnF,eAAe,CAAEA,eAAxH,CAA/B,CAA0KsE,cAA1K,CAArC,CAAgOU,SAAhO,CAAvB,CAGA,GAAI,CAACd,WAAD,EAAgB,KAAK7I,KAAL,CAAWE,SAA/B,CAA0C,CACtC,MAAQd,CAAAA,KAAK,CAACwI,aAAN,CAAoBC,IAApB,CAA0B,CAAEiC,aAAa,CAAE,UAAjB,CAA6B9B,KAAK,CAAE,CAACtI,MAAM,CAACuI,QAAR,CAAkBvI,MAAM,CAACqK,YAAzB,CAApC,CAA1B,CACJ,KAAKhD,YAAL,EADI,CAEJ8C,aAFI,CAAR,CAGH,CACD,MAAQzK,CAAAA,KAAK,CAACwI,aAAN,CAAoBoC,KAApB,CAA2B,SAAc,CAAEC,WAAW,CAAE,IAAf,CAAqBC,aAAa,CAAE,MAApC,CAA4CC,OAAO,CAAE,KAAKnK,KAAL,CAAWE,SAAhE,CAA2EkK,cAAc,CAAElJ,iBAA3F,CAAd,CAA8H6H,UAA9H,CAA3B,CACJ,KAAKhC,YAAL,EADI,CAEJ6B,aAAa,CAAIxJ,KAAK,CAACwI,aAAN,CAAoByC,oBAApB,CAA0C,CAAEC,QAAQ,CAAEC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwB,SAAxB,CAAoCzC,SAAhD,CAA2D+B,aAAa,CAAE,UAA1E,CAAsF9B,KAAK,CAAEkB,aAAa,CAACuB,MAAd,CAAqB,CAAC,CAAEtB,MAAM,CAAE,CAAV,CAAD,CAArB,CAA7F,CAA1C,CAAgLU,aAAhL,CAAJ,CAAuMA,aAFhN,CAAR,CAGH,CAhdL,0CA8XI,kCAAgCa,SAAhC,CAA2C1K,KAA3C,CAAkD,CAC9C,GAAI,CAACA,KAAK,CAACE,SAAP,EAAoBwK,SAAS,CAACxK,SAAlC,CAA6C,CACzC,MAAO,CAAEA,SAAS,CAAE,IAAb,CAAmBD,WAAW,CAAE,IAAhC,CAAP,CACH,CACD,MAAO,KAAP,CACH,CAnYL,8BAAsCb,KAAK,CAACuL,SAA5C,EAkdA5K,gBAAgB,CAAC6K,SAAjB,CAA6B,CACzB/K,WAAW,CAAER,SAAS,CAACwL,SAAV,CAAoB,CAACxL,SAAS,CAACyL,MAAX,CAAmBzL,SAAS,CAAC0L,MAA7B,CAApB,CADY,CAEzBzE,iBAAiB,CAAEjH,SAAS,CAAC2L,MAFJ,CAGzBlL,YAAY,CAAET,SAAS,CAACwL,SAAV,CAAoB,CAACxL,SAAS,CAACyL,MAAX,CAAmBzL,SAAS,CAAC0L,MAA7B,CAApB,CAHW,CAIzBlE,kBAAkB,CAAExH,SAAS,CAAC2L,MAJL,CAKzBpC,aAAa,CAAEvJ,SAAS,CAAC4L,IALA,CAMzBpC,WAAW,CAAExJ,SAAS,CAAC4L,IANE,CAOzBjE,WAAW,CAAE3H,SAAS,CAAC4L,IAPE,CAQzB5D,aAAa,CAAEhI,SAAS,CAACyL,MARA,CASzBxH,eAAe,CAAEjE,SAAS,CAAC2L,MATF,CAUzBlF,0BAA0B,CAAEzG,SAAS,CAAC2L,MAVb,CAWzBrE,2BAA2B,CAAEtH,SAAS,CAAC2L,MAXd,CAYzB/D,cAAc,CAAE5H,SAAS,CAAC6L,IAZD,CAazBpC,QAAQ,CAAEzJ,SAAS,CAAC6L,IAAV,CAAeC,UAbA,CAczB5K,YAAY,CAAElB,SAAS,CAAC2L,MAdC,CAezB7K,WAAW,CAAEd,SAAS,CAAC2L,MAfE,CAgBzB9K,SAAS,CAAEb,SAAS,CAAC4L,IAAV,CAAeE,UAhBD,CAiBzBvB,8BAA8B,CAAEvK,SAAS,CAAC4L,IAjBjB,CAkBzB3J,cAAc,CAAEjC,SAAS,CAACwL,SAAV,CAAoB,CAACxL,SAAS,CAAC4L,IAAX,CAAiB5L,SAAS,CAAC+L,IAA3B,CAApB,CAlBS,CAmBzB1E,WAAW,CAAErH,SAAS,CAAC+L,IAnBE,CAoBzBnF,eAAe,CAAE5G,SAAS,CAAC+L,IApBF,CAqBzBtE,WAAW,CAAEzH,SAAS,CAAC+L,IArBE,CAsBzBxE,eAAe,CAAEvH,SAAS,CAAC+L,IAtBF,CAuBzBlK,iBAAiB,CAAE7B,SAAS,CAAC+L,IAvBJ,CAwBzB7D,eAAe,CAAElI,SAAS,CAAC+L,IAxBF,CAyBzBpJ,qBAAqB,CAAE3C,SAAS,CAAC2L,MAzBR,CA0BzB9I,YAAY,CAAE7C,SAAS,CAAC+L,IA1BC,CA2BzB7H,WAAW,CAAElE,SAAS,CAAC+L,IA3BE,CA4BzBjH,eAAe,CAAE9E,SAAS,CAAC+L,IA5BF,CA6BzB9G,aAAa,CAAEjF,SAAS,CAAC+L,IA7BA,CA8BzBlH,cAAc,CAAE7E,SAAS,CAAC2L,MA9BD,CA+BzBtK,cAAc,CAAErB,SAAS,CAACwL,SAAV,CAAoB,CAChCxL,SAAS,CAACgM,OAAV,CAAkBhM,SAAS,CAACiM,KAAV,CAAgB,CAAC,IAAD,CAAO,MAAP,CAAe,MAAf,CAAuB,OAAvB,CAAhB,CAAlB,CADgC,CAEhCjM,SAAS,CAACiM,KAAV,CAAgB,CAAC,IAAD,CAAO,MAAP,CAAe,MAAf,CAAuB,OAAvB,CAAhB,CAFgC,CAApB,CA/BS,CAmCzB3G,eAAe,CAAEtF,SAAS,CAAC4L,IAnCF,CAoCzB3D,0BAA0B,CAAEjI,SAAS,CAAC4L,IApCb,CAqCzBjD,KAAK,CAAE3I,SAAS,CAACkM,GArCQ,CAsCzB1I,QAAQ,CAAExD,SAAS,CAAC+L,IAtCK,CAuCzBtI,YAAY,CAAEzD,SAAS,CAAC2L,MAvCC,CAwCzBtH,eAAe,CAAErE,SAAS,CAAC2L,MAxCF,CAyCzBxH,gBAAgB,CAAEnE,SAAS,CAAC4L,IAzCH,CA0CzBO,qBAAqB,CAAEnM,SAAS,CAACgM,OAAV,CAAkBhM,SAAS,CAACiM,KAAV,CAAgB,CACrD,UADqD,CAErD,sBAFqD,CAGrD,WAHqD,CAIrD,gBAJqD,CAKrD,iBALqD,CAAhB,CAAlB,CA1CE,CAA7B,CAkDAvL,gBAAgB,CAAC0L,YAAjB,CAAgC,CAC5B5L,WAAW,CAAE,WADe,CAE5ByG,iBAAiB,CAAE,GAFS,CAG5BxG,YAAY,CAAE,cAHc,CAI5B+G,kBAAkB,CAAE,GAJQ,CAK5B+B,aAAa,CAAE,KALa,CAM5BC,WAAW,CAAE,IANe,CAO5B7B,WAAW,CAAE,IAPe,CAQ5BK,aAAa,CAAE,OARa,CAS5B/D,eAAe,CAAE,GATW,CAU5BwC,0BAA0B,CAAE,GAVA,CAW5Ba,2BAA2B,CAAE,GAXD,CAY5BM,cAAc,CAAE,IAZY,CAa5BtC,eAAe,CAAE,KAbW,CAc5BpE,YAAY,CAAE,IAdc,CAe5BJ,WAAW,CAAE,IAfe,CAgB5ByJ,8BAA8B,CAAE,KAhBJ,CAiB5BtI,cAAc,CAAE,KAjBY,CAkB5BpB,SAAS,CAAE,KAlBiB,CAmB5BwG,WAAW,CAAE,6BAAM,KAAN,EAnBe,CAoB5BT,eAAe,CAAE,iCAAM,KAAN,EApBW,CAqB5Ba,WAAW,CAAE,6BAAM,KAAN,EArBe,CAsB5BF,eAAe,CAAE,iCAAM,KAAN,EAtBW,CAuB5BW,eAAe,CAAE,iCAAM,KAAN,EAvBW,CAwB5BrG,iBAAiB,CAAE,mCAAM,KAAN,EAxBS,CAyB5Bc,qBAAqB,CAAE,CAzBK,CA0B5BkC,cAAc,CAAE,GA1BY,CA2B5BrB,QAAQ,CAAE,IA3BkB,CA4B5BC,YAAY,CAAE,CA5Bc,CA6B5BY,eAAe,CAAE,CA7BW,CA8B5BF,gBAAgB,CAAE,KA9BU,CA+B5BgI,qBAAqB,CAAE,CAAC,UAAD,CAAa,WAAb,CA/BK,CAAhC,CAiCA,cAAezL,CAAAA,gBAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, DeviceEventEmitter, Dimensions, InteractionManager, KeyboardAvoidingView, Modal, PanResponder, BackHandler, Platform, TouchableWithoutFeedback, View, } from 'react-native';\nimport * as PropTypes from 'prop-types';\nimport * as animatable from 'react-native-animatable';\nimport { initializeAnimations, buildAnimations, reversePercentage, } from './utils';\nimport styles from './modal.style';\n// Override default react-native-animatable animations\ninitializeAnimations();\nconst extractAnimationFromProps = (props) => ({\n    animationIn: props.animationIn,\n    animationOut: props.animationOut,\n});\nexport class ReactNativeModal extends React.Component {\n    constructor(props) {\n        super(props);\n        // We use an internal state for keeping track of the modal visibility: this allows us to keep\n        // the modal visible during the exit animation, even if the user has already change the\n        // isVisible prop to false.\n        // We store in the state the device width and height so that we can update the modal on\n        // device rotation.\n        this.state = {\n            showContent: true,\n            isVisible: false,\n            deviceWidth: Dimensions.get('window').width,\n            deviceHeight: Dimensions.get('window').height,\n            isSwipeable: !!this.props.swipeDirection,\n            pan: null,\n        };\n        this.isTransitioning = false;\n        this.inSwipeClosingState = false;\n        this.currentSwipingDirection = null;\n        this.panResponder = null;\n        this.getDeviceHeight = () => this.props.deviceHeight || this.state.deviceHeight;\n        this.getDeviceWidth = () => this.props.deviceWidth || this.state.deviceWidth;\n        this.onBackButtonPress = () => {\n            if (this.props.onBackButtonPress && this.props.isVisible) {\n                this.props.onBackButtonPress();\n                return true;\n            }\n            return false;\n        };\n        this.shouldPropagateSwipe = (evt, gestureState) => {\n            return typeof this.props.propagateSwipe === 'function'\n                ? this.props.propagateSwipe(evt, gestureState)\n                : this.props.propagateSwipe;\n        };\n        this.buildPanResponder = () => {\n            let animEvt = null;\n            this.panResponder = PanResponder.create({\n                onMoveShouldSetPanResponder: (evt, gestureState) => {\n                    // Use propagateSwipe to allow inner content to scroll. See PR:\n                    // https://github.com/react-native-community/react-native-modal/pull/246\n                    if (!this.shouldPropagateSwipe(evt, gestureState)) {\n                        // The number \"4\" is just a good tradeoff to make the panResponder\n                        // work correctly even when the modal has touchable buttons.\n                        // However, if you want to overwrite this and choose for yourself,\n                        // set panResponderThreshold in the props.\n                        // For reference:\n                        // https://github.com/react-native-community/react-native-modal/pull/197\n                        const shouldSetPanResponder = Math.abs(gestureState.dx) >= this.props.panResponderThreshold ||\n                            Math.abs(gestureState.dy) >= this.props.panResponderThreshold;\n                        if (shouldSetPanResponder && this.props.onSwipeStart) {\n                            this.props.onSwipeStart(gestureState);\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                        return shouldSetPanResponder;\n                    }\n                    return false;\n                },\n                onStartShouldSetPanResponder: (e, gestureState) => {\n                    const hasScrollableView = e._dispatchInstances &&\n                        e._dispatchInstances.some((instance) => /scrollview|flatlist/i.test(instance.type));\n                    if (hasScrollableView &&\n                        this.shouldPropagateSwipe(e, gestureState) &&\n                        this.props.scrollTo &&\n                        this.props.scrollOffset > 0) {\n                        return false; // user needs to be able to scroll content back up\n                    }\n                    if (this.props.onSwipeStart) {\n                        this.props.onSwipeStart(gestureState);\n                    }\n                    // Cleared so that onPanResponderMove can wait to have some delta\n                    // to work with\n                    this.currentSwipingDirection = null;\n                    return true;\n                },\n                onPanResponderMove: (evt, gestureState) => {\n                    // Using onStartShouldSetPanResponder we don't have any delta so we don't know\n                    // The direction to which the user is swiping until some move have been done\n                    if (!this.currentSwipingDirection) {\n                        if (gestureState.dx === 0 && gestureState.dy === 0) {\n                            return;\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                    }\n                    if (this.isSwipeDirectionAllowed(gestureState)) {\n                        // Dim the background while swiping the modal\n                        const newOpacityFactor = 1 - this.calcDistancePercentage(gestureState);\n                        this.backdropRef &&\n                            this.backdropRef.transitionTo({\n                                opacity: this.props.backdropOpacity * newOpacityFactor,\n                            });\n                        animEvt(evt, gestureState);\n                        if (this.props.onSwipeMove) {\n                            this.props.onSwipeMove(newOpacityFactor, gestureState);\n                        }\n                    }\n                    else {\n                        if (this.props.scrollTo) {\n                            if (this.props.scrollHorizontal) {\n                                let offsetX = -gestureState.dx;\n                                if (offsetX > this.props.scrollOffsetMax) {\n                                    offsetX -= (offsetX - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ x: offsetX, animated: false });\n                            }\n                            else {\n                                let offsetY = -gestureState.dy;\n                                if (offsetY > this.props.scrollOffsetMax) {\n                                    offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ y: offsetY, animated: false });\n                            }\n                        }\n                    }\n                },\n                onPanResponderRelease: (evt, gestureState) => {\n                    // Call the onSwipe prop if the threshold has been exceeded on the right direction\n                    const accDistance = this.getAccDistancePerDirection(gestureState);\n                    if (accDistance > this.props.swipeThreshold &&\n                        this.isSwipeDirectionAllowed(gestureState)) {\n                        if (this.props.onSwipeComplete) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipeComplete({\n                                swipingDirection: this.getSwipingDirection(gestureState),\n                            }, gestureState);\n                            return;\n                        }\n                        // Deprecated. Remove later.\n                        if (this.props.onSwipe) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipe();\n                            return;\n                        }\n                    }\n                    //Reset backdrop opacity and modal position\n                    if (this.props.onSwipeCancel) {\n                        this.props.onSwipeCancel(gestureState);\n                    }\n                    if (this.backdropRef) {\n                        this.backdropRef.transitionTo({\n                            opacity: this.props.backdropOpacity,\n                        });\n                    }\n                    Animated.spring(this.state.pan, {\n                        toValue: { x: 0, y: 0 },\n                        bounciness: 0,\n                        useNativeDriver: false,\n                    }).start();\n                    if (this.props.scrollTo) {\n                        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n                            this.props.scrollTo({\n                                y: this.props.scrollOffsetMax,\n                                animated: true,\n                            });\n                        }\n                    }\n                },\n            });\n        };\n        this.getAccDistancePerDirection = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'up':\n                    return -gestureState.dy;\n                case 'down':\n                    return gestureState.dy;\n                case 'right':\n                    return gestureState.dx;\n                case 'left':\n                    return -gestureState.dx;\n                default:\n                    return 0;\n            }\n        };\n        this.getSwipingDirection = (gestureState) => {\n            if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n                return gestureState.dx > 0 ? 'right' : 'left';\n            }\n            return gestureState.dy > 0 ? 'down' : 'up';\n        };\n        this.calcDistancePercentage = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'down':\n                    return ((gestureState.moveY - gestureState.y0) /\n                        ((this.props.deviceHeight || this.state.deviceHeight) -\n                            gestureState.y0));\n                case 'up':\n                    return reversePercentage(gestureState.moveY / gestureState.y0);\n                case 'left':\n                    return reversePercentage(gestureState.moveX / gestureState.x0);\n                case 'right':\n                    return ((gestureState.moveX - gestureState.x0) /\n                        ((this.props.deviceWidth || this.state.deviceWidth) - gestureState.x0));\n                default:\n                    return 0;\n            }\n        };\n        this.createAnimationEventForSwipe = () => {\n            if (this.currentSwipingDirection === 'right' ||\n                this.currentSwipingDirection === 'left') {\n                return Animated.event([null, { dx: this.state.pan.x }], {\n                    useNativeDriver: false,\n                });\n            }\n            else {\n                return Animated.event([null, { dy: this.state.pan.y }], {\n                    useNativeDriver: false,\n                });\n            }\n        };\n        this.isDirectionIncluded = (direction) => {\n            return Array.isArray(this.props.swipeDirection)\n                ? this.props.swipeDirection.includes(direction)\n                : this.props.swipeDirection === direction;\n        };\n        this.isSwipeDirectionAllowed = ({ dy, dx }) => {\n            const draggedDown = dy > 0;\n            const draggedUp = dy < 0;\n            const draggedLeft = dx < 0;\n            const draggedRight = dx > 0;\n            if (this.currentSwipingDirection === 'up' &&\n                this.isDirectionIncluded('up') &&\n                draggedUp) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'down' &&\n                this.isDirectionIncluded('down') &&\n                draggedDown) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'right' &&\n                this.isDirectionIncluded('right') &&\n                draggedRight) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'left' &&\n                this.isDirectionIncluded('left') &&\n                draggedLeft) {\n                return true;\n            }\n            return false;\n        };\n        this.handleDimensionsUpdate = () => {\n            if (!this.props.deviceHeight && !this.props.deviceWidth) {\n                // Here we update the device dimensions in the state if the layout changed\n                // (triggering a render)\n                const deviceWidth = Dimensions.get('window').width;\n                const deviceHeight = Dimensions.get('window').height;\n                if (deviceWidth !== this.state.deviceWidth ||\n                    deviceHeight !== this.state.deviceHeight) {\n                    this.setState({ deviceWidth, deviceHeight });\n                }\n            }\n        };\n        this.open = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n            }\n            // This is for resetting the pan position,otherwise the modal gets stuck\n            // at the last released position when you try to open it.\n            // TODO: Could certainly be improved - no idea for the moment.\n            if (this.state.isSwipeable) {\n                this.state.pan.setValue({ x: 0, y: 0 });\n            }\n            if (this.contentRef) {\n                this.props.onModalWillShow && this.props.onModalWillShow();\n                const interactionHandle = InteractionManager.createInteractionHandle();\n                this.contentRef\n                    .animate(this.animationIn, this.props.animationInTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    InteractionManager.clearInteractionHandle(interactionHandle);\n                    if (!this.props.isVisible) {\n                        this.close();\n                    }\n                    else {\n                        this.props.onModalShow();\n                    }\n                });\n            }\n        };\n        this.close = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: 0 }, this.props.backdropTransitionOutTiming);\n            }\n            let animationOut = this.animationOut;\n            if (this.inSwipeClosingState) {\n                this.inSwipeClosingState = false;\n                if (this.currentSwipingDirection === 'up') {\n                    animationOut = 'slideOutUp';\n                }\n                else if (this.currentSwipingDirection === 'down') {\n                    animationOut = 'slideOutDown';\n                }\n                else if (this.currentSwipingDirection === 'right') {\n                    animationOut = 'slideOutRight';\n                }\n                else if (this.currentSwipingDirection === 'left') {\n                    animationOut = 'slideOutLeft';\n                }\n            }\n            if (this.contentRef) {\n                this.props.onModalWillHide && this.props.onModalWillHide();\n                const interactionHandle = InteractionManager.createInteractionHandle();\n                this.contentRef\n                    .animate(animationOut, this.props.animationOutTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    InteractionManager.clearInteractionHandle(interactionHandle);\n                    if (this.props.isVisible) {\n                        this.open();\n                    }\n                    else {\n                        this.setState({\n                            showContent: false,\n                        }, () => {\n                            this.setState({\n                                isVisible: false,\n                            }, () => {\n                                this.props.onModalHide();\n                            });\n                        });\n                    }\n                });\n            }\n        };\n        this.makeBackdrop = () => {\n            if (!this.props.hasBackdrop) {\n                return null;\n            }\n            if (this.props.customBackdrop &&\n                !React.isValidElement(this.props.customBackdrop)) {\n                console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');\n            }\n            const { customBackdrop, backdropColor, useNativeDriver, useNativeDriverForBackdrop, onBackdropPress, } = this.props;\n            const hasCustomBackdrop = !!this.props.customBackdrop;\n            const backdropComputedStyle = [\n                {\n                    width: this.getDeviceWidth(),\n                    height: this.getDeviceHeight(),\n                    backgroundColor: this.state.showContent && !hasCustomBackdrop\n                        ? backdropColor\n                        : 'transparent',\n                },\n            ];\n            const backdropWrapper = (React.createElement(animatable.View, { ref: ref => (this.backdropRef = ref), useNativeDriver: useNativeDriverForBackdrop !== undefined\n                    ? useNativeDriverForBackdrop\n                    : useNativeDriver, style: [styles.backdrop, backdropComputedStyle] }, hasCustomBackdrop && customBackdrop));\n            if (hasCustomBackdrop) {\n                // The user will handle backdrop presses himself\n                return backdropWrapper;\n            }\n            // If there's no custom backdrop, handle presses with\n            // TouchableWithoutFeedback\n            return (React.createElement(TouchableWithoutFeedback, { onPress: onBackdropPress }, backdropWrapper));\n        };\n        const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(props));\n        this.animationIn = animationIn;\n        this.animationOut = animationOut;\n        if (this.state.isSwipeable) {\n            this.state = {\n                ...this.state,\n                pan: new Animated.ValueXY(),\n            };\n            this.buildPanResponder();\n        }\n        if (props.isVisible) {\n            this.state = {\n                ...this.state,\n                isVisible: true,\n                showContent: true,\n            };\n        }\n    }\n    static getDerivedStateFromProps(nextProps, state) {\n        if (!state.isVisible && nextProps.isVisible) {\n            return { isVisible: true, showContent: true };\n        }\n        return null;\n    }\n    componentDidMount() {\n        // Show deprecation message\n        if (this.props.onSwipe) {\n            console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');\n        }\n        DeviceEventEmitter.addListener('didUpdateDimensions', this.handleDimensionsUpdate);\n        if (this.state.isVisible) {\n            this.open();\n        }\n        BackHandler.addEventListener('hardwareBackPress', this.onBackButtonPress);\n    }\n    componentWillUnmount() {\n        BackHandler.removeEventListener('hardwareBackPress', this.onBackButtonPress);\n        DeviceEventEmitter.removeListener('didUpdateDimensions', this.handleDimensionsUpdate);\n    }\n    componentDidUpdate(prevProps) {\n        // If the animations have been changed then rebuild them to make sure we're\n        // using the most up-to-date ones\n        if (this.props.animationIn !== prevProps.animationIn ||\n            this.props.animationOut !== prevProps.animationOut) {\n            const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(this.props));\n            this.animationIn = animationIn;\n            this.animationOut = animationOut;\n        }\n        // If backdrop opacity has been changed then make sure to update it\n        if (this.props.backdropOpacity !== prevProps.backdropOpacity &&\n            this.backdropRef) {\n            this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n        }\n        // On modal open request, we slide the view up and fade in the backdrop\n        if (this.props.isVisible && !prevProps.isVisible) {\n            this.open();\n        }\n        else if (!this.props.isVisible && prevProps.isVisible) {\n            // On modal close request, we slide the view down and fade out the backdrop\n            this.close();\n        }\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { animationIn, animationInTiming, animationOut, animationOutTiming, avoidKeyboard, coverScreen, hasBackdrop, backdropColor, backdropOpacity, backdropTransitionInTiming, backdropTransitionOutTiming, customBackdrop, children, isVisible, onModalShow, onBackButtonPress, useNativeDriver, propagateSwipe, style, ...otherProps } = this.props;\n        const { testID, ...containerProps } = otherProps;\n        const computedStyle = [\n            { margin: this.getDeviceWidth() * 0.05, transform: [{ translateY: 0 }] },\n            styles.content,\n            style,\n        ];\n        let panHandlers = {};\n        let panPosition = {};\n        if (this.state.isSwipeable) {\n            panHandlers = { ...this.panResponder.panHandlers };\n            if (useNativeDriver) {\n                panPosition = {\n                    transform: this.state.pan.getTranslateTransform(),\n                };\n            }\n            else {\n                panPosition = this.state.pan.getLayout();\n            }\n        }\n        // The user might decide not to show the modal while it is animating\n        // to enhance performance.\n        const _children = this.props.hideModalContentWhileAnimating &&\n            this.props.useNativeDriver &&\n            !this.state.showContent ? (React.createElement(animatable.View, null)) : (children);\n        const containerView = (React.createElement(animatable.View, Object.assign({}, panHandlers, { ref: ref => (this.contentRef = ref), style: [panPosition, computedStyle], pointerEvents: \"box-none\", useNativeDriver: useNativeDriver }, containerProps), _children));\n        // If coverScreen is set to false by the user\n        // we render the modal inside the parent view directly\n        if (!coverScreen && this.state.isVisible) {\n            return (React.createElement(View, { pointerEvents: \"box-none\", style: [styles.backdrop, styles.containerBox] },\n                this.makeBackdrop(),\n                containerView));\n        }\n        return (React.createElement(Modal, Object.assign({ transparent: true, animationType: 'none', visible: this.state.isVisible, onRequestClose: onBackButtonPress }, otherProps),\n            this.makeBackdrop(),\n            avoidKeyboard ? (React.createElement(KeyboardAvoidingView, { behavior: Platform.OS === 'ios' ? 'padding' : undefined, pointerEvents: \"box-none\", style: computedStyle.concat([{ margin: 0 }]) }, containerView)) : (containerView)));\n    }\n}\nReactNativeModal.propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    coverScreen: PropTypes.bool,\n    hasBackdrop: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    customBackdrop: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    deviceHeight: PropTypes.number,\n    deviceWidth: PropTypes.number,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    propagateSwipe: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    onModalShow: PropTypes.func,\n    onModalWillShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onModalWillHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    panResponderThreshold: PropTypes.number,\n    onSwipeStart: PropTypes.func,\n    onSwipeMove: PropTypes.func,\n    onSwipeComplete: PropTypes.func,\n    onSwipeCancel: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.oneOf(['up', 'down', 'left', 'right'])),\n        PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    ]),\n    useNativeDriver: PropTypes.bool,\n    useNativeDriverForBackdrop: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n    scrollHorizontal: PropTypes.bool,\n    supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf([\n        'portrait',\n        'portrait-upside-down',\n        'landscape',\n        'landscape-left',\n        'landscape-right',\n    ])),\n};\nReactNativeModal.defaultProps = {\n    animationIn: 'slideInUp',\n    animationInTiming: 300,\n    animationOut: 'slideOutDown',\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    coverScreen: true,\n    hasBackdrop: true,\n    backdropColor: 'black',\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    customBackdrop: null,\n    useNativeDriver: false,\n    deviceHeight: null,\n    deviceWidth: null,\n    hideModalContentWhileAnimating: false,\n    propagateSwipe: false,\n    isVisible: false,\n    onModalShow: () => null,\n    onModalWillShow: () => null,\n    onModalHide: () => null,\n    onModalWillHide: () => null,\n    onBackdropPress: () => null,\n    onBackButtonPress: () => null,\n    panResponderThreshold: 4,\n    swipeThreshold: 100,\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n    scrollHorizontal: false,\n    supportedOrientations: ['portrait', 'landscape'],\n};\nexport default ReactNativeModal;\n"]},"metadata":{},"sourceType":"module"}