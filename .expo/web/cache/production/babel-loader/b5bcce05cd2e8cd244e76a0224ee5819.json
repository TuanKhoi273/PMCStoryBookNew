{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{ColorApp,FontText}from\"../index\";import IconAwesome from\"@expo/vector-icons/Feather\";var styles=StyleSheet.create({placeholder:{fontSize:15,lineHeight:22},input:{paddingVertical:0,fontSize:14,borderBottomWidth:1,height:40,borderColor:ColorApp.NEUTRAL.gray_02,flexDirection:\"row\",alignItems:\"center\"},textInputStyle:{flex:1,color:\"black\",paddingVertical:0,fontSize:15,lineHeight:22,borderWidth:0},containerStyle:{borderBottomWidth:1}});function Input(props){var textInputRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];var _onPress=props.onPress,value=props.value,enableRightIcon=props.enableRightIcon,_props$iconRightName=props.iconRightName,iconRightName=_props$iconRightName===void 0?\"x\":_props$iconRightName,_props$iconRightColor=props.iconRightColor,iconRightColor=_props$iconRightColor===void 0?\"black\":_props$iconRightColor,enableLeftIcon=props.enableLeftIcon,_props$iconLeftName=props.iconLeftName,iconLeftName=_props$iconLeftName===void 0?\"search\":_props$iconLeftName,_props$iconLeftColor=props.iconLeftColor,iconLeftColor=_props$iconLeftColor===void 0?\"black\":_props$iconLeftColor,_props$editable=props.editable,editable=_props$editable===void 0?true:_props$editable,_onChangeText=props.onChangeText,placeholder=props.placeholder,customLeading=props.customLeading,customTrailing=props.customTrailing,keyboardType=props.keyboardType,customStyle=props.customStyle,isTextArea=props.isTextArea,placeholderStyle=props.placeholderStyle,onRightClick=props.onRightClick,_props$secureTextEntr=props.secureTextEntry,secureTextEntry=_props$secureTextEntr===void 0?false:_props$secureTextEntr,_props$inputColor=props.inputColor,inputColor=_props$inputColor===void 0?ColorApp.PRIMARY.blue_04:_props$inputColor,topLabel=props.topLabel,containerStyle=props.containerStyle;var getChild=function getChild(){return React.createElement(View,{style:[styles.containerStyle,{borderColor:focus?inputColor:ColorApp.NEUTRAL.gray_02},containerStyle!=null?containerStyle:{}]},topLabel?React.createElement(FontText.SmallText,{style:{color:inputColor}},topLabel):null,React.createElement(View,{style:[styles.input,customStyle?customStyle:{}]},customLeading?customLeading:null,enableLeftIcon?React.createElement(IconAwesome,{name:iconLeftName,size:20,color:focus?inputColor:iconLeftColor,style:{marginRight:4}}):null,React.createElement(TextInput,{onFocus:function onFocus(){setFocus(true);},onBlur:function onBlur(){setFocus(false);},ref:textInputRef,numberOfLines:isTextArea?4:null,multiline:isTextArea?true:false,textAlignVertical:isTextArea?\"top\":\"center\",style:styles.textInputStyle,editable:editable,placeholder:placeholder!=null?placeholder:\"\",placeholderStyle:[styles.placeholder,placeholderStyle!=null?placeholderStyle:{}],onChangeText:function onChangeText(value){if(_onChangeText){_onChangeText(value);}},secureTextEntry:secureTextEntry,keyboardType:keyboardType?keyboardType:\"default\",value:value,underlineColorAndroid:\"transparent\"}),React.createElement(TouchableOpacity,{onPress:function onPress(){if(onRightClick){onRightClick();}}},React.createElement(IconAwesome,{name:iconRightName,size:20,color:iconRightColor,style:{marginLeft:4}})),customTrailing?customTrailing:null));};return React.createElement(View,null,editable?getChild():React.createElement(TouchableOpacity,{onPress:function onPress(){_onPress();}},getChild()));}export default Input;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/src/component/Common/Input.js"],"names":["React","useEffect","useState","useRef","ColorApp","FontText","IconAwesome","styles","StyleSheet","create","placeholder","fontSize","lineHeight","input","paddingVertical","borderBottomWidth","height","borderColor","NEUTRAL","gray_02","flexDirection","alignItems","textInputStyle","flex","color","borderWidth","containerStyle","Input","props","textInputRef","focus","setFocus","onPress","value","enableRightIcon","iconRightName","iconRightColor","enableLeftIcon","iconLeftName","iconLeftColor","editable","onChangeText","customLeading","customTrailing","keyboardType","customStyle","isTextArea","placeholderStyle","onRightClick","secureTextEntry","inputColor","PRIMARY","blue_04","topLabel","getChild","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, TextInput } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nimport IconAwesome from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  placeholder: {\n    fontSize: 15,\n    lineHeight: 22,\n  },\n  input: {\n    // paddingHorizontal: 12,\n    paddingVertical: 0,\n    fontSize: 14,\n    borderBottomWidth: 1,\n    height: 40,\n    borderColor: ColorApp.NEUTRAL.gray_02,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    // backgroundColor: \"yellow\",\n    // backgroundColor: \"white\",\n  },\n  textInputStyle: {\n    flex: 1,\n    color: \"black\",\n    paddingVertical: 0,\n    fontSize: 15,\n    lineHeight: 22,\n    borderWidth: 0,\n  },\n  containerStyle: {\n    // backgroundColor: \"red\",\n    borderBottomWidth: 1,\n  },\n});\n\nfunction Input(props) {\n  const textInputRef = useRef(null);\n  const [focus, setFocus] = useState(false);\n  const {\n    onPress,\n    value,\n    enableRightIcon,\n    iconRightName = \"x\",\n    iconRightColor = \"black\",\n    enableLeftIcon,\n    iconLeftName = \"search\",\n    iconLeftColor = \"black\",\n    editable = true,\n    onChangeText,\n    placeholder,\n    customLeading,\n    customTrailing,\n    keyboardType,\n    customStyle,\n    isTextArea,\n    placeholderStyle,\n    onRightClick,\n    secureTextEntry = false,\n    inputColor = ColorApp.PRIMARY.blue_04,\n    topLabel,\n    containerStyle,\n  } = props;\n\n  const getChild = () => {\n    return (\n      <View\n        style={[\n          styles.containerStyle,\n          {\n            borderColor: focus ? inputColor : ColorApp.NEUTRAL.gray_02,\n            // flexDirection: \"row\",\n            // alignItems: \"center\",\n          },\n          containerStyle ?? {},\n        ]}\n      >\n        {topLabel ? (\n          <FontText.SmallText style={{ color: inputColor }}>\n            {topLabel}\n          </FontText.SmallText>\n        ) : null}\n        <View style={[styles.input, customStyle ? customStyle : {}]}>\n          {customLeading ? customLeading : null}\n          {enableLeftIcon ? (\n            <IconAwesome\n              name={iconLeftName}\n              size={20}\n              color={focus ? inputColor : iconLeftColor}\n              style={{ marginRight: 4 }}\n            />\n          ) : null}\n          <TextInput\n            onFocus={() => {\n              setFocus(true);\n            }}\n            onBlur={() => {\n              setFocus(false);\n            }}\n            ref={textInputRef}\n            numberOfLines={isTextArea ? 4 : null}\n            multiline={isTextArea ? true : false}\n            textAlignVertical={isTextArea ? \"top\" : \"center\"}\n            style={styles.textInputStyle}\n            editable={editable}\n            placeholder={placeholder ?? \"\"}\n            placeholderStyle={[styles.placeholder, placeholderStyle ?? {}]}\n            onChangeText={(value) => {\n              if (onChangeText) {\n                onChangeText(value);\n              }\n            }}\n            secureTextEntry={secureTextEntry}\n            keyboardType={keyboardType ? keyboardType : \"default\"}\n            value={value}\n            underlineColorAndroid=\"transparent\"\n          />\n          {/* {enableRightIcon ? ( */}\n          <TouchableOpacity\n            onPress={() => {\n              if (onRightClick) {\n                onRightClick();\n              }\n            }}\n          >\n            <IconAwesome\n              name={iconRightName}\n              size={20}\n              color={iconRightColor}\n              style={{ marginLeft: 4 }}\n            />\n          </TouchableOpacity>\n          {/* ) : null} */}\n          {customTrailing ? customTrailing : null}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      {editable ? (\n        getChild()\n      ) : (\n        <TouchableOpacity\n          onPress={() => {\n            onPress();\n          }}\n        >\n          {getChild()}\n        </TouchableOpacity>\n      )}\n      {/* {errorInputState && errorText ? (\n        <FontText.FontCaption\n          style={{ color: ColorApp.ERROR_COLOR, marginTop: 8 }}\n        >\n          {errorText ?? \"\"}\n        </FontText.FontCaption>\n      ) : null} */}\n    </View>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}