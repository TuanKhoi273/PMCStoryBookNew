{"ast":null,"code":"import React,{useEffect}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import{ColorApp,FontText}from\"../index\";import Icon from\"@expo/vector-icons/Feather\";var styles=StyleSheet.create({container:{backgroundColor:ColorApp.PRIMARY.blue_04,borderRadius:12,justifyContent:\"center\",alignItems:\"center\"},textStyle:{color:ColorApp.NEUTRAL.gray_07}});function Avatar(props){var _props$size=props.size,size=_props$size===void 0?48.0:_props$size,_props$rounded=props.rounded,rounded=_props$rounded===void 0?false:_props$rounded,onPress=props.onPress,customStyle=props.customStyle,image=props.image,_props$name=props.name,name=_props$name===void 0?\"avatar\":_props$name,customTextStyle=props.customTextStyle;return React.createElement(TouchableOpacity,{onPress:onPress,style:[styles.container,{width:size,height:size,borderRadius:rounded?size/2:12},customStyle!=null?customStyle:{}]},image?React.createElement(Image,{style:[styles.container,{width:size,height:size,borderRadius:rounded?size/2:12}],source:{uri:image}}):React.createElement(FontText.Button1,{style:[styles.textStyle,customTextStyle!=null?customTextStyle:{}]},name.substring(0,2)));}export default Avatar;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/src/component/Common/Avatar.js"],"names":["React","useEffect","ColorApp","FontText","Icon","styles","StyleSheet","create","container","backgroundColor","PRIMARY","blue_04","borderRadius","justifyContent","alignItems","textStyle","color","NEUTRAL","gray_07","Avatar","props","size","rounded","onPress","customStyle","image","name","customTextStyle","width","height","uri","substring"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,qMAEA,OAASC,QAAT,CAAmBC,QAAnB,gBACA,MAAOC,CAAAA,IAAP,kCACA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,SAAS,CAAE,CACTC,eAAe,CAAEP,QAAQ,CAACQ,OAAT,CAAiBC,OADzB,CAETC,YAAY,CAAE,EAFL,CAGTC,cAAc,CAAE,QAHP,CAITC,UAAU,CAAE,QAJH,CADoB,CAO/BC,SAAS,CAAE,CACTC,KAAK,CAAEd,QAAQ,CAACe,OAAT,CAAiBC,OADf,CAPoB,CAAlB,CAAf,CAaA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACrB,gBAQIA,KARJ,CACEC,IADF,CACEA,IADF,sBACS,IADT,4BAQID,KARJ,CAEEE,OAFF,CAEEA,OAFF,yBAEY,KAFZ,gBAGEC,OAHF,CAQIH,KARJ,CAGEG,OAHF,CAIEC,WAJF,CAQIJ,KARJ,CAIEI,WAJF,CAKEC,KALF,CAQIL,KARJ,CAKEK,KALF,aAQIL,KARJ,CAMEM,IANF,CAMEA,IANF,sBAMS,QANT,aAOEC,eAPF,CAQIP,KARJ,CAOEO,eAPF,CAUA,MACE,qBAAC,gBAAD,EACE,OAAO,CAAEJ,OADX,CAEE,KAAK,CAAE,CACLlB,MAAM,CAACG,SADF,CAEL,CACEoB,KAAK,CAAEP,IADT,CAEEQ,MAAM,CAAER,IAFV,CAGET,YAAY,CAAEU,OAAO,CAAGD,IAAI,CAAG,CAAV,CAAc,EAHrC,CAFK,CAOLG,WAPK,OAOLA,WAPK,CAOU,EAPV,CAFT,EAYGC,KAAK,CACJ,oBAAC,KAAD,EACE,KAAK,CAAE,CACLpB,MAAM,CAACG,SADF,CAEL,CACEoB,KAAK,CAAEP,IADT,CAEEQ,MAAM,CAAER,IAFV,CAGET,YAAY,CAAEU,OAAO,CAAGD,IAAI,CAAG,CAAV,CAAc,EAHrC,CAFK,CADT,CASE,MAAM,CAAE,CACNS,GAAG,CAAEL,KADC,CATV,EADI,CAeJ,oBAAC,QAAD,CAAU,OAAV,EAAkB,KAAK,CAAE,CAACpB,MAAM,CAACU,SAAR,CAAmBY,eAAnB,OAAmBA,eAAnB,CAAsC,EAAtC,CAAzB,EACGD,IAAI,CAACK,SAAL,CAAe,CAAf,CAAkB,CAAlB,CADH,CA3BJ,CADF,CAkCD,CAED,cAAeZ,CAAAA,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity, Image } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: ColorApp.PRIMARY.blue_04,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    // marginHorizontal: 4,\n  },\n});\n\nfunction Avatar(props) {\n  const {\n    size = 48.0,\n    rounded = false,\n    onPress,\n    customStyle,\n    image,\n    name = \"avatar\",\n    customTextStyle,\n  } = props;\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[\n        styles.container,\n        {\n          width: size,\n          height: size,\n          borderRadius: rounded ? size / 2 : 12,\n        },\n        customStyle ?? {},\n      ]}\n    >\n      {image ? (\n        <Image\n          style={[\n            styles.container,\n            {\n              width: size,\n              height: size,\n              borderRadius: rounded ? size / 2 : 12,\n            },\n          ]}\n          source={{\n            uri: image,\n          }}\n        />\n      ) : (\n        <FontText.Button1 style={[styles.textStyle, customTextStyle ?? {}]}>\n          {name.substring(0, 2)}\n        </FontText.Button1>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}