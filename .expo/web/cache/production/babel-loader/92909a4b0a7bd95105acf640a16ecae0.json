{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import textStyleProps from\"../data/textStyleProps\";export default function removeTextStyleProps(style){var intersection=textStyleProps.filter(function(value){return Object.keys(style).includes(value);});var obj=_objectSpread({},style);intersection.forEach(function(value){delete obj[value];});return obj;}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/node_modules/react-native-markdown-display/src/lib/util/removeTextStyleProps.js"],"names":["textStyleProps","removeTextStyleProps","style","intersection","filter","value","Object","keys","includes","obj","forEach"],"mappings":"i2BAAA,MAAOA,CAAAA,cAAP,8BAEA,cAAe,SAASC,CAAAA,oBAAT,CAA8BC,KAA9B,CAAqC,CAClD,GAAMC,CAAAA,YAAY,CAAGH,cAAc,CAACI,MAAf,CAAsB,SAACC,KAAD,QACzCC,CAAAA,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,QAAnB,CAA4BH,KAA5B,CADyC,EAAtB,CAArB,CAIA,GAAMI,CAAAA,GAAG,kBAAOP,KAAP,CAAT,CAEAC,YAAY,CAACO,OAAb,CAAqB,SAACL,KAAD,CAAW,CAC9B,MAAOI,CAAAA,GAAG,CAACJ,KAAD,CAAV,CACD,CAFD,EAIA,MAAOI,CAAAA,GAAP,CACD","sourcesContent":["import textStyleProps from '../data/textStyleProps';\n\nexport default function removeTextStyleProps(style) {\n  const intersection = textStyleProps.filter((value) =>\n    Object.keys(style).includes(value),\n  );\n\n  const obj = {...style};\n\n  intersection.forEach((value) => {\n    delete obj[value];\n  });\n\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}