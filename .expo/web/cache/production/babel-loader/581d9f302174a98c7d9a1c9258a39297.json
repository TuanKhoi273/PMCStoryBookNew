{"ast":null,"code":"import React,{useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{ColorApp,FontText,ButtonType,ButtonState}from\"../index\";import Icon from\"@expo/vector-icons/Feather\";var styles=StyleSheet.create({container:{borderRadius:12,justifyContent:\"center\",alignItems:\"center\",flexDirection:\"row\"},textStyle:{color:ColorApp.NEUTRAL.gray_07,marginHorizontal:2}});var BUTTON_COLOR={DEFAULT_BUTTON_COLOR:ColorApp.PRIMARY.blue_04,ACTIVE_BUTTON_COLOR:ColorApp.PRIMARY.blue_05,DISABLE_BUTTON_COLOR:ColorApp.NEUTRAL.gray_02};function TextButton(props){var customStyle=props.customStyle,customTextStyle=props.customTextStyle,name=props.name,onPress=props.onPress,_props$state=props.state,state=_props$state===void 0?ButtonState.DEFAULT:_props$state,_props$enableButtonLe=props.enableButtonLeft,enableButtonLeft=_props$enableButtonLe===void 0?false:_props$enableButtonLe,_props$enableButtonRi=props.enableButtonRight,enableButtonRight=_props$enableButtonRi===void 0?false:_props$enableButtonRi,_props$customLeftComp=props.customLeftComponent,customLeftComponent=_props$customLeftComp===void 0?null:_props$customLeftComp,_props$customRightCom=props.customRightComponent,customRightComponent=_props$customRightCom===void 0?null:_props$customRightCom,_props$leftIconName=props.leftIconName,leftIconName=_props$leftIconName===void 0?\"plus\":_props$leftIconName,_props$rightIconName=props.rightIconName,rightIconName=_props$rightIconName===void 0?\"chevron-right\":_props$rightIconName;useEffect(function(){},[]);var getButtonColor=function getButtonColor(){switch(state){case ButtonState.ACTIVE:return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;case ButtonState.DISABLE:return BUTTON_COLOR.DISABLE_BUTTON_COLOR;default:return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;}};var buttonStyle=[styles.container,customStyle!=null?customStyle:{}];var textStyle=[styles.textStyle,{color:getButtonColor()},customTextStyle!=null?customTextStyle:{}];return React.createElement(View,{opacity:state==ButtonState.DISABLE?0.8:1},React.createElement(TouchableOpacity,{style:[buttonStyle],onPress:state==ButtonState.DISABLE?null:onPress,activeOpacity:state==ButtonState.DISABLE?1:0.2},customLeftComponent?customLeftComponent:null,enableButtonLeft?React.createElement(Icon,{name:leftIconName,color:getButtonColor(),size:24}):null,React.createElement(FontText.Button1,{style:textStyle},name),enableButtonRight?React.createElement(Icon,{name:rightIconName,color:getButtonColor(),size:24}):null,customRightComponent?customRightComponent:null));}export default TextButton;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/src/component/Common/TextButton.js"],"names":["React","useEffect","ColorApp","FontText","ButtonType","ButtonState","Icon","styles","StyleSheet","create","container","borderRadius","justifyContent","alignItems","flexDirection","textStyle","color","NEUTRAL","gray_07","marginHorizontal","BUTTON_COLOR","DEFAULT_BUTTON_COLOR","PRIMARY","blue_04","ACTIVE_BUTTON_COLOR","blue_05","DISABLE_BUTTON_COLOR","gray_02","TextButton","props","customStyle","customTextStyle","name","onPress","state","DEFAULT","enableButtonLeft","enableButtonRight","customLeftComponent","customRightComponent","leftIconName","rightIconName","getButtonColor","ACTIVE","DISABLE","buttonStyle"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ColorApp, FontText, ButtonType, ButtonState } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    // backgroundColor: ColorApp.PRIMARY.blue_04,\n    // width: \"100%\",\n    // height: 54,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    marginHorizontal: 2,\n  },\n});\n\nconst BUTTON_COLOR = {\n  DEFAULT_BUTTON_COLOR: ColorApp.PRIMARY.blue_04,\n  ACTIVE_BUTTON_COLOR: ColorApp.PRIMARY.blue_05,\n  DISABLE_BUTTON_COLOR: ColorApp.NEUTRAL.gray_02,\n};\n\nfunction TextButton(props) {\n  const {\n    customStyle,\n    customTextStyle,\n    name,\n    onPress,\n    state = ButtonState.DEFAULT,\n    enableButtonLeft = false,\n    enableButtonRight = false,\n    customLeftComponent = null,\n    customRightComponent = null,\n    leftIconName = \"plus\",\n    rightIconName = \"chevron-right\",\n  } = props;\n  useEffect(() => {}, []);\n  const getButtonColor = () => {\n    switch (state) {\n      case ButtonState.ACTIVE:\n        return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;\n      case ButtonState.DISABLE:\n        return BUTTON_COLOR.DISABLE_BUTTON_COLOR;\n      default:\n        return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;\n    }\n  };\n\n  const buttonStyle = [styles.container, customStyle ?? {}];\n\n  const textStyle = [\n    styles.textStyle,\n    { color: getButtonColor() },\n    customTextStyle ?? {},\n  ];\n  return (\n    <View opacity={state == ButtonState.DISABLE ? 0.8 : 1}>\n      <TouchableOpacity\n        style={[buttonStyle]}\n        onPress={state == ButtonState.DISABLE ? null : onPress}\n        activeOpacity={state == ButtonState.DISABLE ? 1 : 0.2}\n      >\n        {customLeftComponent ? customLeftComponent : null}\n        {enableButtonLeft ? (\n          <Icon name={leftIconName} color={getButtonColor()} size={24} />\n        ) : null}\n        <FontText.Button1 style={textStyle}>{name}</FontText.Button1>\n        {enableButtonRight ? (\n          <Icon name={rightIconName} color={getButtonColor()} size={24} />\n        ) : null}\n        {customRightComponent ? customRightComponent : null}\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default TextButton;\n"]},"metadata":{},"sourceType":"module"}