{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from\"react\";import PropTypes from\"prop-types\";import{DatePickerAndroid}from\"react-native-web/dist/index\";import{TimePickerAndroid}from\"react-native-web/dist/index\";var CustomDatePickerAndroid=function(_React$PureComponent){_inherits(CustomDatePickerAndroid,_React$PureComponent);var _super=_createSuper(CustomDatePickerAndroid);function CustomDatePickerAndroid(){var _this;_classCallCheck(this,CustomDatePickerAndroid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.componentDidUpdate=function(prevProps){if(!prevProps.isVisible&&_this.props.isVisible){if(_this.props.mode===\"date\"||_this.props.mode===\"datetime\"){_this.showDatePickerAndroid().catch(console.error);}else{_this.showTimePickerAndroid().catch(console.error);}}};_this.componentDidMount=function(){if(_this.props&&_this.props.isVisible){if(_this.props.mode===\"date\"||_this.props.mode===\"datetime\"){_this.showDatePickerAndroid().catch(console.error);}else{_this.showTimePickerAndroid().catch(console.error);}}};_this.showDatePickerAndroid=function _callee(){var picked,message,_picked,action,year,month,day,date,hour,minute,timeOptions,pickedTime,_pickedTime,timeAction,_hour,_minute,selectedDate;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(DatePickerAndroid.open({date:_this.props.date,minDate:_this.props.minimumDate,maxDate:_this.props.maximumDate,mode:_this.props.datePickerModeAndroid}));case 3:picked=_context.sent;_context.next=11;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);message=_context.t0.message;console.warn(\"Cannot open date picker\",message);return _context.abrupt(\"return\");case 11:_picked=picked,action=_picked.action,year=_picked.year,month=_picked.month,day=_picked.day;if(!(action!==DatePickerAndroid.dismissedAction)){_context.next=36;break;}if(_this.props.date&&!isNaN(_this.props.date.getTime())){hour=_this.props.date.getHours();minute=_this.props.date.getMinutes();date=new Date(year,month,day,hour,minute);}else{date=new Date(year,month,day);}if(!(_this.props.mode===\"datetime\")){_context.next=32;break;}timeOptions={is24Hour:_this.props.is24Hour,mode:_this.props.timePickerModeAndroid};if(_this.props.date){timeOptions.hour=_this.props.date.getHours();timeOptions.minute=_this.props.date.getMinutes();}_context.prev=17;_context.next=20;return _regeneratorRuntime.awrap(TimePickerAndroid.open(timeOptions));case 20:pickedTime=_context.sent;_context.next=28;break;case 23:_context.prev=23;_context.t1=_context[\"catch\"](17);message=_context.t1.message;console.warn(\"Cannot open time picker\",message);return _context.abrupt(\"return\");case 28:_pickedTime=pickedTime,timeAction=_pickedTime.action,_hour=_pickedTime.hour,_minute=_pickedTime.minute;if(timeAction!==TimePickerAndroid.dismissedAction){selectedDate=new Date(year,month,day,_hour,_minute);_this.props.onConfirm(selectedDate);_this.props.onHideAfterConfirm(selectedDate);}else{_this.props.onCancel();}_context.next=34;break;case 32:_this.props.onConfirm(date);_this.props.onHideAfterConfirm(date);case 34:_context.next=37;break;case 36:_this.props.onCancel();case 37:case\"end\":return _context.stop();}}},null,null,[[0,6],[17,23]],Promise);};_this.showTimePickerAndroid=function _callee2(){var picked,message,_picked2,action,hour,minute,date,year,month,day;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(TimePickerAndroid.open({hour:_this.props.date.getHours(),minute:_this.props.date.getMinutes(),is24Hour:_this.props.is24Hour,mode:_this.props.timePickerModeAndroid}));case 3:picked=_context2.sent;_context2.next=11;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);message=_context2.t0.message;console.warn(\"Cannot open time picker\",message);return _context2.abrupt(\"return\");case 11:_picked2=picked,action=_picked2.action,hour=_picked2.hour,minute=_picked2.minute;if(action!==TimePickerAndroid.dismissedAction){if(_this.props.date){year=_this.props.date.getFullYear();month=_this.props.date.getMonth();day=_this.props.date.getDate();date=new Date(year,month,day,hour,minute);}else{date=new Date().setHours(hour).setMinutes(minute);}_this.props.onConfirm(date);_this.props.onHideAfterConfirm(date);}else{_this.props.onCancel();}case 13:case\"end\":return _context2.stop();}}},null,null,[[0,6]],Promise);};return _this;}_createClass(CustomDatePickerAndroid,[{key:\"render\",value:function render(){return null;}}]);return CustomDatePickerAndroid;}(React.PureComponent);CustomDatePickerAndroid.propTypes={date:PropTypes.instanceOf(Date),mode:PropTypes.oneOf([\"date\",\"time\",\"datetime\"]),onCancel:PropTypes.func.isRequired,onConfirm:PropTypes.func.isRequired,onHideAfterConfirm:PropTypes.func,is24Hour:PropTypes.bool,isVisible:PropTypes.bool,datePickerModeAndroid:PropTypes.oneOf([\"calendar\",\"spinner\",\"default\"]),timePickerModeAndroid:PropTypes.oneOf([\"clock\",\"spinner\",\"default\"]),minimumDate:PropTypes.instanceOf(Date),maximumDate:PropTypes.instanceOf(Date)};CustomDatePickerAndroid.defaultProps={date:new Date(),mode:\"date\",datePickerModeAndroid:\"default\",timePickerModeAndroid:\"default\",is24Hour:true,isVisible:false,onHideAfterConfirm:function onHideAfterConfirm(){}};export{CustomDatePickerAndroid as default};","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/node_modules/react-native-modal-datetime-picker/src/CustomDatePickerAndroid.js"],"names":["React","PropTypes","DatePickerAndroid","TimePickerAndroid","CustomDatePickerAndroid","componentDidUpdate","prevProps","isVisible","props","mode","showDatePickerAndroid","catch","console","error","showTimePickerAndroid","componentDidMount","open","date","minDate","minimumDate","maxDate","maximumDate","datePickerModeAndroid","picked","message","warn","action","year","month","day","dismissedAction","isNaN","getTime","hour","getHours","minute","getMinutes","Date","timeOptions","is24Hour","timePickerModeAndroid","pickedTime","timeAction","selectedDate","onConfirm","onHideAfterConfirm","onCancel","getFullYear","getMonth","getDate","setHours","setMinutes","PureComponent","propTypes","instanceOf","oneOf","func","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DatePickerAndroid, TimePickerAndroid } from \"react-native\";\n\nexport default class CustomDatePickerAndroid extends React.PureComponent {\n  static propTypes = {\n    date: PropTypes.instanceOf(Date),\n    mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n    onCancel: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    onHideAfterConfirm: PropTypes.func,\n    is24Hour: PropTypes.bool,\n    isVisible: PropTypes.bool,\n    datePickerModeAndroid: PropTypes.oneOf([\"calendar\", \"spinner\", \"default\"]),\n    timePickerModeAndroid: PropTypes.oneOf([\"clock\", \"spinner\", \"default\"]),\n    minimumDate: PropTypes.instanceOf(Date),\n    maximumDate: PropTypes.instanceOf(Date)\n  };\n\n  static defaultProps = {\n    date: new Date(),\n    mode: \"date\",\n    datePickerModeAndroid: \"default\",\n    timePickerModeAndroid: \"default\",\n    is24Hour: true,\n    isVisible: false,\n    onHideAfterConfirm: () => {}\n  };\n\n  componentDidUpdate = prevProps => {\n    if (!prevProps.isVisible && this.props.isVisible) {\n      if (this.props.mode === \"date\" || this.props.mode === \"datetime\") {\n        this.showDatePickerAndroid().catch(console.error);\n      } else {\n        this.showTimePickerAndroid().catch(console.error);\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props && this.props.isVisible) {\n      if (this.props.mode === \"date\" || this.props.mode === \"datetime\") {\n        this.showDatePickerAndroid().catch(console.error);\n      } else {\n        this.showTimePickerAndroid().catch(console.error);\n      }\n    }\n  };\n\n  showDatePickerAndroid = async () => {\n    let picked;\n    try {\n      picked = await DatePickerAndroid.open({\n        date: this.props.date,\n        minDate: this.props.minimumDate,\n        maxDate: this.props.maximumDate,\n        mode: this.props.datePickerModeAndroid\n      });\n    } catch ({ message }) {\n      console.warn(\"Cannot open date picker\", message);\n      return;\n    }\n\n    const { action, year, month, day } = picked;\n    if (action !== DatePickerAndroid.dismissedAction) {\n      let date;\n      if (this.props.date && !isNaN(this.props.date.getTime())) {\n        let hour = this.props.date.getHours();\n        let minute = this.props.date.getMinutes();\n        date = new Date(year, month, day, hour, minute);\n      } else {\n        date = new Date(year, month, day);\n      }\n\n      if (this.props.mode === \"datetime\") {\n        // Prepopulate and show time picker\n        const timeOptions = {\n          is24Hour: this.props.is24Hour,\n          mode: this.props.timePickerModeAndroid\n        };\n        if (this.props.date) {\n          timeOptions.hour = this.props.date.getHours();\n          timeOptions.minute = this.props.date.getMinutes();\n        }\n\n        let pickedTime;\n        try {\n          pickedTime = await TimePickerAndroid.open(timeOptions);\n        } catch ({ message }) {\n          console.warn(\"Cannot open time picker\", message);\n          return;\n        }\n\n        const { action: timeAction, hour, minute } = pickedTime;\n        if (timeAction !== TimePickerAndroid.dismissedAction) {\n          const selectedDate = new Date(year, month, day, hour, minute);\n          this.props.onConfirm(selectedDate);\n          this.props.onHideAfterConfirm(selectedDate);\n        } else {\n          this.props.onCancel();\n        }\n      } else {\n        this.props.onConfirm(date);\n        this.props.onHideAfterConfirm(date);\n      }\n    } else {\n      this.props.onCancel();\n    }\n  };\n\n  showTimePickerAndroid = async () => {\n    let picked;\n    try {\n      picked = await TimePickerAndroid.open({\n        hour: this.props.date.getHours(),\n        minute: this.props.date.getMinutes(),\n        is24Hour: this.props.is24Hour,\n        mode: this.props.timePickerModeAndroid\n      });\n    } catch ({ message }) {\n      console.warn(\"Cannot open time picker\", message);\n      return;\n    }\n\n    const { action, hour, minute } = picked;\n    if (action !== TimePickerAndroid.dismissedAction) {\n      let date;\n      if (this.props.date) {\n        // This prevents losing the Date elements, see issue #71\n        const year = this.props.date.getFullYear();\n        const month = this.props.date.getMonth();\n        const day = this.props.date.getDate();\n        date = new Date(year, month, day, hour, minute);\n      } else {\n        date = new Date().setHours(hour).setMinutes(minute);\n      }\n      this.props.onConfirm(date);\n      this.props.onHideAfterConfirm(date);\n    } else {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}