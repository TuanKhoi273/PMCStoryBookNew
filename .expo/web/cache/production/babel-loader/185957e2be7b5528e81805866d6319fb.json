{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import getUniqueID from\"./util/getUniqueID\";import convertAdditionalStyles from\"./util/convertAdditionalStyles\";import textStyleProps from\"./data/textStyleProps\";var AstRenderer=function AstRenderer(renderRules,style,onLinkPress,maxTopLevelChildren,topLevelMaxExceededItem,allowedImageHandlers,defaultImageHandler,debugPrintTree){var _this=this;_classCallCheck(this,AstRenderer);this.getRenderFunction=function(type){var renderFunction=_this._renderRules[type];if(!renderFunction){console.warn(\"Warning, unknown render rule encountered: \"+type+\". 'unknown' render rule used (by default, returns null - nothing rendered)\");return _this._renderRules.unknown;}return renderFunction;};this.renderNode=function(node,parentNodes){var isRoot=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var renderFunction=_this.getRenderFunction(node.type);var parents=_toConsumableArray(parentNodes);if(_this._debugPrintTree===true){var str='';for(var a=0;a<parents.length;a++){str=str+'-';}console.log(\"\"+str+node.type);}parents.unshift(node);var children=node.children.map(function(value){return _this.renderNode(value,parents);});if(node.type==='link'||node.type==='blocklink'){return renderFunction(node,children,parentNodes,_this._style,_this._onLinkPress);}if(node.type==='image'){return renderFunction(node,children,parentNodes,_this._style,_this._allowedImageHandlers,_this._defaultImageHandler);}if(children.length===0||node.type==='list_item'){var styleObj={};for(var _a=parentNodes.length-1;_a>-1;_a--){var refStyle={};if(parentNodes[_a].attributes&&parentNodes[_a].attributes.style&&typeof parentNodes[_a].attributes.style==='string'){refStyle=convertAdditionalStyles(parentNodes[_a].attributes.style);}if(_this._style[parentNodes[_a].type]){refStyle=_objectSpread(_objectSpread({},refStyle),StyleSheet.flatten(_this._style[parentNodes[_a].type]));if(parentNodes[_a].type==='list_item'){var contentStyle={};if(parentNodes[_a+1].type==='bullet_list'){contentStyle=_this._style.bullet_list_content;}else if(parentNodes[_a+1].type==='ordered_list'){contentStyle=_this._style.ordered_list_content;}refStyle=_objectSpread(_objectSpread({},refStyle),StyleSheet.flatten(contentStyle));}}var arr=Object.keys(refStyle);for(var b=0;b<arr.length;b++){if(textStyleProps.includes(arr[b])){styleObj[arr[b]]=refStyle[arr[b]];}}}return renderFunction(node,children,parentNodes,_this._style,styleObj);}if(isRoot===true&&_this._maxTopLevelChildren&&children.length>_this._maxTopLevelChildren){children=children.slice(0,_this._maxTopLevelChildren);children.push(_this._topLevelMaxExceededItem);}return renderFunction(node,children,parentNodes,_this._style);};this.render=function(nodes){var root={type:'body',key:getUniqueID(),children:nodes};return _this.renderNode(root,[],true);};this._renderRules=renderRules;this._style=style;this._onLinkPress=onLinkPress;this._maxTopLevelChildren=maxTopLevelChildren;this._topLevelMaxExceededItem=topLevelMaxExceededItem;this._allowedImageHandlers=allowedImageHandlers;this._defaultImageHandler=defaultImageHandler;this._debugPrintTree=debugPrintTree;};export{AstRenderer as default};","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStoryBookNew/node_modules/react-native-markdown-display/src/lib/AstRenderer.js"],"names":["getUniqueID","convertAdditionalStyles","textStyleProps","AstRenderer","renderRules","style","onLinkPress","maxTopLevelChildren","topLevelMaxExceededItem","allowedImageHandlers","defaultImageHandler","debugPrintTree","getRenderFunction","type","renderFunction","_renderRules","console","warn","unknown","renderNode","node","parentNodes","isRoot","parents","_debugPrintTree","str","a","length","log","unshift","children","map","value","_style","_onLinkPress","_allowedImageHandlers","_defaultImageHandler","styleObj","refStyle","attributes","StyleSheet","flatten","contentStyle","bullet_list_content","ordered_list_content","arr","Object","keys","b","includes","_maxTopLevelChildren","slice","push","_topLevelMaxExceededItem","render","nodes","root","key"],"mappings":"8iCAEA,MAAOA,CAAAA,WAAP,0BACA,MAAOC,CAAAA,uBAAP,sCAEA,MAAOC,CAAAA,cAAP,6B,GAEqBC,CAAAA,W,CAMnB,qBACEC,WADF,CAEEC,KAFF,CAGEC,WAHF,CAIEC,mBAJF,CAKEC,uBALF,CAMEC,oBANF,CAOEC,mBAPF,CAQEC,cARF,CASE,uDAgBFC,iBAhBE,CAgBkB,SAACC,IAAD,CAAU,CAC5B,GAAMC,CAAAA,cAAc,CAAG,KAAI,CAACC,YAAL,CAAkBF,IAAlB,CAAvB,CAEA,GAAI,CAACC,cAAL,CAAqB,CACnBE,OAAO,CAACC,IAAR,8CAC+CJ,IAD/C,+EAGA,MAAO,CAAA,KAAI,CAACE,YAAL,CAAkBG,OAAzB,CACD,CAED,MAAOJ,CAAAA,cAAP,CACD,CA3BC,MAmCFK,UAnCE,CAmCW,SAACC,IAAD,CAAOC,WAAP,CAAuC,IAAnBC,CAAAA,MAAmB,2DAAV,KAAU,CAClD,GAAMR,CAAAA,cAAc,CAAG,KAAI,CAACF,iBAAL,CAAuBQ,IAAI,CAACP,IAA5B,CAAvB,CACA,GAAMU,CAAAA,OAAO,oBAAOF,WAAP,CAAb,CAEA,GAAI,KAAI,CAACG,eAAL,GAAyB,IAA7B,CAAmC,CACjC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,OAAO,CAACI,MAA5B,CAAoCD,CAAC,EAArC,CAAyC,CACvCD,GAAG,CAAGA,GAAG,CAAG,GAAZ,CACD,CAEDT,OAAO,CAACY,GAAR,IAAeH,GAAf,CAAqBL,IAAI,CAACP,IAA1B,EACD,CAEDU,OAAO,CAACM,OAAR,CAAgBT,IAAhB,EAGA,GAAIU,CAAAA,QAAQ,CAAGV,IAAI,CAACU,QAAL,CAAcC,GAAd,CAAkB,SAACC,KAAD,CAAW,CAC1C,MAAO,CAAA,KAAI,CAACb,UAAL,CAAgBa,KAAhB,CAAuBT,OAAvB,CAAP,CACD,CAFc,CAAf,CAMA,GAAIH,IAAI,CAACP,IAAL,GAAc,MAAd,EAAwBO,IAAI,CAACP,IAAL,GAAc,WAA1C,CAAuD,CACrD,MAAOC,CAAAA,cAAc,CACnBM,IADmB,CAEnBU,QAFmB,CAGnBT,WAHmB,CAInB,KAAI,CAACY,MAJc,CAKnB,KAAI,CAACC,YALc,CAArB,CAOD,CAED,GAAId,IAAI,CAACP,IAAL,GAAc,OAAlB,CAA2B,CACzB,MAAOC,CAAAA,cAAc,CACnBM,IADmB,CAEnBU,QAFmB,CAGnBT,WAHmB,CAInB,KAAI,CAACY,MAJc,CAKnB,KAAI,CAACE,qBALc,CAMnB,KAAI,CAACC,oBANc,CAArB,CAQD,CASD,GAAIN,QAAQ,CAACH,MAAT,GAAoB,CAApB,EAAyBP,IAAI,CAACP,IAAL,GAAc,WAA3C,CAAwD,CACtD,GAAMwB,CAAAA,QAAQ,CAAG,EAAjB,CAEA,IAAK,GAAIX,CAAAA,EAAC,CAAGL,WAAW,CAACM,MAAZ,CAAqB,CAAlC,CAAqCD,EAAC,CAAG,CAAC,CAA1C,CAA6CA,EAAC,EAA9C,CAAkD,CAEhD,GAAIY,CAAAA,QAAQ,CAAG,EAAf,CAEA,GACEjB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,EACAlB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAD1B,EAEA,MAAOgB,CAAAA,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAAjC,GAA2C,QAH7C,CAIE,CACAiC,QAAQ,CAAGrC,uBAAuB,CAACoB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAA3B,CAAlC,CACD,CAGD,GAAI,KAAI,CAAC4B,MAAL,CAAYZ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAA3B,CAAJ,CAAsC,CACpCyB,QAAQ,gCACHA,QADG,EAEHE,UAAU,CAACC,OAAX,CAAmB,KAAI,CAACR,MAAL,CAAYZ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAA3B,CAAnB,CAFG,CAAR,CAMA,GAAIQ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAAf,GAAwB,WAA5B,CAAyC,CACvC,GAAI6B,CAAAA,YAAY,CAAG,EAAnB,CAEA,GAAIrB,WAAW,CAACK,EAAC,CAAG,CAAL,CAAX,CAAmBb,IAAnB,GAA4B,aAAhC,CAA+C,CAC7C6B,YAAY,CAAG,KAAI,CAACT,MAAL,CAAYU,mBAA3B,CACD,CAFD,IAEO,IAAItB,WAAW,CAACK,EAAC,CAAG,CAAL,CAAX,CAAmBb,IAAnB,GAA4B,cAAhC,CAAgD,CACrD6B,YAAY,CAAG,KAAI,CAACT,MAAL,CAAYW,oBAA3B,CACD,CAEDN,QAAQ,gCACHA,QADG,EAEHE,UAAU,CAACC,OAAX,CAAmBC,YAAnB,CAFG,CAAR,CAID,CACF,CAGD,GAAMG,CAAAA,GAAG,CAAGC,MAAM,CAACC,IAAP,CAAYT,QAAZ,CAAZ,CAEA,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,GAAG,CAAClB,MAAxB,CAAgCqB,CAAC,EAAjC,CAAqC,CACnC,GAAI9C,cAAc,CAAC+C,QAAf,CAAwBJ,GAAG,CAACG,CAAD,CAA3B,CAAJ,CAAqC,CACnCX,QAAQ,CAACQ,GAAG,CAACG,CAAD,CAAJ,CAAR,CAAmBV,QAAQ,CAACO,GAAG,CAACG,CAAD,CAAJ,CAA3B,CACD,CACF,CACF,CAED,MAAOlC,CAAAA,cAAc,CAACM,IAAD,CAAOU,QAAP,CAAiBT,WAAjB,CAA8B,KAAI,CAACY,MAAnC,CAA2CI,QAA3C,CAArB,CACD,CAID,GACEf,MAAM,GAAK,IAAX,EACA,KAAI,CAAC4B,oBADL,EAEApB,QAAQ,CAACH,MAAT,CAAkB,KAAI,CAACuB,oBAHzB,CAIE,CACApB,QAAQ,CAAGA,QAAQ,CAACqB,KAAT,CAAe,CAAf,CAAkB,KAAI,CAACD,oBAAvB,CAAX,CACApB,QAAQ,CAACsB,IAAT,CAAc,KAAI,CAACC,wBAAnB,EACD,CAID,MAAOvC,CAAAA,cAAc,CAACM,IAAD,CAAOU,QAAP,CAAiBT,WAAjB,CAA8B,KAAI,CAACY,MAAnC,CAArB,CACD,CAxJC,MA+JFqB,MA/JE,CA+JO,SAACC,KAAD,CAAW,CAClB,GAAMC,CAAAA,IAAI,CAAG,CAAC3C,IAAI,CAAE,MAAP,CAAe4C,GAAG,CAAEzD,WAAW,EAA/B,CAAmC8B,QAAQ,CAAEyB,KAA7C,CAAb,CACA,MAAO,CAAA,KAAI,CAACpC,UAAL,CAAgBqC,IAAhB,CAAsB,EAAtB,CAA0B,IAA1B,CAAP,CACD,CAlKC,CACA,KAAKzC,YAAL,CAAoBX,WAApB,CACA,KAAK6B,MAAL,CAAc5B,KAAd,CACA,KAAK6B,YAAL,CAAoB5B,WAApB,CACA,KAAK4C,oBAAL,CAA4B3C,mBAA5B,CACA,KAAK8C,wBAAL,CAAgC7C,uBAAhC,CACA,KAAK2B,qBAAL,CAA6B1B,oBAA7B,CACA,KAAK2B,oBAAL,CAA4B1B,mBAA5B,CACA,KAAKc,eAAL,CAAuBb,cAAvB,CACD,C,QAxBkBR,W","sourcesContent":["import {StyleSheet} from 'react-native';\n\nimport getUniqueID from './util/getUniqueID';\nimport convertAdditionalStyles from './util/convertAdditionalStyles';\n\nimport textStyleProps from './data/textStyleProps';\n\nexport default class AstRenderer {\n  /**\n   *\n   * @param {Object.<string, function>} renderRules\n   * @param {any} style\n   */\n  constructor(\n    renderRules,\n    style,\n    onLinkPress,\n    maxTopLevelChildren,\n    topLevelMaxExceededItem,\n    allowedImageHandlers,\n    defaultImageHandler,\n    debugPrintTree,\n  ) {\n    this._renderRules = renderRules;\n    this._style = style;\n    this._onLinkPress = onLinkPress;\n    this._maxTopLevelChildren = maxTopLevelChildren;\n    this._topLevelMaxExceededItem = topLevelMaxExceededItem;\n    this._allowedImageHandlers = allowedImageHandlers;\n    this._defaultImageHandler = defaultImageHandler;\n    this._debugPrintTree = debugPrintTree;\n  }\n\n  /**\n   *\n   * @param {string} type\n   * @return {string}\n   */\n  getRenderFunction = (type) => {\n    const renderFunction = this._renderRules[type];\n\n    if (!renderFunction) {\n      console.warn(\n        `Warning, unknown render rule encountered: ${type}. 'unknown' render rule used (by default, returns null - nothing rendered)`,\n      );\n      return this._renderRules.unknown;\n    }\n\n    return renderFunction;\n  };\n\n  /**\n   *\n   * @param node\n   * @param parentNodes\n   * @return {*}\n   */\n  renderNode = (node, parentNodes, isRoot = false) => {\n    const renderFunction = this.getRenderFunction(node.type);\n    const parents = [...parentNodes];\n\n    if (this._debugPrintTree === true) {\n      let str = '';\n\n      for (let a = 0; a < parents.length; a++) {\n        str = str + '-';\n      }\n\n      console.log(`${str}${node.type}`);\n    }\n\n    parents.unshift(node);\n\n    // calculate the children first\n    let children = node.children.map((value) => {\n      return this.renderNode(value, parents);\n    });\n\n    // render any special types of nodes that have different renderRule function signatures\n\n    if (node.type === 'link' || node.type === 'blocklink') {\n      return renderFunction(\n        node,\n        children,\n        parentNodes,\n        this._style,\n        this._onLinkPress,\n      );\n    }\n\n    if (node.type === 'image') {\n      return renderFunction(\n        node,\n        children,\n        parentNodes,\n        this._style,\n        this._allowedImageHandlers,\n        this._defaultImageHandler,\n      );\n    }\n\n    // We are at the bottom of some tree - grab all the parent styles\n    // this effectively grabs the styles from parents and\n    // applies them in order of priority parent (least) to child (most)\n    // to allow styling global, then lower down things individually\n\n    // we have to handle list_item seperately here because they have some child\n    // pseudo classes that need the additional style props from parents passed down to them\n    if (children.length === 0 || node.type === 'list_item') {\n      const styleObj = {};\n\n      for (let a = parentNodes.length - 1; a > -1; a--) {\n        // grab and additional attributes specified by markdown-it\n        let refStyle = {};\n\n        if (\n          parentNodes[a].attributes &&\n          parentNodes[a].attributes.style &&\n          typeof parentNodes[a].attributes.style === 'string'\n        ) {\n          refStyle = convertAdditionalStyles(parentNodes[a].attributes.style);\n        }\n\n        // combine in specific styles for the object\n        if (this._style[parentNodes[a].type]) {\n          refStyle = {\n            ...refStyle,\n            ...StyleSheet.flatten(this._style[parentNodes[a].type]),\n          };\n\n          // workaround for list_items and their content cascading down the tree\n          if (parentNodes[a].type === 'list_item') {\n            let contentStyle = {};\n\n            if (parentNodes[a + 1].type === 'bullet_list') {\n              contentStyle = this._style.bullet_list_content;\n            } else if (parentNodes[a + 1].type === 'ordered_list') {\n              contentStyle = this._style.ordered_list_content;\n            }\n\n            refStyle = {\n              ...refStyle,\n              ...StyleSheet.flatten(contentStyle),\n            };\n          }\n        }\n\n        // then work out if any of them are text styles that should be used in the end.\n        const arr = Object.keys(refStyle);\n\n        for (let b = 0; b < arr.length; b++) {\n          if (textStyleProps.includes(arr[b])) {\n            styleObj[arr[b]] = refStyle[arr[b]];\n          }\n        }\n      }\n\n      return renderFunction(node, children, parentNodes, this._style, styleObj);\n    }\n\n    // cull top level children\n\n    if (\n      isRoot === true &&\n      this._maxTopLevelChildren &&\n      children.length > this._maxTopLevelChildren\n    ) {\n      children = children.slice(0, this._maxTopLevelChildren);\n      children.push(this._topLevelMaxExceededItem);\n    }\n\n    // render anythign else that has a normal signature\n\n    return renderFunction(node, children, parentNodes, this._style);\n  };\n\n  /**\n   *\n   * @param nodes\n   * @return {*}\n   */\n  render = (nodes) => {\n    const root = {type: 'body', key: getUniqueID(), children: nodes};\n    return this.renderNode(root, [], true);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}