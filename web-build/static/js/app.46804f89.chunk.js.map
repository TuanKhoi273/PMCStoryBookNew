{"version":3,"sources":["src/colors/index.js","src/component/index.js","src/component/Common/RadioButton.js","src/component/Common/Label.js","src/component/Common/TextButton.js","src/component/Common/StoryContainer.js","src/component/Common/styleCommon.js","App.js","storybook/index.js","storybook/storyLoader.js","storybook/rn-addons.js","src/component/Common/Avatar.js","src/component/Common/0-Introduction.stories.js","src/component/Common/Button.js","src/component/Common/1-Colors.stories.js","src/component/Common/2-FontText.stories.js","src/component/Common/3-Avatar.stories.js","src/component/Common/4-Button.stories.js","src/component/Common/5-FloatButton.stories.js","src/component/Common/6-Input.stories.js","src/component/Common/7-Label.stories.js","src/component/Common/8-RadioButton.stories.js","src/component/Common/9-TextButton.stories.js","src/component/Common/FloatButton.js","src/component/Common/Input.js"],"names":["PRIMARY","blue_01","blue_02","blue_03","blue_04","blue_05","blue_06","NEUTRAL","gray_01","gray_02","gray_03","gray_04","gray_05","gray_06","gray_07","geekblue","geekblue_01","GRADIENT","blue","SEMATIC","green","megeta","yellow","ACCENT","gray","gold","orange","mageta_02","mageta_03","green_02","purple_01","purple_02","purple_03","ButtonType","DEFAULT","GHOST","ButtonState","ACTIVE","DISABLE","FontText","Heading1","styled","Text","ColorApp","Heading2","Heading3","Heading4","Heading5","Button1","Button2","Caption1","Caption2","Body1","Body2","Body3","SmallText","styles","StyleSheet","create","container","backgroundColor","width","height","borderRadius","justifyContent","alignItems","borderWidth","borderColor","RadioButton","props","customStyle","active","disabled","useEffect","opacity","style","paddingHorizontal","alignSelf","paddingVertical","Label","color","text","customTextStyle","flexDirection","textStyle","marginHorizontal","BUTTON_COLOR","DEFAULT_BUTTON_COLOR","ACTIVE_BUTTON_COLOR","DISABLE_BUTTON_COLOR","TextButton","name","onPress","state","enableButtonLeft","enableButtonRight","customLeftComponent","customRightComponent","leftIconName","rightIconName","getButtonColor","buttonStyle","activeOpacity","size","flex","padding","child","header","headerText","textAlign","value","valueText","table","paddingBottom","generateColor","generateRow","type","defaultValue","generateExplainRow","explain","scrollView","engine","position","right","body","sectionContainer","marginTop","sectionTitle","fontSize","fontWeight","sectionDescription","highlight","footer","paddingRight","testColor","StorybookUI","console","disableYellowBox","addDecorator","withKnobs","configure","loadStories","module","StorybookUIRoot","getStorybookUI","AppRegistry","registerComponent","exports","require","stories","Avatar","rounded","image","source","uri","substring","storiesOf","add","Linking","openURL","marginVertical","iconColor","alert","marginRight","marginLeft","customIcon","placeholder","enableRightIcon","iconRightColor","enableLeftIcon","inputColor","customStype","secureTextEntry","onRightClick","containerStyle","topLabel","marginBottom","Button","defaultButtonStyle","ghostButtonStyle","ghostTextStyle","flexWrap","colors","with","avatarStories","FloatButtonStories","iconName","margin","iconLeftName","lineHeight","FloatButton","input","borderBottomWidth","textInputStyle","Input","textInputRef","useRef","useState","focus","setFocus","iconRightName","iconLeftColor","editable","onChangeText","customLeading","customTrailing","keyboardType","isTextArea","placeholderStyle","getChild","onFocus","onBlur","ref","numberOfLines","multiline","textAlignVertical","underlineColorAndroid"],"mappings":"+gBAAe,GACbA,QAAS,CACPC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,WAEXC,QAAS,CACPC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,SAAU,UACVC,YAAa,WAEfC,SAAU,CACRC,KAAM,CAAC,UAAW,YAEpBC,QAAS,CACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,WAEVC,OAAQ,CACNC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,UAAW,UACXC,UAAW,UACXV,KAAM,UACNW,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,UAAW,Y,2DC1BFC,EAAa,CACxBC,QAAS,EACTC,MAAO,GAGIC,EAAc,CACzBF,QAAS,EACTG,OAAQ,EACRC,QAAS,GAEEC,EAAW,CACtBC,SAAUC,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5B+B,SAAUH,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5BgC,SAAUJ,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5BiC,SAAUL,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5BkC,SAAUN,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAK5BmC,QAASP,IAAOC,KAAT,oFACIC,EAASpC,QAAQM,SAI5BoC,QAASR,IAAOC,KAAT,oFACIC,EAASpC,QAAQM,SAI5BqC,SAAUT,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5BsC,SAAUV,IAAOC,KAAT,oFACGC,EAASpC,QAAQM,SAI5BuC,MAAOX,IAAOC,KAAT,oFACMC,EAASpC,QAAQM,SAI5BwC,MAAOZ,IAAOC,KAAT,oFACMC,EAASpC,QAAQM,SAI5ByC,MAAOb,IAAOC,KAAT,8KACMC,EAASpC,QAAQM,SAO5B0C,UAAWd,IAAOC,KAAT,oFACEC,EAASpC,QAAQM,W,iCCxF9B,yCAGM2C,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,gBAAiB,QACjBC,MAAO,GACPC,OAAQ,GACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,SACZC,YAAa,EACbC,YAAaxB,IAAS3C,QAAQI,WAqBnBgE,IAjBf,SAAqBC,GACnB,IAAQC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SAG7B,OAFAC,qBAAU,cAAU,IAGlB,kBAAC,IAAD,CACEC,QAASF,EAAW,GAAM,EAC1BG,MAAO,CACLnB,EAAOG,UACPY,EAAS,CAAEL,YAAa,GAAM,KAC9BM,EAAW,CAAEL,YAAaxB,IAASpC,QAAQE,SAAY,KAHlD,MAIL6D,IAAe,Q,iCC3BvB,yCAGMd,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTiB,kBAAmB,GACnBZ,eAAgB,SAChBC,WAAY,SACZE,YAAaxB,IAASpC,QAAQE,QAC9BoE,UAAW,WACXd,aAAc,GACde,gBAAiB,KAyBNC,IArBf,SAAeV,GACb,MAKIA,EAJFW,aADF,MACUrC,IAAS3C,QAAQI,QAD3B,EAEE6E,EAGEZ,EAHFY,KACAX,EAEED,EAFFC,YACAY,EACEb,EADFa,gBAGF,OACE,kBAAC,IAAD,CACEP,MAAO,CAACnB,EAAOG,UAAW,CAAEC,gBAAiBoB,GAAtC,MAA+CV,IAAe,KAErE,kBAAC,IAAShB,MAAV,CACEqB,MAAO,CAAC,CAAEK,MAAO,SAAWE,GAAoC,KADlE,MAGGD,IAAQ,O,iCC9BjB,yDAIMzB,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CAITI,aAAc,GACdC,eAAgB,SAChBC,WAAY,SACZkB,cAAe,OAEjBC,UAAW,CACTJ,MAAOrC,IAASpC,QAAQO,QACxBuE,iBAAkB,KAIhBC,EAAe,CACnBC,qBAAsB5C,IAAS3C,QAAQI,QACvCoF,oBAAqB7C,IAAS3C,QAAQK,QACtCoF,qBAAsB9C,IAASpC,QAAQE,SAyD1BiF,IAtDf,SAAoBrB,GAClB,IACEC,EAWED,EAXFC,YACAY,EAUEb,EAVFa,gBACAS,EASEtB,EATFsB,KACAC,EAQEvB,EARFuB,QAJF,EAYIvB,EAPFwB,aALF,MAKUzD,IAAYF,QALtB,IAYImC,EANFyB,wBANF,WAYIzB,EALF0B,yBAPF,WAYI1B,EAJF2B,2BARF,MAQwB,KARxB,IAYI3B,EAHF4B,4BATF,MASyB,KATzB,IAYI5B,EAFF6B,oBAVF,MAUiB,OAVjB,IAYI7B,EADF8B,qBAXF,MAWkB,gBAXlB,EAaA1B,qBAAU,cAAU,IACpB,IAAM2B,EAAiB,WACrB,OAAQP,GACN,KAAKzD,IAAYC,OACf,OAAOiD,EAAaE,oBACtB,KAAKpD,IAAYE,QACf,OAAOgD,EAAaG,qBACtB,QACE,OAAOH,EAAaC,uBAIpBc,EAAc,CAAC7C,EAAOG,UAAR,MAAmBW,IAAe,IAEhDc,EAAY,CAChB5B,EAAO4B,UACP,CAAEJ,MAAOoB,KAFO,MAGhBlB,IAAmB,IAErB,OACE,kBAAC,IAAD,CAAMR,QAASmB,GAASzD,IAAYE,QAAU,GAAM,GAClD,kBAAC,IAAD,CACEqC,MAAO,CAAC0B,GACRT,QAASC,GAASzD,IAAYE,QAAU,KAAOsD,EAC/CU,cAAeT,GAASzD,IAAYE,QAAU,EAAI,IAEjD0D,GAA4C,KAC5CF,EACC,kBAAC,IAAD,CAAMH,KAAMO,EAAclB,MAAOoB,IAAkBG,KAAM,KACvD,KACJ,kBAAC,IAASvD,QAAV,CAAkB2B,MAAOS,GAAYO,GACpCI,EACC,kBAAC,IAAD,CAAMJ,KAAMQ,EAAenB,MAAOoB,IAAkBG,KAAM,KACxD,KACHN,GAA8C,S,gCC1EvD,mCAGMzC,GAHN,KAGeC,IAAWC,OAAO,CAC/BC,UAAW,CACT6C,KAAM,EACNC,QAAS,OAWErC,IAPf,SAAqBC,GACnB,IAAQqC,EAAUrC,EAAVqC,MAGR,OAFAjC,qBAAU,cAAU,IAEb,kBAAC,IAAD,CAAYE,MAAOnB,EAAOG,WAAY+C,K,+BCd/C,iLAGalD,EAASC,IAAWC,OAAO,CACtCiD,OAAQ,CACNH,KAAM,EACNxC,eAAgB,SAChBC,WAAY,SACZL,gBAAiBjB,IAAS3C,QAAQK,QAClCyE,gBAAiB,EACjBF,kBAAmB,EACnBV,YAAa,IAGf0C,WAAY,CACV5B,MAAO,QACP6B,UAAW,UAGbC,MAAO,CACLN,KAAM,EACNxC,eAAgB,SAChBC,WAAY,SAEZa,gBAAiB,EACjBF,kBAAmB,EACnBV,YAAa,IAEf6C,UAAW,CACT/B,MAAO,QACP6B,UAAW,UAEbG,MAAO,CACL9C,YAAa,IAEfc,MAAO,CACLnB,MAAO,IACPC,OAAQ,IACRE,eAAgB,WAChBC,WAAY,SACZgD,cAAe,KAGNC,EAAgB,SAAClC,EAAOW,GACnC,OACE,kBAAC,IAAD,CAAMhB,MAAO,CAACnB,EAAOwB,MAAO,CAAEpB,gBAAiBoB,KAC7C,kBAAC,IAAS5B,MAAV,KAAiBuC,KAIVwB,EAAc,SAACR,EAAQhB,EAAMyB,EAAMC,GAC9C,OAAIV,EAEA,kBAAC,IAAD,CAAMhC,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAMR,MAAOnB,EAAOmD,QAClB,kBAAC,IAAS7D,SAAV,CAAmB6B,MAAOnB,EAAOoD,YAC9BjB,IAGL,kBAAC,IAAD,CAAMhB,MAAOnB,EAAOmD,QAClB,kBAAC,IAAS7D,SAAV,CAAmB6B,MAAOnB,EAAOoD,YAC9BQ,IAGL,kBAAC,IAAD,CAAMzC,MAAOnB,EAAOmD,QAClB,kBAAC,IAAS7D,SAAV,CAAmB6B,MAAOnB,EAAOoD,YAC9BS,KAOT,kBAAC,IAAD,CAAM1C,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAMR,MAAOnB,EAAOsD,OAClB,kBAAC,IAAS1D,MAAV,CAAgBuB,MAAOnB,EAAOuD,WAAYpB,IAE5C,kBAAC,IAAD,CAAMhB,MAAOnB,EAAOsD,OAClB,kBAAC,IAAS1D,MAAV,CAAgBuB,MAAOnB,EAAOuD,WAAYK,IAE5C,kBAAC,IAAD,CAAMzC,MAAOnB,EAAOsD,OAClB,kBAAC,IAAS1D,MAAV,CAAgBuB,MAAOnB,EAAOuD,WAAYM,MAMrCC,EAAqB,SAACX,EAAQhB,EAAM4B,GAC/C,OAAIZ,EAEA,kBAAC,IAAD,CAAMhC,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAMR,MAAOnB,EAAOmD,QAClB,kBAAC,IAAS7D,SAAV,CAAmB6B,MAAOnB,EAAOoD,YAC9BjB,IAGL,kBAAC,IAAD,CAAMhB,MAAOnB,EAAOmD,QAClB,kBAAC,IAAS7D,SAAV,CAAmB6B,MAAOnB,EAAOoD,YAC9BW,KAOT,kBAAC,IAAD,CAAM5C,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAMR,MAAOnB,EAAOsD,OAClB,kBAAC,IAAS1D,MAAV,CAAgBuB,MAAOnB,EAAOuD,WAAYpB,IAE5C,kBAAC,IAAD,CAAMhB,MAAOnB,EAAOsD,OAClB,kBAAC,IAAS1D,MAAV,CAAgBuB,MAAOnB,EAAOuD,WAAYQ,O,iCCtGlD,uEAsPe9D,IAAWC,OAAO,CAC/B8D,WAAY,CAEVf,QAAS,IAEXgB,OAAQ,CACNC,SAAU,WACVC,MAAO,GAETC,KAAM,GAGNC,iBAAkB,CAChBC,UAAW,GACXlD,kBAAmB,IAErBmD,aAAc,CACZC,SAAU,GACVC,WAAY,OAEdC,mBAAoB,CAClBJ,UAAW,EACXE,SAAU,GACVC,WAAY,OAEdE,UAAW,CACTF,WAAY,OAEdG,OAAQ,CACNJ,SAAU,GACVC,WAAY,MACZxB,QAAS,EACT4B,aAAc,GACdxB,UAAW,SAEbyB,UAAW,CACTzE,MAAO,IACPC,OAAQ,MAKGyE,MAAf,EACAC,QAAQC,kBAAmB,G,6FC5R3BC,uBAAaC,aAGbC,qBAAU,WAERC,0BACCC,GAIH,IAAMC,EAAkBC,yBAAe,IAMvCC,IAAYC,kBAAkB,cAAc,kBAAMH,KAEnCA,Q,yCCAfD,EAAOK,QAAU,CACfN,YA3BF,WACEO,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAkBRC,QAfc,CACd,iDACA,2CACA,6CACA,2CACA,2CACA,gDACA,0CACA,0CACA,gDACA,kD,kGC5BF,sB,gCCAA,kDAIM7F,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,gBAAiBjB,IAAS3C,QAAQI,QAClC2D,aAAc,GACdC,eAAgB,SAChBC,WAAY,UAEdmB,UAAW,CACTJ,MAAOrC,IAASpC,QAAQO,WAoDbwI,IA/Cf,SAAgBjF,GACd,MAQIA,EAPFkC,YADF,MACS,GADT,IAQIlC,EANFkF,eAFF,SAGE3D,EAKEvB,EALFuB,QACAtB,EAIED,EAJFC,YACAkF,EAGEnF,EAHFmF,MALF,EAQInF,EAFFsB,YANF,MAMS,SANT,EAOET,EACEb,EADFa,gBAGF,OACE,kBAAC,IAAD,CACEU,QAASA,EACTjB,MAAO,CACLnB,EAAOG,UACP,CACEE,MAAO0C,EACPzC,OAAQyC,EACRxC,aAAcwF,EAAUhD,EAAO,EAAI,IALhC,MAOLjC,IAAe,KAGhBkF,EACC,kBAAC,IAAD,CACE7E,MAAO,CACLnB,EAAOG,UACP,CACEE,MAAO0C,EACPzC,OAAQyC,EACRxC,aAAcwF,EAAUhD,EAAO,EAAI,KAGvCkD,OAAQ,CACNC,IAAKF,KAIT,kBAAC,IAASxG,QAAV,CAAkB2B,MAAO,CAACnB,EAAO4B,UAAR,MAAmBF,IAAmB,KAC5DS,EAAKgE,UAAU,EAAG,O,iCCzD7B,8FAoCsBC,oBAAU,WAAYd,GAGzCe,IAAI,iBAAiB,kBACpB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAASlE,SAAV,qCAEA,kBAAC,IAASY,MAAV,CAAgBuB,MAAO,CAAEmD,UAAW,KAApC,4GAGE,kBAAC,IAAS1E,MAAV,CACEuB,MAAO,CAAEK,MAAOrC,IAAS3C,QAAQK,SACjCuF,QAAS,kBACPkE,IAAQC,QACN,6DAIH,IARH,4DAaF,kBAAC,IAASnH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,aAKA,kBAAC,IAAD,CACEsE,MAAO,CACLf,gBAAiBjB,IAAS3C,QAAQI,QAClCqG,QAAS,GACT1C,aAAc,IAGhB,kBAAC,IAASX,MAAV,CAAgBuB,MAAO,CAAEK,MAAO,UAAhC,sCAGA,kBAAC,IAAS5B,MAAV,CAAgBuB,MAAO,CAAEK,MAAO,UAAhC,MACA,kBAAC,IAAS5B,MAAV,CAAgBuB,MAAO,CAAEK,MAAO,UAAhC,oCAKF,kBAAC,IAASpC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAMA,kBAAC,IAAD,ypBA2BPwJ,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAASlE,SAAV,mCAEA,kBAAC,IAASI,SAAV,CAAmB+B,MAAO,CAAEqF,eAAgB,KAA5C,aAGA,kBAAC,IAAD,CACErE,KAAK,iBACLsE,UAAW,QACXnE,kBAAkB,EAClBF,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CACEvE,KAAK,iBACLyB,KAAMnF,IAAWC,QACjB2D,MAAOzD,IAAYC,OACnBiC,YAAa,CAAEwD,UAAW,IAC1BlC,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAAD,CACEvE,KAAK,mBACLyB,KAAMnF,IAAWC,QACjB2D,MAAOzD,IAAYE,QACnBgC,YAAa,CAAEwD,UAAW,IAC1BlC,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CACEvE,KAAK,eACLrB,YAAa,CAAEwD,UAAW,IAC1BV,KAAMnF,IAAWE,MACjByD,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CACEvE,KAAK,eACLyB,KAAMnF,IAAWE,MACjB0D,MAAOzD,IAAYC,OACnBiC,YAAa,CAAEwD,UAAW,IAC1BlC,QAAS,WACPsE,MAAM,QAERlE,oBACE,kBAAC,IAAD,CACErB,MAAO,CAAEwF,YAAa,GACtBxE,KAAK,SACLX,MAAO,QACPuB,KAAM,OAIZ,kBAAC,IAAD,CACEZ,KAAK,iBACLyB,KAAMnF,IAAWE,MACjB0D,MAAOzD,IAAYE,QACnBgC,YAAa,CAAEwD,UAAW,IAC1B/B,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAStH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,mBAMA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaZ,QAAQ,EAAMD,YAAa,CAAEe,iBAAkB,MAC5D,kBAAC,IAAD,CAAab,UAAU,EAAMF,YAAa,CAAE6F,YAAa,MACzD,kBAAC,IAAD,CAAa5F,QAAQ,EAAMC,UAAU,KAGvC,kBAAC,IAAS5B,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,mBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAaoB,KAAM,GAAIjC,YAAa,CAAE8F,WAAY,MAElD,kBAAC,IAAD,CACE7D,KAAM,GACNgD,SAAS,EACT3D,QAAS,WACPsE,MAAM,QAERD,UAAU,MACV3F,YAAa,CAAEe,iBAAkB,MAGnC,kBAAC,IAAD,CACEkB,KAAM,GACNgD,SAAS,EACT3D,QAAS,WACPsE,MAAM,QAERD,UAAU,MACVI,WAAY,kBAAC,IAAD,CAAM1E,KAAK,SAASX,MAAO,QAASuB,KAAM,QAI1D,kBAAC,IAAS3D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kBAMA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CACEQ,KAAK,UACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,IAC1B/B,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CACEvE,KAAK,UACLE,MAAOzD,IAAYC,OACnBiC,YAAa,CAAEwD,UAAW,IAC1B/B,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CACEvE,KAAK,UACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,IAC1BhC,kBAAkB,EAClBF,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAAD,CACEvE,KAAK,UACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,GAAIsC,WAAY,IAE1CxE,QAAS,WACPsE,MAAM,WAKZ,kBAAC,IAAStH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAMA,kBAAC,IAAD,CAAOiK,YAAa,sBAEpB,kBAAC,IAAD,CAAOA,YAAa,oBAAqBC,iBAAiB,IAC1D,kBAAC,IAAD,CACED,YAAa,oBACbC,iBAAiB,EACjBC,eAAgB,QAElB,kBAAC,IAAD,CACEF,YAAa,aACbC,iBAAiB,EACjBE,gBAAgB,EAChBD,eAAgB,MAChBE,WAAY/H,IAASpB,OAAOL,OAG9B,kBAAC,IAAD,CACEyJ,YAAa,CACXzG,YAAa,EACbH,aAAc,EACda,kBAAmB,IAErB0F,YAAa,oBACbC,iBAAiB,EACjBE,gBAAgB,EAChB3D,MAAO,MACP8D,iBAAiB,EACjBC,aAAc,WACZX,MAAM,UAIV,kBAAC,IAAD,CACEY,eAAgB,CAAEhD,UAAW,IAC7BwC,YAAa,oBACbC,iBAAiB,EACjBE,gBAAgB,EAChBI,aAAc,WACZX,MAAM,QAGRa,SAAS,SAGX,kBAAC,IAASnI,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAMA,kBAAC,IAAD,CAAO4E,KAAM,UACb,kBAAC,IAAD,CACEA,KAAM,+BACND,MAAO,MACPV,YAAa,CAAE0F,eAAgB,MAEjC,kBAAC,IAASpH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,aAMA,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEsE,MAAO,CAAEQ,cAAe,MAAO6F,aAAc,GAAIlD,UAAW,KAE5D,kBAAC,IAAD,CAAQvB,KAAM,GAAIgD,SAAS,IAE3B,kBAAC,IAAD,CACEhD,KAAM,GACNgD,SAAS,EACTjF,YAAa,CAAE8F,WAAY,IAC3BZ,MACE,uG,qDCxWhB,yDAIMhG,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,gBAAiBjB,IAAS3C,QAAQI,QAClCyD,MAAO,OACPC,OAAQ,GACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,SACZkB,cAAe,OAEjBC,UAAW,CACTJ,MAAOrC,IAASpC,QAAQO,QACxBuE,iBAAkB,KAIhBC,EAAe,CACnBC,qBAAsB5C,IAAS3C,QAAQI,QACvCoF,oBAAqB7C,IAAS3C,QAAQK,QACtCoF,qBAAsB9C,IAASpC,QAAQE,SAwE1BwK,IArEf,SAAgB5G,GACd,IACEC,EAaED,EAbFC,YACAY,EAYEb,EAZFa,gBACAS,EAWEtB,EAXFsB,KACAC,EAUEvB,EAVFuB,QAJF,EAcIvB,EATF+C,YALF,MAKSnF,IAAWC,QALpB,IAcImC,EARFwB,aANF,MAMUzD,IAAYF,QANtB,IAcImC,EAPF4F,iBAPF,MAOc,QAPd,IAcI5F,EANFyB,wBARF,WAcIzB,EALF0B,yBATF,WAcI1B,EAJF2B,2BAVF,MAUwB,KAVxB,IAcI3B,EAHF4B,4BAXF,MAWyB,KAXzB,IAcI5B,EAFF6B,oBAZF,MAYiB,eAZjB,IAcI7B,EADF8B,qBAbF,MAakB,gBAblB,EAeA1B,qBAAU,cAAU,IACpB,IAAM2B,EAAiB,WACrB,OAAQP,GACN,KAAKzD,IAAYC,OACf,OAAOiD,EAAaE,oBACtB,KAAKpD,IAAYE,QACf,OAAOgD,EAAaG,qBACtB,QACE,OAAOH,EAAaC,uBAGpB2F,EAAqB,CAAEtH,gBAAiBwC,KACxC+E,EAAmB,CACvBvH,gBAAiB,QACjBM,YAAa,EACbC,YAAaiC,KAETC,EAAc,CAClB7C,EAAOG,UACPyD,GAAQnF,IAAWE,MAAQgJ,EAAmBD,EAF5B,MAGlB5G,IAAe,IAIX8G,EAAiB,CACrBpG,MAAOoB,KAEHhB,EAAY,CAChB5B,EAAO4B,UACPgC,GAAQnF,IAAWE,MAAQiJ,EANJ,CAAEpG,MAAO,SAIhB,MAGhBE,IAAmB,IAErB,OACE,kBAAC,IAAD,CAAMR,QAASmB,GAASzD,IAAYE,QAAU,GAAM,GAClD,kBAAC,IAAD,CACEqC,MAAO,CAAC0B,GACRT,QAASC,GAASzD,IAAYE,QAAU,KAAOsD,EAC/CU,cAAeT,GAASzD,IAAYE,QAAU,EAAI,IAEjD0D,GAA4C,KAC5CF,EACC,kBAAC,IAAD,CAAMH,KAAMO,EAAclB,MAAOiF,EAAW1D,KAAM,KAChD,KACJ,kBAAC,IAASvD,QAAV,CAAkB2B,MAAOS,GAAYO,GACpCI,EACC,kBAAC,IAAD,CAAMJ,KAAMQ,EAAenB,MAAOiF,EAAW1D,KAAM,KACjD,KACHN,GAA8C,S,iCCzFvD,4FASsB2D,oBAAU,SAAUd,GAE5Be,IAAI,OAAO,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CAAmB+B,MAAO,CAAEqG,aAAc,KAA1C,WAGA,kBAAC,IAAD,yFAGA,kBAAC,IAASpI,SAAV,CAAmB+B,MAAO,CAAEqF,eAAgB,KAA5C,UAGA,kBAAC,IAASjH,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,aAIA,kBAAC,IAAD,CACErF,MAAO,CAAEQ,cAAe,MAAOkG,SAAU,OAAQL,aAAc,KAE9D9D,YAAcvE,IAAS3C,QAAQC,QAAS,WACxCiH,YAAcvE,IAAS3C,QAAQE,QAAS,WACxCgH,YAAcvE,IAAS3C,QAAQG,QAAS,WACxC+G,YAAcvE,IAAS3C,QAAQI,QAAS,WACxC8G,YAAcvE,IAAS3C,QAAQK,QAAS,WACxC6G,YAAcvE,IAAS3C,QAAQM,QAAS,YAG3C,kBAAC,IAAD,iFAKA,kBAAC,IAASyC,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,aAIA,kBAAC,IAAD,CACErF,MAAO,CAAEQ,cAAe,MAAOkG,SAAU,OAAQL,aAAc,KAE9D9D,YAAcvE,IAASpC,QAAQC,QAAS,WACxC0G,YAAcvE,IAASpC,QAAQE,QAAS,WACxCyG,YAAcvE,IAASpC,QAAQG,QAAS,WACxCwG,YAAcvE,IAASpC,QAAQI,QAAS,WACxCuG,YAAcvE,IAASpC,QAAQK,QAAS,WACxCsG,YAAcvE,IAASpC,QAAQM,QAAS,WACxCqG,YAAcvE,IAASpC,QAAQO,QAAS,WACxCoG,YAAcvE,IAASpC,QAAQQ,SAAU,YACzCmG,YAAcvE,IAASpC,QAAQS,YAAa,gBAE/C,kBAAC,IAAD,iFAKA,kBAAC,IAAS+B,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,cAIA,kBAAC,IAAD,CACEsB,OAAQ3I,IAAS1B,SAASC,KAC1ByD,MAAO,CAAE4G,KAAM,IAAKzH,OAAQ,IAAKkH,aAAc,MAGjD,kBAAC,IAAD,0LAQA,kBAAC,IAASjI,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,aAIA,kBAAC,IAAD,CACErF,MAAO,CAAEQ,cAAe,MAAOkG,SAAU,OAAQL,aAAc,KAE9D9D,YAAcvE,IAASxB,QAAQC,MAAO,SACtC8F,YAAcvE,IAASxB,QAAQE,OAAQ,UACvC6F,YAAcvE,IAASxB,QAAQG,OAAQ,WAE1C,kBAAC,IAAD,+EAKA,kBAAC,IAASyB,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,YAIA,kBAAC,IAAD,CACErF,MAAO,CAAEQ,cAAe,MAAOkG,SAAU,OAAQL,aAAc,KAE9D9D,YAAcvE,IAASpB,OAAOC,KAAM,QACpC0F,YAAcvE,IAASpB,OAAOE,KAAM,QACpCyF,YAAcvE,IAASpB,OAAOG,OAAQ,UACtCwF,YAAcvE,IAASpB,OAAOI,UAAW,aACzCuF,YAAcvE,IAASpB,OAAOK,UAAW,aACzCsF,YAAcvE,IAASpB,OAAOM,SAAU,YACxCqF,YAAcvE,IAASpB,OAAOO,UAAW,aACzCoF,YAAcvE,IAASpB,OAAOQ,UAAW,aACzCmF,YAAcvE,IAASpB,OAAOS,UAAW,cAG5C,kBAAC,IAAD,6EAKA,kBAAC,IAAD,CAAM2C,MAAO,CAAEb,OAAQ,a,sDC1H/B,mFAOsB8F,oBAAU,WAAYd,GAE9Be,IAAI,OAAO,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CAAmB+B,MAAO,CAAEqG,aAAc,KAA1C,WAGA,kBAAC,IAAD,yFAGA,kBAAC,IAASpI,SAAV,CAAmB+B,MAAO,CAAEqF,eAAgB,KAA5C,UAGA,kBAAC,IAAD,CAAMrF,MAAO,CAACnB,IAAOwD,MAAO,CAAEgE,aAAc,MACzC7D,aAAY,EAAM,OAAQ,WAAY,cACtCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,UAAW,OAAQ,QACtCA,aAAY,EAAO,UAAW,OAAQ,QACtCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,WAAY,OAAQ,QACvCA,aAAY,EAAO,QAAS,OAAQ,QACpCA,aAAY,EAAO,QAAS,OAAQ,QACpCA,aAAY,EAAO,QAAS,OAAQ,QACpCA,aAAY,EAAO,YAAa,OAAQ,SAG3C,kBAAC,IAAD,+HAKA,kBAAC,IAAD,CAAMxC,MAAO,CAAEb,OAAQ,a,sDC5C/B,4GAeM0H,EAAgB5B,oBAAU,SAAUd,GAG1C0C,EAAc9C,aAAaC,aAI3B6C,EACG3B,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,+EAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,OAAQ,SAAU,QACrCA,aAAY,EAAO,UAAW,UAAW,SACzCA,aAAY,EAAO,OAAQ,SAAU,YACrCA,aAAY,EAAO,UAAW,WAAY,QAC1CA,aAAY,EAAO,cAAe,SAAU,MAC5CA,aAAY,EAAO,QAAS,SAAU,MACtCA,aAAY,EAAO,kBAAmB,SAAU,OAGnD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aAAmB,EAAO,OAAQ,kBAClCA,aACC,EACA,UACA,sDAEDA,aACC,EACA,OACA,oEAEDA,aAAmB,EAAO,UAAW,8BACrCA,aACC,EACA,cACA,iCAEDA,aAAmB,EAAO,QAAS,wBACnCA,aACC,EACA,kBACA,gDAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,oBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACED,gBAAiB,CAAE8C,SAAU,IAC7B1D,YAAa,CAAEe,iBAAkB,MAIrC,kBAAC,IAASzC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,MAAO6F,aAAc,KACjD,kBAAC,IAAD,CAAQzB,SAAS,IACjB,kBAAC,IAAD,CACEA,SAAS,EACT5D,KAAK,OACLrB,YAAa,CAAEe,iBAAkB,MAIrC,kBAAC,IAAD,oKAOA,kBAAC,IAASzC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,uBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CACEqE,MACE,+FAGJ,kBAAC,IAAD,CACED,SAAS,EACT5D,KAAK,OACL6D,MACE,6FAEFlF,YAAa,CAAEe,iBAAkB,MAGrC,kBAAC,IAAD,CACEkE,SAAS,EACThD,KAAM,IACNZ,KAAK,OACL6D,MACE,6FAEFlF,YAAa,CAAE0F,eAAgB,KAEjC,kBAAC,IAAD,0UAYA,kBAAC,IAASnH,SAAV,CACE8B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAASxB,QAAQC,QADvD,oEAKA,kBAAC,IAAD,CAAMuD,MAAO,CAAEb,OAAQ,a,sDCrKjC,2FAUsB8F,oBAAU,SAAUd,GAGvCe,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,+GAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,cAAe,SAAU,QAC5CA,aAAY,EAAO,kBAAmB,SAAU,QAChDA,aAAY,EAAO,OAAQ,SAAU,MACrCA,aAAY,EAAO,UAAW,WAAY,QAC1CA,aAAY,EAAO,OAAQ,aAAc,sBACzCA,aAAY,EAAO,QAAS,cAAe,uBAC3CA,aAAY,EAAO,YAAa,SAAU,SAC1CA,aAAY,EAAO,mBAAoB,UAAW,SAClDA,aAAY,EAAO,oBAAqB,UAAW,SACnDA,aAAY,EAAO,sBAAuB,YAAa,QACvDA,aAAY,EAAO,uBAAwB,YAAa,QACxDA,aAAY,EAAO,eAAgB,SAAU,gBAC7CA,aAAY,EAAO,gBAAiB,SAAU,kBAGjD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aACC,EACA,cACA,2BAEDA,aACC,EACA,kBACA,gCAEDA,aAAmB,EAAO,OAAQ,uBAClCA,aAAmB,EAAO,UAAW,8BACrCA,aACC,EACA,OACA,kCAEDA,aACC,EACA,QACA,yCAEDA,aAAmB,EAAO,YAAa,0BACvCA,aACC,EACA,mBACA,iCAEDA,aACC,EACA,oBACA,kCAEDA,aACC,EACA,sBACA,uFAEDA,aACC,EACA,uBACA,uFAEDA,aACC,EACA,eACA,qFAEDA,aACC,EACA,gBACA,6FAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,8BAMA,kBAAC,IAAS0C,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,kCAGA,kBAAC,IAAD,CACErE,KAAK,iBACLsE,UAAW,QAEXrE,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAASnH,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,iCAGA,kBAAC,IAAD,CACErE,KAAK,iBACLE,MAAOzD,IAAYC,OACnBuD,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAASnH,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,kCAGA,kBAAC,IAAD,CACErE,KAAK,mBACLE,MAAOzD,IAAYE,QACnBgC,YAAa,CAAE0G,aAAc,IAC7BpF,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAAD,mOASA,kBAAC,IAAStH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kBAMA,kBAAC,IAAS0C,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,gCAGA,kBAAC,IAAD,CACErE,KAAK,eACLsE,UAAW,QAEX7C,KAAMnF,IAAWE,MACjByD,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAASnH,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,+BAGA,kBAAC,IAAD,CACErE,KAAK,eACLE,MAAOzD,IAAYC,OACnB+E,KAAMnF,IAAWE,MACjByD,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAASnH,SAAV,CAAmB4B,MAAO,CAAEqF,eAAgB,KAA5C,gCAGA,kBAAC,IAAD,CACErE,KAAK,iBACLE,MAAOzD,IAAYE,QACnB8E,KAAMnF,IAAWE,MACjBmC,YAAa,CAAE0G,aAAc,IAC7BpF,QAAS,WACPsE,MAAM,UAGV,kBAAC,IAAD,0QAWA,kBAAC,IAAStH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,qCAMA,kBAAC,IAAD,CACEsF,KAAK,iBACLsE,UAAW,QACXnE,kBAAkB,EAClBC,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,QAER5F,YAAa,CAAE0G,aAAc,MAG/B,kBAAC,IAAD,+RAYA,kBAAC,IAASnI,SAAV,CACE8B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAASxB,QAAQC,QADvD,+PASA,kBAAC,IAASwB,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,sCAMA,kBAAC,IAAD,CACEsF,KAAK,iBACLsE,UAAW,QACXnE,kBAAkB,EAClBI,aAAc,WACdH,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,QAER5F,YAAa,CAAE0G,aAAc,MAG/B,kBAAC,IAAD,yXAcA,kBAAC,IAAD,CAAMrG,MAAO,CAAEb,OAAQ,a,sDCxRjC,4GAeM2H,EAAqB7B,oBAAU,cAAed,GAGpD2C,EAAmB/C,aAAaC,aAIhC8C,EAAmB5B,IAAI,oBAAoB,kBACzC,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,oFAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,OAAQ,SAAU,QACrCA,aAAY,EAAO,UAAW,UAAW,SACzCA,aAAY,EAAO,YAAa,SAAU,SAC1CA,aAAY,EAAO,UAAW,WAAY,QAC1CA,aAAY,EAAO,cAAe,SAAU,MAC5CA,aAAY,EAAO,WAAY,SAAU,gBACzCA,aAAY,EAAO,aAAc,YAAa,SAGjD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aAAmB,EAAO,OAAQ,uBAClCA,aACC,EACA,UACA,2DAEDA,aAAmB,EAAO,YAAa,iBACvCA,aACC,EACA,UACA,mCAEDA,aACC,EACA,cACA,sCAEDA,aACC,EACA,WACA,gFAEDA,aACC,EACA,aACA,6FAMTuC,IAAI,WAAW,kBAChB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,0BAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAaoE,SAAS,IACtB,kBAAC,IAAD,CAAajF,YAAa,CAAEe,iBAAkB,GAAKkB,KAAM,MAG3D,kBAAC,IAAS3D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,wBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,MAAO6F,aAAc,KACjD,kBAAC,IAAD,CAAazB,SAAS,IACtB,kBAAC,IAAD,CACEA,SAAS,EACTjF,YAAa,CAAEe,iBAAkB,GACjCkB,KAAM,MAIV,kBAAC,IAAD,uKAOA,kBAAC,IAAS3D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kCAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CACEuG,SAAU,WACVnC,SAAS,EACTjF,YAAa,CAAEqH,OAAQ,GACvBpF,KAAM,MAIV,kBAAC,IAAD,0MAQA,kBAAC,IAAS1D,SAAV,CACE8B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAASxB,QAAQC,QADvD,uMAOA,kBAAC,IAASwB,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,6BAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CACEoE,SAAS,EACTjF,YAAa,CAAEe,iBAAkB,EAAG2F,aAAc,IAClDzE,KAAM,GACN8D,WAAY,kBAAC,IAASjH,MAAV,KAAiB,QAIjC,kBAAC,IAAD,8NASA,kBAAC,IAAD,CAAMuB,MAAO,CAAEb,OAAQ,a,sDC1K/B,2FASqB8F,oBAAU,QAASd,GAGrCe,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,sFAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,UAAW,WAAY,QAC1CA,aAAY,EAAO,QAAS,SAAU,MACtCA,aAAY,EAAO,cAAe,SAAU,QAC5CA,aAAY,EAAO,kBAAmB,UAAW,SACjDA,aAAY,EAAO,gBAAiB,SAAU,KAE9CA,aAAY,EAAO,iBAAkB,SAAU,SAC/CA,aAAY,EAAO,iBAAkB,UAAW,SAChDA,aAAY,EAAO,eAAgB,SAAU,UAC7CA,aAAY,EAAO,gBAAiB,SAAU,SAC9CA,aAAY,EAAO,WAAY,UAAW,QAC1CA,aAAY,EAAO,eAAgB,WAAY,QAC/CA,aAAY,EAAO,cAAe,SAAU,KAC5CA,aAAY,EAAO,gBAAiB,YAAa,QACjDA,aAAY,EAAO,iBAAkB,YAAa,QAElDA,aAAY,EAAO,eAAgB,SAAU,WAC7CA,aAAY,EAAO,aAAc,UAAW,SAE5CA,aAAY,EAAO,mBAAoB,SAAU,QACjDA,aAAY,EAAO,eAAgB,WAAY,QAC/CA,aAAY,EAAO,kBAAmB,UAAW,SACjDA,aACC,EACA,aACA,SACA,4BAEDA,aAAY,EAAO,WAAY,SAAU,MACzCA,aAAY,EAAO,iBAAkB,SAAU,OAGlD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aAAmB,EAAO,UAAW,6BACrCA,aAAmB,EAAO,QAAS,kBACnCA,aAAmB,EAAO,cAAe,0BAEzCA,aACC,EACA,kBACA,wBAEDA,aACC,EACA,gBACA,6CAGDA,aAAmB,EAAO,iBAAkB,uBAC5CA,aAAmB,EAAO,iBAAkB,uBAC5CA,aACC,EACA,eACA,4CAEDA,aAAmB,EAAO,gBAAiB,sBAC3CA,aAAmB,EAAO,WAAY,2BACtCA,aACC,EACA,eACA,mCAEDA,aAAmB,EAAO,cAAe,wBACzCA,aACC,EACA,gBACA,yEAEDA,aACC,EACA,iBACA,0EAGDA,aACC,EACA,eACA,0BAEDA,aACC,EACA,aACA,+BAGDA,aACC,EACA,mBACA,6BAEDA,aACC,EACA,eACA,sDAEDA,aACC,EACA,kBACA,mCAEDA,aACC,EACA,aACA,kDAEDA,aAAmB,EAAO,WAAY,uBACtCA,aACC,EACA,iBACA,gFAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,wBAMA,kBAAC,IAAD,CAAOiK,YAAa,sBAEpB,kBAAC,IAAS1H,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kCAMA,kBAAC,IAAD,CAAOiK,YAAa,oBAAqBC,iBAAiB,IAC1D,kBAAC,IAAD,CACED,YAAa,oBACbC,iBAAiB,EACjBC,eAAgB,QAGlB,kBAAC,IAAD,mKAQA,kBAAC,IAAS5H,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,+BAKA,kBAAC,IAAD,CACEiK,YAAa,aACbC,iBAAiB,EACjBE,gBAAgB,EAChBD,eAAgB,MAChBE,WAAY/H,IAASpB,OAAOL,OAG9B,kBAAC,IAAD,CACEyJ,YAAa,CACXzG,YAAa,EACbH,aAAc,EACda,kBAAmB,IAErB0F,YAAa,oBACbsB,aAAc,WACdrB,iBAAiB,EACjBE,gBAAgB,EAChB3D,MAAO,MACP8D,iBAAiB,EACjBC,aAAc,WACZX,MAAM,UAIV,kBAAC,IAAStH,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,+BAKA,kBAAC,IAAD,CAEEiK,YAAa,oBACbC,iBAAiB,EACjBE,gBAAgB,EAChBI,aAAc,WACZX,MAAM,QAGRa,SAAS,SAGX,kBAAC,IAAD,qWAcA,kBAAC,IAASnI,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,uBAMA,kBAAC,IAAD,CACEyK,eAAgB,CACdd,eAAgB,GAChB9F,YAAa,EACbH,aAAc,EACda,kBAAmB,IAErB0F,YAAa,oBACbC,iBAAiB,EACjBE,gBAAgB,EAChBI,aAAc,WACZX,MAAM,QAERa,SAAS,SAGX,kBAAC,IAAD,ubAiBA,kBAAC,IAAD,CAAMpG,MAAO,CAAEb,OAAQ,a,sDCzRjC,2HAiBM0H,EAAgB5B,oBAAU,QAASd,GAGzC0C,EAAc9C,aAAaC,aAI3B6C,EACG3B,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,8EAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,QAAS,SAAU,4BACtCA,aAAY,EAAO,OAAQ,SAAU,MACrCA,aAAY,EAAO,cAAe,SAAU,MAC5CA,aAAY,EAAO,kBAAmB,SAAU,OAGnD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aAAmB,EAAO,QAAS,6BACnCA,aAAmB,EAAO,OAAQ,uBAClCA,aACC,EACA,cACA,gCAEDA,aACC,EACA,kBACA,+CAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,mBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,MAAO6F,aAAc,KACjD,kBAAC,IAAD,CAAO/F,KAAM,SACb,kBAAC,IAAD,CACEA,KAAM,iBACND,MAAOrC,IAASxB,QAAQE,OACxBiD,YAAa,CAAEe,iBAAkB,OAIrC,kBAAC,IAAD,4LAOA,kBAAC,IAASzC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,6BAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEQ,cAAe,MAAO6F,aAAc,KACjD,kBAAC,IAAD,CACE/F,KAAM,oBACND,MAAOrC,IAASxB,QAAQG,OACxBgD,YAAa,CAAEe,iBAAkB,IACjCH,gBAAiB,CAAE8C,SAAU,GAAI6D,WAAY,OAIjD,kBAAC,IAAD,8PASA,kBAAC,IAAD,CAAMlH,MAAO,CAAEb,OAAQ,a,sDCrHjC,oGAUM0H,EAAgB5B,oBAAU,cAAed,GAG/C0C,EAAc9C,aAAaC,aAI3B6C,EACG3B,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,oFAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,SAAU,UAAW,SACxCA,aAAY,EAAO,WAAY,UAAW,SAC1CA,aAAY,EAAO,cAAe,SAAU,OAG/C,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aACC,EACA,SACA,kCAEDA,aACC,EACA,WACA,yCAEDA,aACC,EACA,cACA,6CAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,kBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEmD,UAAW,KACxB,kBAAC,IAAD,CAAMnD,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAab,YAAa,CAAE6F,YAAa,MACzC,kBAAC,IAAS/G,MAAV,qCAGF,kBAAC,IAAD,CAAMuB,MAAO,CAAEQ,cAAe,MAAO6E,eAAgB,KACnD,kBAAC,IAAD,CAAazF,QAAQ,EAAMD,YAAa,CAAE6F,YAAa,MACvD,kBAAC,IAAS/G,MAAV,qCAGF,kBAAC,IAAD,CAAMuB,MAAO,CAAEQ,cAAe,QAC5B,kBAAC,IAAD,CAAaX,UAAU,EAAMF,YAAa,CAAE6F,YAAa,MACzD,kBAAC,IAAS/G,MAAV,qCAGF,kBAAC,IAAD,CAAMuB,MAAO,CAAEQ,cAAe,MAAO6E,eAAgB,KACnD,kBAAC,IAAD,CACEzF,QAAQ,EACRC,UAAU,EACVF,YAAa,CAAE6F,YAAa,MAE9B,kBAAC,IAAS/G,MAAV,qCAIJ,kBAAC,IAAD,mKAQA,kBAAC,IAAD,CAAMuB,MAAO,CAAEb,OAAQ,a,sDC3GjC,mIAkBM0H,EAAgB5B,oBAAU,aAAcd,GAG9C0C,EAAc9C,aAAaC,aAI3B6C,EACG3B,IAAI,oBAAoB,kBACvB,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,YAKA,kBAAC,IAAD,mFAGA,kBAAC,IAASuC,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,WAKA,kBAAC,IAAD,CAAMsE,MAAOnB,IAAOwD,OACjBG,aAAY,EAAM,OAAQ,OAAQ,WAClCA,aAAY,EAAO,cAAe,SAAU,MAC5CA,aAAY,EAAO,kBAAmB,SAAU,MAChDA,aAAY,EAAO,OAAQ,SAAU,MACrCA,aAAY,EAAO,UAAW,WAAY,QAC1CA,aAAY,EAAO,QAAS,cAAe,uBAC3CA,aAAY,EAAO,mBAAoB,UAAW,SAClDA,aAAY,EAAO,oBAAqB,UAAW,SACnDA,aAAY,EAAO,sBAAuB,YAAa,QACvDA,aAAY,EAAO,uBAAwB,YAAa,QACxDA,aAAY,EAAO,eAAgB,SAAU,QAC7CA,aAAY,EAAO,gBAAiB,SAAU,kBAGjD,kBAAC,IAAD,CAAMxC,MAAO,CAACnB,IAAOwD,MAAO,CAAEc,UAAW,GAAIkD,aAAc,MACxD1D,aAAmB,EAAM,OAAQ,WACjCA,aACC,EACA,cACA,qCAEDA,aACC,EACA,kBACA,6CAEDA,aAAmB,EAAO,OAAQ,4BAClCA,aACC,EACA,UACA,kCAEDA,aACC,EACA,QACA,wCAGDA,aACC,EACA,mBACA,iCAEDA,aACC,EACA,oBACA,kCAEDA,aACC,EACA,sBACA,uFAEDA,aACC,EACA,uBACA,uFAEDA,aACC,EACA,eACA,qFAEDA,aACC,EACA,gBACA,6FAOXuC,IAAI,WAAW,kBACd,kBAAC,IAAD,CACEnD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAS9D,SAAV,CACE+B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAAS3C,QAAQK,UADvD,iBAKA,kBAAC,IAAD,CAAMsE,MAAO,CAAEmD,UAAW,GAAI7D,WAAY,eACxC,kBAAC,IAAD,CACE0B,KAAK,UACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,IAE1BlC,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CAAMvF,MAAO,CAAEb,OAAQ,MACvB,kBAAC,IAAD,oRAYA,kBAAC,IAAD,CACE6B,KAAK,0BACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,IAC1B/B,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CAAMvF,MAAO,CAAEb,OAAQ,MACvB,kBAAC,IAAD,wRAYA,kBAAC,IAAD,CACE6B,KAAK,yBACLE,MAAOzD,IAAYC,OACnBiC,YAAa,CAAEwD,UAAW,IAC1B/B,mBAAmB,EACnBH,QAAS,WACPsE,MAAM,UAIV,kBAAC,IAAD,CAAMvF,MAAO,CAAEb,OAAQ,MACvB,kBAAC,IAAD,sRAYA,kBAAC,IAAD,CACE6B,KAAK,yBACLE,MAAOzD,IAAYF,QACnBoC,YAAa,CAAEwD,UAAW,IAC1BhC,kBAAkB,EAClBF,QAAS,WACPsE,MAAM,WAIZ,kBAAC,IAAD,CAAMvF,MAAO,CAAEb,OAAQ,MACvB,kBAAC,IAAD,wSAYA,kBAAC,IAASjB,SAAV,CACE8B,MAAO,CAAEqF,eAAgB,GAAIhF,MAAOrC,IAASxB,QAAQC,QADvD,6PASA,kBAAC,IAAD,CAAMuD,MAAO,CAAEb,OAAQ,a,qDCpOjC,kDAIMN,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,gBAAiB,QACjBC,MAAO,GACPC,OAAQ,GACRC,aAAc,EACdG,YAAa,EACbF,eAAgB,SAChBC,WAAY,SACZE,YAAaxB,IAASpC,QAAQE,SAEhC2E,UAAW,CACTJ,MAAOrC,IAASpC,QAAQO,QACxBuE,iBAAkB,KAqCPyG,IAjCf,SAAqBzH,GACnB,MAQIA,EAPFkC,YADF,MACS,GADT,IAQIlC,EANFkF,eAFF,WAQIlF,EALF4F,iBAHF,MAGc,QAHd,EAIErE,EAIEvB,EAJFuB,QACAtB,EAGED,EAHFC,YALF,EAQID,EAFFqH,gBANF,MAMa,eANb,EAOErB,EACEhG,EADFgG,WAGF,OACE,kBAAC,IAAD,CACE1F,MAAO,CACLnB,EAAOG,UACP,CACEE,MAAO0C,EACPzC,OAAQyC,EACRxC,aAAcwF,EAAUhD,EAAO,EAAI,GALhC,MAOLjC,IAAe,IAEjBsB,QAASA,GAERyE,GAGC,kBAAC,IAAD,CAAM1E,KAAM+F,EAAU1G,MAAOiF,EAAW1D,KAAMA,EAAO,O,oHC5CvD/C,EAASC,IAAWC,OAAO,CAC/B4G,YAAa,CACXtC,SAAU,GACV6D,WAAY,IAEdE,MAAO,CAELjH,gBAAiB,EACjBkD,SAAU,GACVgE,kBAAmB,EACnBlI,OAAQ,GACRK,YAAaxB,IAASpC,QAAQE,QAC9B0E,cAAe,MACflB,WAAY,UAIdgI,eAAgB,CACdzF,KAAM,EACNxB,MAAO,QACPF,gBAAiB,EACjBkD,SAAU,GACV6D,WAAY,GACZ3H,YAAa,GAEf4G,eAAgB,CAEdkB,kBAAmB,KAmIRE,IA/Hf,SAAe7H,GACb,IAAM8H,EAAeC,iBAAO,MAC5B,EAA0BC,oBAAS,GAAnC,WAAOC,EAAP,KAAcC,EAAd,KAEE3G,EAsBEvB,EAtBFuB,QACAkB,EAqBEzC,EArBFyC,MAFF,GAuBIzC,EApBFkG,gBAoBElG,EAnBFmI,sBAJF,MAIkB,IAJlB,IAuBInI,EAlBFmG,sBALF,MAKmB,QALnB,EAMEC,EAiBEpG,EAjBFoG,eANF,EAuBIpG,EAhBFuH,oBAPF,MAOiB,SAPjB,IAuBIvH,EAfFoI,qBARF,MAQkB,QARlB,IAuBIpI,EAdFqI,gBATF,SAUEC,EAaEtI,EAbFsI,aACArC,EAYEjG,EAZFiG,YACAsC,EAWEvI,EAXFuI,cACAC,EAUExI,EAVFwI,eACAC,EASEzI,EATFyI,aACAxI,EAQED,EARFC,YACAyI,EAOE1I,EAPF0I,WACAC,EAME3I,EANF2I,iBACAnC,EAKExG,EALFwG,aAlBF,EAuBIxG,EAJFuG,uBAnBF,WAuBIvG,EAHFqG,kBApBF,MAoBe/H,IAAS3C,QAAQI,QApBhC,EAqBE2K,EAEE1G,EAFF0G,SACAD,EACEzG,EADFyG,eAGImC,EAAW,WACf,OACE,kBAAC,IAAD,CACEtI,MAAO,CACLnB,EAAOsH,eACP,CACE3G,YAAamI,EAAQ5B,EAAa/H,IAASpC,QAAQE,SAHhD,MAOLqK,IAAkB,KAGnBC,EACC,kBAAC,IAASxH,UAAV,CAAoBoB,MAAO,CAAEK,MAAO0F,IACjCK,GAED,KACJ,kBAAC,IAAD,CAAMpG,MAAO,CAACnB,EAAOuI,MAAOzH,GAA4B,KACrDsI,GAAgC,KAChCnC,EACC,kBAAC,IAAD,CACE9E,KAAMiG,EACNrF,KAAM,GACNvB,MAAOsH,EAAQ5B,EAAa+B,EAC5B9H,MAAO,CAAEwF,YAAa,KAEtB,KACJ,kBAAC,IAAD,CACE+C,QAAS,WACPX,GAAS,IAEXY,OAAQ,WACNZ,GAAS,IAEXa,IAAKjB,EACLkB,cAAeN,EAAa,EAAI,KAChCO,YAAWP,EACXQ,kBAAmBR,EAAa,MAAQ,SACxCpI,MAAOnB,EAAOyI,eACdS,SAAUA,EACVpC,YAAW,MAAEA,IAAe,GAC5B0C,iBAAkB,CAACxJ,EAAO8G,YAAR,MAAqB0C,IAAoB,IAC3DL,aAAc,SAAC7F,GACT6F,GACFA,EAAa7F,IAGjB8D,gBAAiBA,EACjBkC,aAAcA,GAA8B,UAC5ChG,MAAOA,EACP0G,sBAAsB,gBAGxB,kBAAC,IAAD,CACE5H,QAAS,WACHiF,GACFA,MAIJ,kBAAC,IAAD,CACElF,KAAM6G,EACNjG,KAAM,GACNvB,MAAOwF,EACP7F,MAAO,CAAEyF,WAAY,MAIxByC,GAAkC,QAM3C,OACE,kBAAC,IAAD,KACGH,EACCO,IAEA,kBAAC,IAAD,CACErH,QAAS,WACPA,MAGDqH,S","file":"static/js/app.46804f89.chunk.js","sourcesContent":["export default {\n  PRIMARY: {\n    blue_01: \"#7FF0F7\",\n    blue_02: \"#00E1F0\",\n    blue_03: \"#02CFE0\",\n    blue_04: \"#0065FF\",\n    blue_05: \"#003CBF\",\n    blue_06: \"#0F3D91\",\n  },\n  NEUTRAL: {\n    gray_01: \"#F2F4F5\",\n    gray_02: \"#E5E5E5\",\n    gray_03: \"#B2BAC6\",\n    gray_04: \"#8E9AAB\",\n    gray_05: \"#5E6F88\",\n    gray_06: \"#112950\",\n    gray_07: \"#F2F6FE\",\n    geekblue: \"#9EBAED\",\n    geekblue_01: \"#0F62F9\",\n  },\n  GRADIENT: {\n    blue: [\"#03EFFF\", \"#0873FE\"],\n  },\n  SEMATIC: {\n    green: \"#5DAC46\",\n    megeta: \"#F33060\",\n    yellow: \"#FFD211\",\n  },\n  ACCENT: {\n    gray: \"#F7F9FA\",\n    gold: \"#FFFADD\",\n    orange: \"#FEAA48\",\n    mageta_02: \"#FD586B\",\n    mageta_03: \"#FFECE9\",\n    blue: \"#C8FBFF\",\n    green_02: \"#EBF5EF\",\n    purple_01: \"#F5E3FB\",\n    purple_02: \"#E7DDFE\",\n    purple_03: \"#F2F6FE\",\n  },\n};\n","import styled from \"styled-components/native\";\nimport ColorApp from \"../colors/index\";\nexport { default as Button } from \"../component/Common/Button\";\nexport { default as RadioButton } from \"../component/Common/RadioButton\";\nexport { default as FloatButton } from \"../component/Common/FloatButton\";\nexport { default as TextButton } from \"../component/Common/TextButton\";\nexport { default as Input } from \"../component/Common/Input\";\nexport { default as Label } from \"../component/Common/Label\";\nexport { default as Avatar } from \"../component/Common/Avatar\";\n\nexport { ColorApp };\n\nexport const ButtonType = {\n  DEFAULT: 0,\n  GHOST: 1,\n};\n\nexport const ButtonState = {\n  DEFAULT: 0,\n  ACTIVE: 1,\n  DISABLE: 2,\n};\nexport const FontText = {\n  Heading1: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 32px;\n    line-height: 42px;\n  `,\n  Heading2: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 28px;\n    line-height: 36px;\n  `,\n  Heading3: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 24px;\n    line-height: 32px;\n  `,\n  Heading4: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 17px;\n    line-height: 22px;\n  `,\n  Heading5: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 14px;\n    line-height: 18px;\n  `,\n\n  Button1: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 17px;\n    line-height: 22px;\n  `,\n  Button2: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 13px;\n    line-height: 20px;\n  `,\n  Caption1: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 12px;\n    line-height: 16px;\n  `,\n  Caption2: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 11px;\n    line-height: 13px;\n  `,\n  Body1: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 15px;\n    line-height: 22px;\n  `,\n  Body2: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 14px;\n    line-height: 24px;\n  `,\n  Body3: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 12px;\n    line-height: 18px;\n    text-align-vertical: center;\n    justify-content: center;\n    align-items: center;\n  `,\n  SmallText: styled.Text`\n    color: ${ColorApp.NEUTRAL.gray_06};\n    font-size: 11px;\n    line-height: 13px;\n  `,\n};\n","import React, { useEffect } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { ColorApp } from \"../index\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: ColorApp.PRIMARY.blue_04,\n  },\n});\n\nfunction RadioButton(props) {\n  const { customStyle, active, disabled } = props;\n  useEffect(() => {}, []);\n\n  return (\n    <View\n      opacity={disabled ? 0.8 : 1}\n      style={[\n        styles.container,\n        active ? { borderWidth: 8 } : null,\n        disabled ? { borderColor: ColorApp.NEUTRAL.gray_02 } : null,\n        customStyle ?? {},\n      ]}\n    ></View>\n  );\n}\n\nexport default RadioButton;\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: ColorApp.NEUTRAL.gray_02,\n    alignSelf: \"baseline\",\n    borderRadius: 20,\n    paddingVertical: 4,\n  },\n});\n\nfunction Label(props) {\n  const {\n    color = ColorApp.PRIMARY.blue_04,\n    text,\n    customStyle,\n    customTextStyle,\n  } = props;\n\n  return (\n    <View\n      style={[styles.container, { backgroundColor: color }, customStyle ?? {}]}\n    >\n      <FontText.Body3\n        style={[{ color: \"white\" }, customTextStyle ? customTextStyle : {}]}\n      >\n        {text ?? \"\"}\n      </FontText.Body3>\n    </View>\n  );\n}\n\nexport default Label;\n","import React, { useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ColorApp, FontText, ButtonType, ButtonState } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    // backgroundColor: ColorApp.PRIMARY.blue_04,\n    // width: \"100%\",\n    // height: 54,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    marginHorizontal: 2,\n  },\n});\n\nconst BUTTON_COLOR = {\n  DEFAULT_BUTTON_COLOR: ColorApp.PRIMARY.blue_04,\n  ACTIVE_BUTTON_COLOR: ColorApp.PRIMARY.blue_05,\n  DISABLE_BUTTON_COLOR: ColorApp.NEUTRAL.gray_02,\n};\n\nfunction TextButton(props) {\n  const {\n    customStyle,\n    customTextStyle,\n    name,\n    onPress,\n    state = ButtonState.DEFAULT,\n    enableButtonLeft = false,\n    enableButtonRight = false,\n    customLeftComponent = null,\n    customRightComponent = null,\n    leftIconName = \"plus\",\n    rightIconName = \"chevron-right\",\n  } = props;\n  useEffect(() => {}, []);\n  const getButtonColor = () => {\n    switch (state) {\n      case ButtonState.ACTIVE:\n        return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;\n      case ButtonState.DISABLE:\n        return BUTTON_COLOR.DISABLE_BUTTON_COLOR;\n      default:\n        return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;\n    }\n  };\n\n  const buttonStyle = [styles.container, customStyle ?? {}];\n\n  const textStyle = [\n    styles.textStyle,\n    { color: getButtonColor() },\n    customTextStyle ?? {},\n  ];\n  return (\n    <View opacity={state == ButtonState.DISABLE ? 0.8 : 1}>\n      <TouchableOpacity\n        style={[buttonStyle]}\n        onPress={state == ButtonState.DISABLE ? null : onPress}\n        activeOpacity={state == ButtonState.DISABLE ? 1 : 0.2}\n      >\n        {customLeftComponent ? customLeftComponent : null}\n        {enableButtonLeft ? (\n          <Icon name={leftIconName} color={getButtonColor()} size={24} />\n        ) : null}\n        <FontText.Button1 style={textStyle}>{name}</FontText.Button1>\n        {enableButtonRight ? (\n          <Icon name={rightIconName} color={getButtonColor()} size={24} />\n        ) : null}\n        {customRightComponent ? customRightComponent : null}\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default TextButton;\n","import React, { useEffect } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { ColorApp } from \"../index\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n});\n\nfunction RadioButton(props) {\n  const { child } = props;\n  useEffect(() => {}, []);\n\n  return <ScrollView style={styles.container}>{child}</ScrollView>;\n}\n\nexport default RadioButton;\n","import { FontText, ColorApp } from \"../../component\";\nimport { View, Linking, TouchableOpacity, StyleSheet } from \"react-native\";\nimport React from \"react\";\nexport const styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: ColorApp.PRIMARY.blue_05,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    borderWidth: 0.5,\n    // borderColor: \"white\",\n  },\n  headerText: {\n    color: \"white\",\n    textAlign: \"center\",\n  },\n\n  value: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // backgroundColor: ColorApp.PRIMARY.blue_05,\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    borderWidth: 0.5,\n  },\n  valueText: {\n    color: \"black\",\n    textAlign: \"center\",\n  },\n  table: {\n    borderWidth: 0.5,\n  },\n  color: {\n    width: 100,\n    height: 100,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    paddingBottom: 8,\n  },\n});\nexport const generateColor = (color, name) => {\n  return (\n    <View style={[styles.color, { backgroundColor: color }]}>\n      <FontText.Body1>{name}</FontText.Body1>\n    </View>\n  );\n};\nexport const generateRow = (header, name, type, defaultValue) => {\n  if (header) {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <View style={styles.header}>\n          <FontText.Heading4 style={styles.headerText}>\n            {name}\n          </FontText.Heading4>\n        </View>\n        <View style={styles.header}>\n          <FontText.Heading4 style={styles.headerText}>\n            {type}\n          </FontText.Heading4>\n        </View>\n        <View style={styles.header}>\n          <FontText.Heading4 style={styles.headerText}>\n            {defaultValue}\n          </FontText.Heading4>\n        </View>\n      </View>\n    );\n  }\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <View style={styles.value}>\n        <FontText.Body1 style={styles.valueText}>{name}</FontText.Body1>\n      </View>\n      <View style={styles.value}>\n        <FontText.Body1 style={styles.valueText}>{type}</FontText.Body1>\n      </View>\n      <View style={styles.value}>\n        <FontText.Body1 style={styles.valueText}>{defaultValue}</FontText.Body1>\n      </View>\n    </View>\n  );\n};\n\nexport const generateExplainRow = (header, name, explain) => {\n  if (header) {\n    return (\n      <View style={{ flexDirection: \"row\" }}>\n        <View style={styles.header}>\n          <FontText.Heading4 style={styles.headerText}>\n            {name}\n          </FontText.Heading4>\n        </View>\n        <View style={styles.header}>\n          <FontText.Heading4 style={styles.headerText}>\n            {explain}\n          </FontText.Heading4>\n        </View>\n      </View>\n    );\n  }\n  return (\n    <View style={{ flexDirection: \"row\" }}>\n      <View style={styles.value}>\n        <FontText.Body1 style={styles.valueText}>{name}</FontText.Body1>\n      </View>\n      <View style={styles.value}>\n        <FontText.Body1 style={styles.valueText}>{explain}</FontText.Body1>\n      </View>\n    </View>\n  );\n};\n","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  Text,\n  StatusBar,\n  Image,\n  View,\n} from \"react-native\";\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  FontText,\n  ColorApp,\n  Button,\n  ButtonType,\n  ButtonState,\n  RadioButton,\n  FloatButton,\n  TextButton,\n  Input,\n  Label,\n  Avatar,\n} from \"./src/component\";\nimport StorybookUI from \"./storybook\";\nimport Config from \"react-native-config\";\n\nconst App = () => {\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <SafeAreaView>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}\n        >\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"DEFAULT ACTIVE\"\n            type={ButtonType.DEFAULT}\n            state={ButtonState.ACTIVE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Button\n            name=\" DEFAULT DISABLE\"\n            type={ButtonType.DEFAULT}\n            state={ButtonState.DISABLE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"GHOST NORMAL\"\n            customStyle={{ marginTop: 16 }}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"GHOST ACTIVE\"\n            type={ButtonType.GHOST}\n            state={ButtonState.ACTIVE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customLeftComponent={\n              <Icon\n                style={{ marginRight: 8 }}\n                name=\"search\"\n                color={\"black\"}\n                size={24}\n              ></Icon>\n            }\n          />\n          <Button\n            name=\" GHOST DISABLE\"\n            type={ButtonType.GHOST}\n            state={ButtonState.DISABLE}\n            customStyle={{ marginTop: 16 }}\n            enableButtonRight={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <View style={{ flexDirection: \"row\", marginTop: 16 }}>\n            <RadioButton />\n            <RadioButton active={true} customStyle={{ marginHorizontal: 12 }} />\n            <RadioButton disabled={true} customStyle={{ marginRight: 12 }} />\n            <RadioButton active={true} disabled={true} />\n          </View>\n          <View style={{ flexDirection: \"row\", marginTop: 16 }}>\n            <FloatButton />\n\n            <FloatButton size={40} />\n\n            <FloatButton\n              size={60}\n              rounded={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n              iconColor=\"red\"\n              customStyle={{ marginHorizontal: 16 }}\n            />\n\n            <FloatButton\n              size={60}\n              rounded={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n              iconColor=\"red\"\n              customIcon={<Icon name=\"search\" color={\"black\"} size={24}></Icon>}\n            />\n          </View>\n          <View style={{ flexDirection: \"row\", marginTop: 16 }}>\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.ACTIVE}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonLeft={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n          </View>\n          <TextButton\n            name=\"DEFAULT\"\n            state={ButtonState.DEFAULT}\n            customStyle={{ marginTop: 16 }}\n            // enableButtonLeft={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Input placeholder={\"Your Phone Number\"} />\n\n          <Input placeholder={\"Your Phone Number\"} enableRightIcon={true} />\n          <Input\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            iconRightColor={\"red\"}\n          />\n          <Input\n            placeholder={\"test color\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            iconRightColor={\"red\"}\n            inputColor={ColorApp.ACCENT.blue}\n          />\n\n          <Input\n            customStype={{\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            value={\"abc\"}\n            secureTextEntry={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Input\n            containerStyle={{ marginTop: 16 }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            // keyboardType={\"password\"}\n            topLabel=\"test\"\n          />\n\n          <Label text={\"label\"} />\n          <Label\n            text={\"Á À Ả Ạ Ã\"}\n            color={\"red\"}\n            customStyle={{ marginVertical: 16 }}\n          />\n\n          <Avatar />\n          <View\n            style={{ flexDirection: \"row\", marginBottom: 56, marginTop: 16 }}\n          >\n            <Avatar size={72} rounded={true} />\n\n            <Avatar\n              size={72}\n              rounded={true}\n              customStyle={{ marginLeft: 16 }}\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n            />\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    // backgroundColor: ColorApp.PRIMARY.blue_01,\n    padding: 16,\n  },\n  engine: {\n    position: \"absolute\",\n    right: 0,\n  },\n  body: {\n    // backgroundColor: ColorApp.PRIMARY.blue_04,\n  },\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"600\",\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: \"400\",\n  },\n  highlight: {\n    fontWeight: \"700\",\n  },\n  footer: {\n    fontSize: 12,\n    fontWeight: \"600\",\n    padding: 4,\n    paddingRight: 12,\n    textAlign: \"right\",\n  },\n  testColor: {\n    width: 100,\n    height: 20,\n  },\n});\n\n// export default App;\nexport default StorybookUI;\nconsole.disableYellowBox = true;\n","// if you use expo remove this line\nimport { AppRegistry } from \"react-native\";\n\nimport {\n  getStorybookUI,\n  configure,\n  addDecorator,\n} from \"@storybook/react-native\";\nimport { withKnobs } from \"@storybook/addon-knobs\";\n\nimport \"./rn-addons\";\nimport { loadStories } from \"./storyLoader\";\n// enables knobs for all stories\naddDecorator(withKnobs);\n\n// import stories\nconfigure(() => {\n  // require(\"./stories\");\n  loadStories();\n}, module);\n\n// Refer to https://github.com/storybookjs/storybook/tree/master/app/react-native#start-command-parameters\n// To find allowed options for getStorybookUI\nconst StorybookUIRoot = getStorybookUI({\n  // onDeviceUI: false,\n});\n\n// If you are using React Native vanilla and after installation you don't see your app name here, write it manually.\n// If you use Expo you should remove this line.\nAppRegistry.registerComponent(\"%APP_NAME%\", () => StorybookUIRoot);\n\nexport default StorybookUIRoot;\n","// Auto-generated file created by react-native-storybook-loader\n// Do not edit.\n//\n// https://github.com/elderfo/react-native-storybook-loader.git\n\nfunction loadStories() {\n  require(\"../src/component/Common/0-Introduction.stories\");\n  require(\"../src/component/Common/1-Colors.stories\");\n  require(\"../src/component/Common/2-FontText.stories\");\n  require(\"../src/component/Common/3-Avatar.stories\");\n  require(\"../src/component/Common/4-Button.stories\");\n  require(\"../src/component/Common/5-FloatButton.stories\");\n  require(\"../src/component/Common/6-Input.stories\");\n  require(\"../src/component/Common/7-Label.stories\");\n  require(\"../src/component/Common/8-RadioButton.stories\");\n  require(\"../src/component/Common/9-TextButton.stories\");\n}\n\nconst stories = [\n  \"../src/component/Common/0-Introduction.stories\",\n  \"../src/component/Common/1-Colors.stories\",\n  \"../src/component/Common/2-FontText.stories\",\n  \"../src/component/Common/3-Avatar.stories\",\n  \"../src/component/Common/4-Button.stories\",\n  \"../src/component/Common/5-FloatButton.stories\",\n  \"../src/component/Common/6-Input.stories\",\n  \"../src/component/Common/7-Label.stories\",\n  \"../src/component/Common/8-RadioButton.stories\",\n  \"../src/component/Common/9-TextButton.stories\",\n];\n\nmodule.exports = {\n  loadStories,\n  stories,\n};\n","import \"@storybook/addon-ondevice-actions/register\";\nimport \"@storybook/addon-ondevice-knobs/register\";\nimport \"@storybook/addon-links/register\";\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity, Image } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: ColorApp.PRIMARY.blue_04,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    // marginHorizontal: 4,\n  },\n});\n\nfunction Avatar(props) {\n  const {\n    size = 48.0,\n    rounded = false,\n    onPress,\n    customStyle,\n    image,\n    name = \"avatar\",\n    customTextStyle,\n  } = props;\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[\n        styles.container,\n        {\n          width: size,\n          height: size,\n          borderRadius: rounded ? size / 2 : 12,\n        },\n        customStyle ?? {},\n      ]}\n    >\n      {image ? (\n        <Image\n          style={[\n            styles.container,\n            {\n              width: size,\n              height: size,\n              borderRadius: rounded ? size / 2 : 12,\n            },\n          ]}\n          source={{\n            uri: image,\n          }}\n        />\n      ) : (\n        <FontText.Button1 style={[styles.textStyle, customTextStyle ?? {}]}>\n          {name.substring(0, 2)}\n        </FontText.Button1>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nexport default Avatar;\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {\n  FontText,\n  ColorApp,\n  Button,\n  ButtonType,\n  ButtonState,\n  RadioButton,\n  FloatButton,\n  TextButton,\n  Input,\n  Label,\n  Avatar,\n} from \"..\";\nimport { View, Linking, TouchableOpacity } from \"react-native\";\n\nconst copy = `\n# Welcome to PMC Component Kit\nThis is PMC component kits from PMC app team. It helps you create mini applications in PMC platform. npm: [**Link**](https://www.npmjs.com/package/pharmacity-component-kits)\n\n# Install\nyarn add pharmacity-component-kits\n//or\nnpm i pharmacity-component-kits\n`;\n\nconst howToUse = `\n# Install\nyarn add pharmacity-component-kits\n//or\nnpm i pharmacity-component-kits\n`;\nconst buttonStories = storiesOf(\"OverView\", module);\n\nbuttonStories\n  .add(\"Getting start\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading1>Welcome to PMC Component Kit</FontText.Heading1>\n\n          <FontText.Body1 style={{ marginTop: 12 }}>\n            This is PMC component kits from PMC app team. It helps you create\n            mini applications in PMC platform. npm:\n            <FontText.Body1\n              style={{ color: ColorApp.PRIMARY.blue_05 }}\n              onPress={() =>\n                Linking.openURL(\n                  \"https://www.npmjs.com/package/pharmacity-component-kits\"\n                )\n              }\n            >\n              {\" \"}\n              https://www.npmjs.com/package/pharmacity-component-kits\n            </FontText.Body1>\n          </FontText.Body1>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Install\n          </FontText.Heading2>\n          <View\n            style={{\n              backgroundColor: ColorApp.PRIMARY.blue_04,\n              padding: 12,\n              borderRadius: 8,\n            }}\n          >\n            <FontText.Body1 style={{ color: \"white\" }}>\n              yarn add pharmacity-component-kits\n            </FontText.Body1>\n            <FontText.Body1 style={{ color: \"white\" }}>Or</FontText.Body1>\n            <FontText.Body1 style={{ color: \"white\" }}>\n              npm i pharmacity-component-kits\n            </FontText.Body1>\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Usage\n          </FontText.Heading2>\n\n          <Markdown>{`\n            import { Button, ButtonType } from 'pharmacity-component-kits'\n\n            // primary\n            <Button\n                text=\"Pharmacity Button\"\n                type={ButtonType.primary}\n            />\n            \n            // primary border\n            <Button\n                text=\"Pharmacity Button\"\n                type={ButtonType.primaryBorder}\n            />\n            \n            // primary border with icon\n            <Button\n                icon={PharmacityIcons.ic_close_24}\n                text=\"Custom Text Style\"\n                type={ButtonType.primaryBorder}\n            />\n\n            `}</Markdown>\n        </View>\n      }\n    />\n  ))\n  .add(\"All of Component\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading1>Some Components of PCM Kit</FontText.Heading1>\n\n          <FontText.Heading2 style={{ marginVertical: 12 }}>\n            1. Button\n          </FontText.Heading2>\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"DEFAULT ACTIVE\"\n            type={ButtonType.DEFAULT}\n            state={ButtonState.ACTIVE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Button\n            name=\" DEFAULT DISABLE\"\n            type={ButtonType.DEFAULT}\n            state={ButtonState.DISABLE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"GHOST NORMAL\"\n            customStyle={{ marginTop: 16 }}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Button\n            name=\"GHOST ACTIVE\"\n            type={ButtonType.GHOST}\n            state={ButtonState.ACTIVE}\n            customStyle={{ marginTop: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customLeftComponent={\n              <Icon\n                style={{ marginRight: 8 }}\n                name=\"search\"\n                color={\"black\"}\n                size={24}\n              ></Icon>\n            }\n          />\n          <Button\n            name=\" GHOST DISABLE\"\n            type={ButtonType.GHOST}\n            state={ButtonState.DISABLE}\n            customStyle={{ marginTop: 16 }}\n            enableButtonRight={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            2. Radio Button\n          </FontText.Heading2>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <RadioButton />\n            <RadioButton active={true} customStyle={{ marginHorizontal: 12 }} />\n            <RadioButton disabled={true} customStyle={{ marginRight: 12 }} />\n            <RadioButton active={true} disabled={true} />\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            3. Float Button\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\" }}>\n            <FloatButton />\n\n            <FloatButton size={40} customStyle={{ marginLeft: 16 }} />\n\n            <FloatButton\n              size={60}\n              rounded={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n              iconColor=\"red\"\n              customStyle={{ marginHorizontal: 16 }}\n            />\n\n            <FloatButton\n              size={60}\n              rounded={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n              iconColor=\"red\"\n              customIcon={<Icon name=\"search\" color={\"black\"} size={24}></Icon>}\n            />\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            4. Text Button\n          </FontText.Heading2>\n\n          <View style={{ flexDirection: \"row\" }}>\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.ACTIVE}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonLeft={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16, marginLeft: 16 }}\n              // enableButtonLeft={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            5. Input\n          </FontText.Heading2>\n\n          <Input placeholder={\"Your Phone Number\"} />\n\n          <Input placeholder={\"Your Phone Number\"} enableRightIcon={true} />\n          <Input\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            iconRightColor={\"red\"}\n          />\n          <Input\n            placeholder={\"test color\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            iconRightColor={\"red\"}\n            inputColor={ColorApp.ACCENT.blue}\n          />\n\n          <Input\n            customStype={{\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            value={\"abc\"}\n            secureTextEntry={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <Input\n            containerStyle={{ marginTop: 16 }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            // keyboardType={\"password\"}\n            topLabel=\"test\"\n          />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            6. Label\n          </FontText.Heading2>\n\n          <Label text={\"label\"} />\n          <Label\n            text={\"Á À Ả Ạ Ã\"}\n            color={\"red\"}\n            customStyle={{ marginVertical: 16 }}\n          />\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            7. Avatar\n          </FontText.Heading2>\n\n          <Avatar />\n\n          <View\n            style={{ flexDirection: \"row\", marginBottom: 56, marginTop: 16 }}\n          >\n            <Avatar size={72} rounded={true} />\n\n            <Avatar\n              size={72}\n              rounded={true}\n              customStyle={{ marginLeft: 16 }}\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n            />\n          </View>\n        </View>\n      }\n    ></StoryContainer>\n  ));\n","import React, { useEffect } from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ColorApp, FontText, ButtonType, ButtonState } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: ColorApp.PRIMARY.blue_04,\n    width: \"100%\",\n    height: 54,\n    borderRadius: 12,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    marginHorizontal: 2,\n  },\n});\n\nconst BUTTON_COLOR = {\n  DEFAULT_BUTTON_COLOR: ColorApp.PRIMARY.blue_04,\n  ACTIVE_BUTTON_COLOR: ColorApp.PRIMARY.blue_05,\n  DISABLE_BUTTON_COLOR: ColorApp.NEUTRAL.gray_02,\n};\n\nfunction Button(props) {\n  const {\n    customStyle,\n    customTextStyle,\n    name,\n    onPress,\n    type = ButtonType.DEFAULT,\n    state = ButtonState.DEFAULT,\n    iconColor = \"black\",\n    enableButtonLeft = false,\n    enableButtonRight = false,\n    customLeftComponent = null,\n    customRightComponent = null,\n    leftIconName = \"chevron-left\",\n    rightIconName = \"chevron-right\",\n  } = props;\n  useEffect(() => {}, []);\n  const getButtonColor = () => {\n    switch (state) {\n      case ButtonState.ACTIVE:\n        return BUTTON_COLOR.ACTIVE_BUTTON_COLOR;\n      case ButtonState.DISABLE:\n        return BUTTON_COLOR.DISABLE_BUTTON_COLOR;\n      default:\n        return BUTTON_COLOR.DEFAULT_BUTTON_COLOR;\n    }\n  };\n  const defaultButtonStyle = { backgroundColor: getButtonColor() };\n  const ghostButtonStyle = {\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: getButtonColor(),\n  };\n  const buttonStyle = [\n    styles.container,\n    type == ButtonType.GHOST ? ghostButtonStyle : defaultButtonStyle,\n    customStyle ?? {},\n  ];\n\n  const defaultTextStyle = { color: \"white\" };\n  const ghostTextStyle = {\n    color: getButtonColor(),\n  };\n  const textStyle = [\n    styles.textStyle,\n    type == ButtonType.GHOST ? ghostTextStyle : defaultTextStyle,\n    customTextStyle ?? {},\n  ];\n  return (\n    <View opacity={state == ButtonState.DISABLE ? 0.8 : 1}>\n      <TouchableOpacity\n        style={[buttonStyle]}\n        onPress={state == ButtonState.DISABLE ? null : onPress}\n        activeOpacity={state == ButtonState.DISABLE ? 1 : 0.2}\n      >\n        {customLeftComponent ? customLeftComponent : null}\n        {enableButtonLeft ? (\n          <Icon name={leftIconName} color={iconColor} size={24} />\n        ) : null}\n        <FontText.Button1 style={textStyle}>{name}</FontText.Button1>\n        {enableButtonRight ? (\n          <Icon name={rightIconName} color={iconColor} size={24} />\n        ) : null}\n        {customRightComponent ? customRightComponent : null}\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { FontText, ColorApp } from \"..\";\nimport { View, Linking, TouchableOpacity } from \"react-native\";\nimport { styles, generateRow, generateColor } from \"./styleCommon\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst buttonStories = storiesOf(\"Colors\", module);\n\nbuttonStories.add(\"All\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2 style={{ marginBottom: 12 }}>\n          #Import\n        </FontText.Heading2>\n        <Markdown>{`\n            import { ColorApp } from 'pharmacity-component-kits'\n            `}</Markdown>\n        <FontText.Heading2 style={{ marginVertical: 12 }}>\n          #Color\n        </FontText.Heading2>\n        <FontText.Heading5 style={{ marginVertical: 12 }}>\n          1.Primary\n        </FontText.Heading5>\n\n        <View\n          style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 16 }}\n        >\n          {generateColor(ColorApp.PRIMARY.blue_01, \"blue_01\")}\n          {generateColor(ColorApp.PRIMARY.blue_02, \"blue_02\")}\n          {generateColor(ColorApp.PRIMARY.blue_03, \"blue_03\")}\n          {generateColor(ColorApp.PRIMARY.blue_04, \"blue_04\")}\n          {generateColor(ColorApp.PRIMARY.blue_05, \"blue_05\")}\n          {generateColor(ColorApp.PRIMARY.blue_06, \"blue_06\")}\n        </View>\n\n        <Markdown>{`\n            color: {ColorApp.PRIMARY.blue_01}\n         \n            `}</Markdown>\n\n        <FontText.Heading5 style={{ marginVertical: 12 }}>\n          2.Neutral\n        </FontText.Heading5>\n\n        <View\n          style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 16 }}\n        >\n          {generateColor(ColorApp.NEUTRAL.gray_01, \"gray_01\")}\n          {generateColor(ColorApp.NEUTRAL.gray_02, \"gray_02\")}\n          {generateColor(ColorApp.NEUTRAL.gray_03, \"gray_03\")}\n          {generateColor(ColorApp.NEUTRAL.gray_04, \"gray_04\")}\n          {generateColor(ColorApp.NEUTRAL.gray_05, \"gray_05\")}\n          {generateColor(ColorApp.NEUTRAL.gray_06, \"gray_06\")}\n          {generateColor(ColorApp.NEUTRAL.gray_07, \"gray_07\")}\n          {generateColor(ColorApp.NEUTRAL.geekblue, \"geekblue\")}\n          {generateColor(ColorApp.NEUTRAL.geekblue_01, \"geekblue_01\")}\n        </View>\n        <Markdown>{`\n            color: {ColorApp.NEUTRAL.gray_01}\n         \n            `}</Markdown>\n\n        <FontText.Heading5 style={{ marginVertical: 12 }}>\n          3.Gradient\n        </FontText.Heading5>\n\n        <LinearGradient\n          colors={ColorApp.GRADIENT.blue}\n          style={{ with: 200, height: 200, marginBottom: 16 }}\n        ></LinearGradient>\n\n        <Markdown>{`\n            <LinearGradient\n            colors={ColorApp.GRADIENT.blue}\n            style={{ with: 200, height: 200 }}\n          ></LinearGradient>\n         \n            `}</Markdown>\n\n        <FontText.Heading5 style={{ marginVertical: 12 }}>\n          4.Sematic\n        </FontText.Heading5>\n\n        <View\n          style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 16 }}\n        >\n          {generateColor(ColorApp.SEMATIC.green, \"green\")}\n          {generateColor(ColorApp.SEMATIC.megeta, \"megeta\")}\n          {generateColor(ColorApp.SEMATIC.yellow, \"yellow\")}\n        </View>\n        <Markdown>{`\n            color: {ColorApp.SEMATIC.green}\n         \n            `}</Markdown>\n\n        <FontText.Heading5 style={{ marginVertical: 12 }}>\n          5.Accent\n        </FontText.Heading5>\n\n        <View\n          style={{ flexDirection: \"row\", flexWrap: \"wrap\", marginBottom: 16 }}\n        >\n          {generateColor(ColorApp.ACCENT.gray, \"gray\")}\n          {generateColor(ColorApp.ACCENT.gold, \"gold\")}\n          {generateColor(ColorApp.ACCENT.orange, \"orange\")}\n          {generateColor(ColorApp.ACCENT.mageta_02, \"mageta_02\")}\n          {generateColor(ColorApp.ACCENT.mageta_03, \"mageta_03\")}\n          {generateColor(ColorApp.ACCENT.green_02, \"green_02\")}\n          {generateColor(ColorApp.ACCENT.purple_01, \"purple_01\")}\n          {generateColor(ColorApp.ACCENT.purple_02, \"purple_02\")}\n          {generateColor(ColorApp.ACCENT.purple_03, \"purple_03\")}\n        </View>\n\n        <Markdown>{`\n            color: {ColorApp.ACCENT.gray}\n         \n            `}</Markdown>\n\n        <View style={{ height: 56 }} />\n      </View>\n    }\n  />\n));\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText } from \"../../component\";\nimport { View } from \"react-native\";\nimport { styles, generateRow } from \"./styleCommon\";\nconst buttonStories = storiesOf(\"FontText\", module);\n\nbuttonStories.add(\"All\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2 style={{ marginBottom: 12 }}>\n          #Import\n        </FontText.Heading2>\n        <Markdown>{`\n            import { FontText } from 'pharmacity-component-kits'\n            `}</Markdown>\n        <FontText.Heading2 style={{ marginVertical: 12 }}>\n          #Usage\n        </FontText.Heading2>\n        <View style={[styles.table, { marginBottom: 12 }]}>\n          {generateRow(true, \"Name\", \"FontSize\", \"LineHeight\")}\n          {generateRow(false, \"Heading1\", \"32px\", \"42px\")}\n          {generateRow(false, \"Heading2\", \"28px\", \"36px\")}\n          {generateRow(false, \"Heading3\", \"24px\", \"32px\")}\n          {generateRow(false, \"Heading4\", \"17px\", \"22px\")}\n          {generateRow(false, \"Heading5\", \"14px\", \"18px\")}\n          {generateRow(false, \"Button1\", \"17px\", \"22px\")}\n          {generateRow(false, \"Button2\", \"13px\", \"22px\")}\n          {generateRow(false, \"Caption1\", \"12px\", \"16px\")}\n          {generateRow(false, \"Caption2\", \"11px\", \"13px\")}\n          {generateRow(false, \"Body1\", \"15px\", \"22px\")}\n          {generateRow(false, \"Body2\", \"14px\", \"24px\")}\n          {generateRow(false, \"Body3\", \"12px\", \"18px\")}\n          {generateRow(false, \"SmallText\", \"11px\", \"13px\")}\n        </View>\n\n        <Markdown>{`\n        <FontText.Heading2 style={{ marginVertical: 12 }}>\n        #Color\n      </FontText.Heading2>\n            `}</Markdown>\n        <View style={{ height: 56 }} />\n      </View>\n    }\n  />\n));\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport Avatar from \"./Avatar\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst avatarStories = storiesOf(\"Avatar\", module);\n\n// lets storybook know to show the knobs addon for this story\navatarStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\navatarStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n        import { Avatar } from 'pharmacity-component-kits'\n        `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"size\", \"Double\", \"48.0\")}\n            {generateRow(false, \"rounded\", \"boolean\", \"false\")}\n            {generateRow(false, \"name\", \"String\", \"'avatar'\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n            {generateRow(false, \"image\", \"String\", \"''\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(false, \"size\", \"Size of Avatar\")}\n            {generateExplainRow(\n              false,\n              \"rounded\",\n              \"if you want avatar type Round, You can set it True\"\n            )}\n            {generateExplainRow(\n              false,\n              \"name\",\n              \"If image props empty, Avatar get 2 first letter to create Avatar\"\n            )}\n            {generateExplainRow(false, \"onPress\", \"Function when click Avatar\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"You can custom Avatar with it\"\n            )}\n            {generateExplainRow(false, \"image\", \"Image url for Avatar\")}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"You can custom text of avatar with it\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar Default\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\" }}>\n            <Avatar />\n            <Avatar\n              customTextStyle={{ fontSize: 25 }}\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar Round\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n            <Avatar rounded={true} />\n            <Avatar\n              rounded={true}\n              name=\"Khoi\"\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n\n          <Markdown>{`\n            <Avatar\n            rounded={true}\n            name=\"Khoi\"\n            customStyle={{ marginHorizontal: 8 }}\n          />\n              `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar with Image\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\" }}>\n            <Avatar\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n            />\n            <Avatar\n              rounded={true}\n              name=\"Khoi\"\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n          <Avatar\n            rounded={true}\n            size={100}\n            name=\"Khoi\"\n            image={\n              \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n            }\n            customStyle={{ marginVertical: 8 }}\n          />\n          <Markdown>{`\n            <Avatar\n            rounded={true}\n            size={100}\n            name=\"Khoi\"\n            image={\n              \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n            }\n            customStyle={{ marginVertical: 8 }}\n          />\n              `}</Markdown>\n\n          <FontText.Heading3\n            style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n          >\n            If no image URL avatar render with 2 first letter of name props.\n          </FontText.Heading3>\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { View } from \"react-native\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Button from \"./Button\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\nconst buttonStories = storiesOf(\"Button\", module);\n\nbuttonStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n            import { Button, ButtonType,ButtonState } from 'pharmacity-component-kits'\n            `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"Null\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"null\")}\n            {generateRow(false, \"name\", \"String\", \"''\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"type\", \"ButtonType\", \"ButtonType.DEFAULT\")}\n            {generateRow(false, \"state\", \"ButtonState\", \"ButtonState.DEFAULT\")}\n            {generateRow(false, \"iconColor\", \"String\", \"black\")}\n            {generateRow(false, \"enableButtonLeft\", \"boolean\", \"false\")}\n            {generateRow(false, \"enableButtonRight\", \"boolean\", \"false\")}\n            {generateRow(false, \"customLeftComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"customRightComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"leftIconName\", \"String\", \"chevron-left\")}\n            {generateRow(false, \"rightIconName\", \"String\", \"chevron-right\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"Style custom for button\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"Style custom for text button\"\n            )}\n            {generateExplainRow(false, \"name\", \"Text name of button\")}\n            {generateExplainRow(false, \"onPress\", \"Function when click button\")}\n            {generateExplainRow(\n              false,\n              \"type\",\n              \"Button type :{  DEFAULT,GHOST}\"\n            )}\n            {generateExplainRow(\n              false,\n              \"state\",\n              \"Button state {DEFAULT,ACTIVE,DISABLE}\"\n            )}\n            {generateExplainRow(false, \"iconColor\", \"Color of all in button\")}\n            {generateExplainRow(\n              false,\n              \"enableButtonLeft\",\n              \"On off Icon left, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"enableButtonRight\",\n              \"On off Icon right, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customLeftComponent\",\n              \"If U don't want use Feather Icon , You can custom left component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customRightComponent\",\n              \"If U don't want use Feather Icon, You can custom right component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"leftIconName\",\n              \"You can custom left icon name with it, find icon name in https://feathericons.com\"\n            )}\n            {generateExplainRow(\n              false,\n              \"rightIconName\",\n              \"You can custom right icon name with it, find icon name in https://feathericons.com\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button Default with Name\n          </FontText.Heading2>\n\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            1. Button default type Default\n          </FontText.Heading5>\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            // enableButtonLeft={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            2. Button default type Active\n          </FontText.Heading5>\n          <Button\n            name=\"DEFAULT ACTIVE\"\n            state={ButtonState.ACTIVE}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            3. Button default type Disable\n          </FontText.Heading5>\n          <Button\n            name=\" DEFAULT DISABLE\"\n            state={ButtonState.DISABLE}\n            customStyle={{ marginBottom: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Markdown>{`\n              <Button\n              name=\" DEFAULT DISABLE\"\n              state={ButtonState.DISABLE}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n              `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button Ghost\n          </FontText.Heading2>\n\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            1. Button ghost type Default\n          </FontText.Heading5>\n          <Button\n            name=\"GHOST NORMAL\"\n            iconColor={\"white\"}\n            // enableButtonLeft={true}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            2. Button ghost type Active\n          </FontText.Heading5>\n          <Button\n            name=\"GHOST ACTIVE\"\n            state={ButtonState.ACTIVE}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            3. Button ghost type Disable\n          </FontText.Heading5>\n          <Button\n            name=\" GHOST DISABLE\"\n            state={ButtonState.DISABLE}\n            type={ButtonType.GHOST}\n            customStyle={{ marginBottom: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Markdown>{`\n              <Button\n              name=\" DEFAULT DISABLE\"\n              state={ButtonState.DISABLE}\n              type={ButtonType.GHOST}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button with left and right icon\n          </FontText.Heading2>\n\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            enableButtonRight={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customStyle={{ marginBottom: 16 }}\n          />\n\n          <Markdown>{`\n             <Button\n             name=\"DEFAULT NORMAL\"\n             iconColor={\"white\"}\n             enableButtonLeft={true}\n             enableButtonRight={true}\n             onPress={() => {\n               alert(\"abc\");\n             }}\n           />\n              `}</Markdown>\n\n          <FontText.Heading3\n            style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n          >\n            Icon name I use react-native-vector-icons/Feather you can get in\n            link: #https://feathericons.com, and change with props leftIconName\n            and rightIconName . If don't have icon You need you get custom with\n            customRightComponent and customLeftComponent props\n          </FontText.Heading3>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button custom leftIconName props\n          </FontText.Heading2>\n\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            leftIconName={\"activity\"}\n            enableButtonRight={false}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customStyle={{ marginBottom: 16 }}\n          />\n\n          <Markdown>{`\n             <Button\n             name=\"DEFAULT NORMAL\"\n             iconColor={\"white\"}\n             enableButtonLeft={true}\n             leftIconName={\"activity\"}\n             enableButtonRight={false}\n             onPress={() => {\n               alert(\"abc\");\n             }}\n             customStyle={{ marginBottom: 16 }}\n           />\n              `}</Markdown>\n\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport FloatButton from \"./FloatButton\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst FloatButtonStories = storiesOf(\"FloatButton\", module);\n\n// lets storybook know to show the knobs addon for this story\nFloatButtonStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\nFloatButtonStories.add(\"Import and Props\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Import\n        </FontText.Heading2>\n        <Markdown>{`\n        import { FloatButton } from 'pharmacity-component-kits'\n        `}</Markdown>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Props\n        </FontText.Heading2>\n        <View style={styles.table}>\n          {generateRow(true, \"Name\", \"Type\", \"Default\")}\n          {generateRow(false, \"size\", \"Double\", \"48.0\")}\n          {generateRow(false, \"rounded\", \"boolean\", \"false\")}\n          {generateRow(false, \"iconColor\", \"String\", \"black\")}\n          {generateRow(false, \"onPress\", \"Function\", \"null\")}\n          {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n          {generateRow(false, \"iconName\", \"String\", \"chevron-left\")}\n          {generateRow(false, \"customIcon\", \"Component\", \"null\")}\n        </View>\n\n        <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n          {generateExplainRow(true, \"Name\", \"Explain\")}\n          {generateExplainRow(false, \"size\", \"Size of FloatButton\")}\n          {generateExplainRow(\n            false,\n            \"rounded\",\n            \"if you want FloatButton type Round, You can set it True\"\n          )}\n          {generateExplainRow(false, \"iconColor\", \"Color of icon\")}\n          {generateExplainRow(\n            false,\n            \"onPress\",\n            \"Function when click FloatButton\"\n          )}\n          {generateExplainRow(\n            false,\n            \"customStyle\",\n            \"You can custom FloatButton with it\"\n          )}\n          {generateExplainRow(\n            false,\n            \"iconName\",\n            \"You can custom icon name with it, find icon name in https://feathericons.com\"\n          )}\n          {generateExplainRow(\n            false,\n            \"customIcon\",\n            \"If U don't want use Feather Icon, You can custom icon component of button with it.\"\n          )}\n        </View>\n      </View>\n    }\n  />\n)).add(\"Example\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Float Button Default\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton rounded={false} />\n          <FloatButton customStyle={{ marginHorizontal: 8 }} size={60} />\n        </View>\n\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Float Button Round\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n          <FloatButton rounded={true} />\n          <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n              `}</Markdown>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # FloatButton Custom Icon name\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton\n            iconName={\"activity\"}\n            rounded={true}\n            customStyle={{ margin: 8 }}\n            size={60}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            iconName={\"activity\"}\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n              `}</Markdown>\n        <FontText.Heading3\n          style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n        >\n          Icon name I use react-native-vector-icons/Feather you can get in link:\n          #https://feathericons.com, and change with props iconName . If don't\n          have icon You need you get custom with customIcon props\n        </FontText.Heading3>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # FloatButton custom Icon\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8, marginBottom: 16 }}\n            size={60}\n            customIcon={<FontText.Body1>{\">\"}</FontText.Body1>}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            rounded={true}\n            customStyle={{ margin: 8 }}\n            size={60}\n            customIcon={<FontText.Body1>{\">\"}</FontText.Body1>}\n          />\n              `}</Markdown>\n\n        <View style={{ height: 56 }} />\n      </View>\n    }\n  />\n));\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"..\";\nimport { View } from \"react-native\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Input from \"./Input\";\n\nconst inputStories = storiesOf(\"Input\", module);\n\ninputStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n            import { Input } from 'pharmacity-component-kits'\n            `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"value\", \"String\", \"''\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"Null\")}\n            {generateRow(false, \"enableRightIcon\", \"boolean\", \"false\")}\n            {generateRow(false, \"iconRightName\", \"String\", \"x\")}\n\n            {generateRow(false, \"iconRightColor\", \"String\", \"black\")}\n            {generateRow(false, \"enableLeftIcon\", \"boolean\", \"false\")}\n            {generateRow(false, \"iconLeftName\", \"String\", \"search\")}\n            {generateRow(false, \"iconLeftColor\", \"string\", \"black\")}\n            {generateRow(false, \"editable\", \"boolean\", \"true\")}\n            {generateRow(false, \"onChangeText\", \"Function\", \"null\")}\n            {generateRow(false, \"placeholder\", \"String\", \"'\")}\n            {generateRow(false, \"customLeading\", \"Component\", \"null\")}\n            {generateRow(false, \"customTrailing\", \"Component\", \"null\")}\n\n            {generateRow(false, \"keyboardType\", \"String\", \"default\")}\n            {generateRow(false, \"isTextArea\", \"boolean\", \"false\")}\n\n            {generateRow(false, \"placeholderStyle\", \"Object\", \"null\")}\n            {generateRow(false, \"onRightClick\", \"Function\", \"null\")}\n            {generateRow(false, \"secureTextEntry\", \"boolean\", \"false\")}\n            {generateRow(\n              false,\n              \"inputColor\",\n              \"String\",\n              \"ColorApp.PRIMARY.blue_04\"\n            )}\n            {generateRow(false, \"topLabel\", \"String\", \"''\")}\n            {generateRow(false, \"containerStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(false, \"onPress\", \"Function when click Input\")}\n            {generateExplainRow(false, \"value\", \"Value of Input\")}\n            {generateExplainRow(false, \"customStyle\", \"Style custom for Input\")}\n\n            {generateExplainRow(\n              false,\n              \"enableRightIcon\",\n              \"On or off right icon\"\n            )}\n            {generateExplainRow(\n              false,\n              \"iconRightName\",\n              \"Icon name of right icon, use Feather Icon\"\n            )}\n\n            {generateExplainRow(false, \"iconRightColor\", \"Color of right icon\")}\n            {generateExplainRow(false, \"enableLeftIcon\", \"On or off left icon\")}\n            {generateExplainRow(\n              false,\n              \"iconLeftName\",\n              \"Icon name of left icon, use Feather Icon\"\n            )}\n            {generateExplainRow(false, \"iconLeftColor\", \"Color of left icon\")}\n            {generateExplainRow(false, \"editable\", \"Set edittable for input\")}\n            {generateExplainRow(\n              false,\n              \"onChangeText\",\n              \"Function when change text input\"\n            )}\n            {generateExplainRow(false, \"placeholder\", \"Placeholder of Input\")}\n            {generateExplainRow(\n              false,\n              \"customLeading\",\n              \"If Use don't want use icon feature for left, you can you it to custom\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTrailing\",\n              \"If Use don't want use icon feature for right, you can you it to custom\"\n            )}\n\n            {generateExplainRow(\n              false,\n              \"keyboardType\",\n              \"Keyboard type of input\"\n            )}\n            {generateExplainRow(\n              false,\n              \"isTextArea\",\n              \"If true, it's like TextArea\"\n            )}\n\n            {generateExplainRow(\n              false,\n              \"placeholderStyle\",\n              \"Custom placeholder style \"\n            )}\n            {generateExplainRow(\n              false,\n              \"onRightClick\",\n              \"Function when click right button, often reset text\"\n            )}\n            {generateExplainRow(\n              false,\n              \"secureTextEntry\",\n              \"Secure text like Password input\"\n            )}\n            {generateExplainRow(\n              false,\n              \"inputColor\",\n              \"Color of bottom line, icon, top label of input\"\n            )}\n            {generateExplainRow(false, \"topLabel\", \"value of top label.\")}\n            {generateExplainRow(\n              false,\n              \"containerStyle\",\n              \"Use can't custom input with it, example margin with another component\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input Default\n          </FontText.Heading2>\n\n          <Input placeholder={\"Your Phone Number\"} />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Close Button\n          </FontText.Heading2>\n\n          <Input placeholder={\"Your Phone Number\"} enableRightIcon={true} />\n          <Input\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            iconRightColor={\"red\"}\n          />\n\n          <Markdown>{`\n         <Input\n         placeholder={\"Your Phone Number\"}\n         enableRightIcon={true}\n         iconRightColor={\"red\"}\n       />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Left Icon\n          </FontText.Heading2>\n          <Input\n            placeholder={\"test color\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            iconRightColor={\"red\"}\n            inputColor={ColorApp.ACCENT.blue}\n          />\n\n          <Input\n            customStype={{\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            iconLeftName={\"activity\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            value={\"abc\"}\n            secureTextEntry={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Top Label\n          </FontText.Heading2>\n          <Input\n            // containerStyle={{ marginTop: 16 }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            // keyboardType={\"password\"}\n            topLabel=\"test\"\n          />\n\n          <Markdown>{`\n          <Input\n          // containerStyle={{ marginTop: 16 }}\n          placeholder={\"Your Phone Number\"}\n          enableRightIcon={true}\n          enableLeftIcon={true}\n          onRightClick={() => {\n            alert(\"abc\");\n          }}\n          // keyboardType={\"password\"}\n          topLabel=\"test\"\n        />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input Custom\n          </FontText.Heading2>\n\n          <Input\n            containerStyle={{\n              marginVertical: 16,\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            topLabel=\"test\"\n          />\n\n          <Markdown>{`\n          <Input\n          containerStyle={{\n            marginVertical: 16,\n            borderWidth: 1,\n            borderRadius: 4,\n            paddingHorizontal: 16,\n          }}\n          placeholder={\"Your Phone Number\"}\n          enableRightIcon={true}\n          enableLeftIcon={true}\n          onRightClick={() => {\n            alert(\"abc\");\n          }}\n          topLabel=\"test\"\n        />\n              `}</Markdown>\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport Avatar from \"./Avatar\";\nimport FloatButton from \"./FloatButton\";\nimport Label from \"./Label\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst avatarStories = storiesOf(\"Label\", module);\n\n// lets storybook know to show the knobs addon for this story\navatarStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\navatarStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n        import { Label } from 'pharmacity-component-kits'\n        `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"color\", \"String\", \"ColorApp.PRIMARY.blue_02\")}\n            {generateRow(false, \"text\", \"String\", \"''\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(false, \"color\", \"Background color of Label\")}\n            {generateExplainRow(false, \"text\", \"Value of text label\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"You can custom Label with it\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"You can custom text of Label with it\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Label Default\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n            <Label text={\"test\"} />\n            <Label\n              text={\"Semetic Megeta\"}\n              color={ColorApp.SEMATIC.megeta}\n              customStyle={{ marginHorizontal: 16 }}\n            />\n          </View>\n\n          <Markdown>{`\n           <Label\n           text={\"Semetic Megeta\"}\n           color={ColorApp.SEMATIC.megeta}\n           customStyle={{ marginHorizontal: 16 }}\n         />\n              `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Label Custom Text Style\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n            <Label\n              text={\"Custom Text Style\"}\n              color={ColorApp.SEMATIC.yellow}\n              customStyle={{ marginHorizontal: 16 }}\n              customTextStyle={{ fontSize: 30, lineHeight: 40 }}\n            />\n          </View>\n\n          <Markdown>{`\n           <Label\n           text={\"Custom Text Style\"}\n           color={ColorApp.SEMATIC.yellow}\n           customStyle={{ marginHorizontal: 16 }}\n           customTextStyle={{ fontSize: 30, lineHeight: 40 }}\n         />\n              `}</Markdown>\n\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport RadioButton from \"./RadioButton\";\nimport { withKnobs } from \"@storybook/addon-knobs\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nconst avatarStories = storiesOf(\"RadioButton\", module);\n\n// lets storybook know to show the knobs addon for this story\navatarStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\navatarStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n        import { RadioButton } from 'pharmacity-component-kits'\n        `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"active\", \"boolean\", \"false\")}\n            {generateRow(false, \"disabled\", \"boolean\", \"false\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(\n              false,\n              \"active\",\n              \"State display selected or none\"\n            )}\n            {generateExplainRow(\n              false,\n              \"disabled\",\n              \"State display setable for RadioButton\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"You can custom RadioButton with it\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Radio Button\n          </FontText.Heading2>\n          <View style={{ marginTop: 16 }}>\n            <View style={{ flexDirection: \"row\" }}>\n              <RadioButton customStyle={{ marginRight: 12 }} />\n              <FontText.Body1>Active:true ,Disable: false</FontText.Body1>\n            </View>\n\n            <View style={{ flexDirection: \"row\", marginVertical: 12 }}>\n              <RadioButton active={true} customStyle={{ marginRight: 12 }} />\n              <FontText.Body1>Active:true ,Disable: false</FontText.Body1>\n            </View>\n\n            <View style={{ flexDirection: \"row\" }}>\n              <RadioButton disabled={true} customStyle={{ marginRight: 12 }} />\n              <FontText.Body1>Active:false ,Disable: true</FontText.Body1>\n            </View>\n\n            <View style={{ flexDirection: \"row\", marginVertical: 12 }}>\n              <RadioButton\n                active={true}\n                disabled={true}\n                customStyle={{ marginRight: 12 }}\n              />\n              <FontText.Body1>Active:true ,Disable: true</FontText.Body1>\n            </View>\n          </View>\n\n          <Markdown>{`\n           <RadioButton\n           active={true}\n           disabled={true}\n           customStyle={{ marginRight: 12 }}\n         />\n              `}</Markdown>\n\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport Avatar from \"./Avatar\";\nimport TextButton from \"./TextButton\";\nimport RadioButton from \"./RadioButton\";\nimport Label from \"./Label\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst avatarStories = storiesOf(\"TextButton\", module);\n\n// lets storybook know to show the knobs addon for this story\navatarStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\navatarStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n        import { TextButton } from 'pharmacity-component-kits'\n        `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"{}\")}\n            {generateRow(false, \"name\", \"String\", \"''\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"state\", \"ButtonState\", \"ButtonState.DEFAULT\")}\n            {generateRow(false, \"enableButtonLeft\", \"boolean\", \"false\")}\n            {generateRow(false, \"enableButtonRight\", \"boolean\", \"false\")}\n            {generateRow(false, \"customLeftComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"customRightComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"leftIconName\", \"String\", \"plus\")}\n            {generateRow(false, \"rightIconName\", \"String\", \"chevron-right\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"You can custom TextButton with it\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"You can custom text of TextButton with it\"\n            )}\n            {generateExplainRow(false, \"name\", \"Value text of TextButton\")}\n            {generateExplainRow(\n              false,\n              \"onPress\",\n              \"Function when click TextButton\"\n            )}\n            {generateExplainRow(\n              false,\n              \"State\",\n              \"State of TextButton {Active,Default}\"\n            )}\n\n            {generateExplainRow(\n              false,\n              \"enableButtonLeft\",\n              \"On off Icon left, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"enableButtonRight\",\n              \"On off Icon right, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customLeftComponent\",\n              \"If U don't want use Feather Icon , You can custom left component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customRightComponent\",\n              \"If U don't want use Feather Icon, You can custom right component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"leftIconName\",\n              \"You can custom left icon name with it, find icon name in https://feathericons.com\"\n            )}\n            {generateExplainRow(\n              false,\n              \"rightIconName\",\n              \"You can custom right icon name with it, find icon name in https://feathericons.com\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Button\n          </FontText.Heading2>\n          <View style={{ marginTop: 16, alignItems: \"flex-start\" }}>\n            <TextButton\n              name=\"DEFAULT\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              // enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <View style={{ height: 16 }} />\n            <Markdown>{`\n          <TextButton\n          name=\"DEFAULT\"\n          state={ButtonState.DEFAULT}\n          customStyle={{ marginTop: 16 }}\n          // enableButtonRight={true}\n          onPress={() => {\n            alert(\"abc\");\n          }}\n        />\n              `}</Markdown>\n\n            <TextButton\n              name=\"DEFAULT WITH RIGHT ICON\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <View style={{ height: 16 }} />\n            <Markdown>{`\n         <TextButton\n         name=\"DEFAULT WITH RIGHT ICON\"\n         state={ButtonState.DEFAULT}\n         customStyle={{ marginTop: 16 }}\n         enableButtonRight={true}\n         onPress={() => {\n           alert(\"abc\");\n         }}\n       />\n              `}</Markdown>\n\n            <TextButton\n              name=\"ACTIVE WITH RIGHT ICON\"\n              state={ButtonState.ACTIVE}\n              customStyle={{ marginTop: 16 }}\n              enableButtonRight={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n\n            <View style={{ height: 16 }} />\n            <Markdown>{`\n         <TextButton\n         name=\"ACTIVE WITH RIGHT ICON\"\n         state={ButtonState.ACTIVE}\n         customStyle={{ marginTop: 16 }}\n         enableButtonRight={true}\n         onPress={() => {\n           alert(\"abc\");\n         }}\n       />\n              `}</Markdown>\n\n            <TextButton\n              name=\"DEFAULT WITH LEFT ICON\"\n              state={ButtonState.DEFAULT}\n              customStyle={{ marginTop: 16 }}\n              enableButtonLeft={true}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n          </View>\n          <View style={{ height: 16 }} />\n          <Markdown>{`\n           <TextButton\n           name=\"DEFAULT WITH LEFT ICON\"\n           state={ButtonState.DEFAULT}\n           customStyle={{ marginTop: 16 }}\n           enableButtonLeft={true}\n           onPress={() => {\n             alert(\"abc\");\n           }}\n         />\n              `}</Markdown>\n\n          <FontText.Heading3\n            style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n          >\n            Icon name I use react-native-vector-icons/Feather you can get in\n            link: #https://feathericons.com, and change with props leftIconName\n            or rightIconName . If don't have icon You need you get custom with\n            customLeftComponent props or customRightComponent\n          </FontText.Heading3>\n\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { ColorApp } from \"../index\";\nimport Icon from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    width: 24,\n    height: 24,\n    borderRadius: 4,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: ColorApp.NEUTRAL.gray_02,\n  },\n  textStyle: {\n    color: ColorApp.NEUTRAL.gray_07,\n    marginHorizontal: 4,\n  },\n});\n\nfunction FloatButton(props) {\n  const {\n    size = 24.0,\n    rounded = false,\n    iconColor = \"black\",\n    onPress,\n    customStyle,\n    iconName = \"chevron-left\",\n    customIcon,\n  } = props;\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.container,\n        {\n          width: size,\n          height: size,\n          borderRadius: rounded ? size / 2 : 4,\n        },\n        customStyle ?? {},\n      ]}\n      onPress={onPress}\n    >\n      {customIcon ? (\n        customIcon\n      ) : (\n        <Icon name={iconName} color={iconColor} size={size / 2} />\n      )}\n    </TouchableOpacity>\n  );\n}\n\nexport default FloatButton;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, TextInput } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nimport IconAwesome from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  placeholder: {\n    fontSize: 15,\n    lineHeight: 22,\n  },\n  input: {\n    // paddingHorizontal: 12,\n    paddingVertical: 0,\n    fontSize: 14,\n    borderBottomWidth: 1,\n    height: 40,\n    borderColor: ColorApp.NEUTRAL.gray_02,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    // backgroundColor: \"yellow\",\n    // backgroundColor: \"white\",\n  },\n  textInputStyle: {\n    flex: 1,\n    color: \"black\",\n    paddingVertical: 0,\n    fontSize: 15,\n    lineHeight: 22,\n    borderWidth: 0,\n  },\n  containerStyle: {\n    // backgroundColor: \"red\",\n    borderBottomWidth: 1,\n  },\n});\n\nfunction Input(props) {\n  const textInputRef = useRef(null);\n  const [focus, setFocus] = useState(false);\n  const {\n    onPress,\n    value,\n    enableRightIcon,\n    iconRightName = \"x\",\n    iconRightColor = \"black\",\n    enableLeftIcon,\n    iconLeftName = \"search\",\n    iconLeftColor = \"black\",\n    editable = true,\n    onChangeText,\n    placeholder,\n    customLeading,\n    customTrailing,\n    keyboardType,\n    customStyle,\n    isTextArea,\n    placeholderStyle,\n    onRightClick,\n    secureTextEntry = false,\n    inputColor = ColorApp.PRIMARY.blue_04,\n    topLabel,\n    containerStyle,\n  } = props;\n\n  const getChild = () => {\n    return (\n      <View\n        style={[\n          styles.containerStyle,\n          {\n            borderColor: focus ? inputColor : ColorApp.NEUTRAL.gray_02,\n            // flexDirection: \"row\",\n            // alignItems: \"center\",\n          },\n          containerStyle ?? {},\n        ]}\n      >\n        {topLabel ? (\n          <FontText.SmallText style={{ color: inputColor }}>\n            {topLabel}\n          </FontText.SmallText>\n        ) : null}\n        <View style={[styles.input, customStyle ? customStyle : {}]}>\n          {customLeading ? customLeading : null}\n          {enableLeftIcon ? (\n            <IconAwesome\n              name={iconLeftName}\n              size={20}\n              color={focus ? inputColor : iconLeftColor}\n              style={{ marginRight: 4 }}\n            />\n          ) : null}\n          <TextInput\n            onFocus={() => {\n              setFocus(true);\n            }}\n            onBlur={() => {\n              setFocus(false);\n            }}\n            ref={textInputRef}\n            numberOfLines={isTextArea ? 4 : null}\n            multiline={isTextArea ? true : false}\n            textAlignVertical={isTextArea ? \"top\" : \"center\"}\n            style={styles.textInputStyle}\n            editable={editable}\n            placeholder={placeholder ?? \"\"}\n            placeholderStyle={[styles.placeholder, placeholderStyle ?? {}]}\n            onChangeText={(value) => {\n              if (onChangeText) {\n                onChangeText(value);\n              }\n            }}\n            secureTextEntry={secureTextEntry}\n            keyboardType={keyboardType ? keyboardType : \"default\"}\n            value={value}\n            underlineColorAndroid=\"transparent\"\n          />\n          {/* {enableRightIcon ? ( */}\n          <TouchableOpacity\n            onPress={() => {\n              if (onRightClick) {\n                onRightClick();\n              }\n            }}\n          >\n            <IconAwesome\n              name={iconRightName}\n              size={20}\n              color={iconRightColor}\n              style={{ marginLeft: 4 }}\n            />\n          </TouchableOpacity>\n          {/* ) : null} */}\n          {customTrailing ? customTrailing : null}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      {editable ? (\n        getChild()\n      ) : (\n        <TouchableOpacity\n          onPress={() => {\n            onPress();\n          }}\n        >\n          {getChild()}\n        </TouchableOpacity>\n      )}\n      {/* {errorInputState && errorText ? (\n        <FontText.FontCaption\n          style={{ color: ColorApp.ERROR_COLOR, marginTop: 8 }}\n        >\n          {errorText ?? \"\"}\n        </FontText.FontCaption>\n      ) : null} */}\n    </View>\n  );\n}\n\nexport default Input;\n"],"sourceRoot":""}